<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1558" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1541.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1541.00"> </text><svg id="frames" x="10" width="1180" total_samples="375"><g><title>[unknown] (2 samples, 0.53%)</title><rect x="0.0000%" y="1461" width="0.5333%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1445" width="0.2667%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1429" width="0.2667%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1413" width="0.2667%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1397" width="0.2667%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1381" width="0.2667%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1365" width="0.2667%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1349" width="0.2667%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="0.2667%" y="1333" width="0.2667%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.5167%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.27%)</title><rect x="0.5333%" y="1109" width="0.2667%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.7833%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.27%)</title><rect x="0.5333%" y="1093" width="0.2667%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.7833%" y="1103.50"></text></g><g><title>__GI___libc_free (1 samples, 0.27%)</title><rect x="0.5333%" y="1077" width="0.2667%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.7833%" y="1087.50"></text></g><g><title>core::mem::drop (2 samples, 0.53%)</title><rect x="0.5333%" y="1205" width="0.5333%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="2"/><text x="0.7833%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;iri_string::types::generic::normal::RiString&lt;iri_string::spec::IriSpec&gt;&gt; (2 samples, 0.53%)</title><rect x="0.5333%" y="1189" width="0.5333%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="2"/><text x="0.7833%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.53%)</title><rect x="0.5333%" y="1173" width="0.5333%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="2"/><text x="0.7833%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.53%)</title><rect x="0.5333%" y="1157" width="0.5333%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="2"/><text x="0.7833%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.53%)</title><rect x="0.5333%" y="1141" width="0.5333%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="2"/><text x="0.7833%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.53%)</title><rect x="0.5333%" y="1125" width="0.5333%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="2"/><text x="0.7833%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.27%)</title><rect x="0.8000%" y="1109" width="0.2667%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="1.0500%" y="1119.50"></text></g><g><title>iri_string::resolve_old::resolve (4 samples, 1.07%)</title><rect x="1.0667%" y="1189" width="1.0667%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="4"/><text x="1.3167%" y="1199.50"></text></g><g><title>__GI___libc_free (3 samples, 0.80%)</title><rect x="1.3333%" y="1173" width="0.8000%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="3"/><text x="1.5833%" y="1183.50"></text></g><g><title>_int_free (2 samples, 0.53%)</title><rect x="1.6000%" y="1157" width="0.5333%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="2"/><text x="1.8500%" y="1167.50"></text></g><g><title>iri_string::parser::details::path_absolute (1 samples, 0.27%)</title><rect x="2.1333%" y="741" width="0.2667%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="1"/><text x="2.3833%" y="751.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.27%)</title><rect x="2.1333%" y="725" width="0.2667%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="2.3833%" y="735.50"></text></g><g><title>&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.27%)</title><rect x="2.4000%" y="725" width="0.2667%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="1"/><text x="2.6500%" y="735.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.53%)</title><rect x="4.0000%" y="421" width="0.5333%" height="15" fill="rgb(249,31,29)" fg:x="15" fg:w="2"/><text x="4.2500%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.27%)</title><rect x="4.2667%" y="405" width="0.2667%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="1"/><text x="4.5167%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.27%)</title><rect x="4.2667%" y="389" width="0.2667%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="1"/><text x="4.5167%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.27%)</title><rect x="4.2667%" y="373" width="0.2667%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="1"/><text x="4.5167%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 2.13%)</title><rect x="3.2000%" y="629" width="2.1333%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="8"/><text x="3.4500%" y="639.50">c..</text></g><g><title>iri_string::parser::details::segment_nz_nc (8 samples, 2.13%)</title><rect x="3.2000%" y="613" width="2.1333%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="8"/><text x="3.4500%" y="623.50">i..</text></g><g><title>nom::error::context::{{closure}} (8 samples, 2.13%)</title><rect x="3.2000%" y="597" width="2.1333%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="8"/><text x="3.4500%" y="607.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8 samples, 2.13%)</title><rect x="3.2000%" y="581" width="2.1333%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="8"/><text x="3.4500%" y="591.50">&lt;..</text></g><g><title>nom::combinator::recognize::{{closure}} (8 samples, 2.13%)</title><rect x="3.2000%" y="565" width="2.1333%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="8"/><text x="3.4500%" y="575.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8 samples, 2.13%)</title><rect x="3.2000%" y="549" width="2.1333%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="8"/><text x="3.4500%" y="559.50">&lt;..</text></g><g><title>nom::multi::many1_count::{{closure}} (8 samples, 2.13%)</title><rect x="3.2000%" y="533" width="2.1333%" height="15" fill="rgb(233,36,39)" fg:x="12" fg:w="8"/><text x="3.4500%" y="543.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 1.87%)</title><rect x="3.4667%" y="517" width="1.8667%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="7"/><text x="3.7167%" y="527.50">&lt;..</text></g><g><title>nom::branch::alt::{{closure}} (7 samples, 1.87%)</title><rect x="3.4667%" y="501" width="1.8667%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="7"/><text x="3.7167%" y="511.50">n..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (7 samples, 1.87%)</title><rect x="3.4667%" y="485" width="1.8667%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="7"/><text x="3.7167%" y="495.50">&lt;..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (7 samples, 1.87%)</title><rect x="3.4667%" y="469" width="1.8667%" height="15" fill="rgb(232,182,51)" fg:x="13" fg:w="7"/><text x="3.7167%" y="479.50">&lt;..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="3.7333%" y="453" width="1.6000%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="6"/><text x="3.9833%" y="463.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}} (6 samples, 1.60%)</title><rect x="3.7333%" y="437" width="1.6000%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="6"/><text x="3.9833%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.80%)</title><rect x="4.5333%" y="421" width="0.8000%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="3"/><text x="4.7833%" y="431.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (3 samples, 0.80%)</title><rect x="4.5333%" y="405" width="0.8000%" height="15" fill="rgb(213,116,39)" fg:x="17" fg:w="3"/><text x="4.7833%" y="415.50"></text></g><g><title>iri_string::parser::details::segment_nz_nc::{{closure}} (3 samples, 0.80%)</title><rect x="4.5333%" y="389" width="0.8000%" height="15" fill="rgb(222,207,29)" fg:x="17" fg:w="3"/><text x="4.7833%" y="399.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (3 samples, 0.80%)</title><rect x="4.5333%" y="373" width="0.8000%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="3"/><text x="4.7833%" y="383.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (3 samples, 0.80%)</title><rect x="4.5333%" y="357" width="0.8000%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="3"/><text x="4.7833%" y="367.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (1 samples, 0.27%)</title><rect x="5.0667%" y="341" width="0.2667%" height="15" fill="rgb(250,191,14)" fg:x="19" fg:w="1"/><text x="5.3167%" y="351.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (3 samples, 0.80%)</title><rect x="13.6000%" y="485" width="0.8000%" height="15" fill="rgb(239,60,40)" fg:x="51" fg:w="3"/><text x="13.8500%" y="495.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.53%)</title><rect x="14.4000%" y="485" width="0.5333%" height="15" fill="rgb(206,27,48)" fg:x="54" fg:w="2"/><text x="14.6500%" y="495.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.53%)</title><rect x="33.0667%" y="389" width="0.5333%" height="15" fill="rgb(225,35,8)" fg:x="124" fg:w="2"/><text x="33.3167%" y="399.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (5 samples, 1.33%)</title><rect x="33.6000%" y="389" width="1.3333%" height="15" fill="rgb(250,213,24)" fg:x="126" fg:w="5"/><text x="33.8500%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.27%)</title><rect x="34.6667%" y="373" width="0.2667%" height="15" fill="rgb(247,123,22)" fg:x="130" fg:w="1"/><text x="34.9167%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.27%)</title><rect x="34.6667%" y="357" width="0.2667%" height="15" fill="rgb(231,138,38)" fg:x="130" fg:w="1"/><text x="34.9167%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.27%)</title><rect x="34.6667%" y="341" width="0.2667%" height="15" fill="rgb(231,145,46)" fg:x="130" fg:w="1"/><text x="34.9167%" y="351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.27%)</title><rect x="37.6000%" y="309" width="0.2667%" height="15" fill="rgb(251,118,11)" fg:x="141" fg:w="1"/><text x="37.8500%" y="319.50"></text></g><g><title>iri_string::parser::details::pct_encoded (1 samples, 0.27%)</title><rect x="37.6000%" y="293" width="0.2667%" height="15" fill="rgb(217,147,25)" fg:x="141" fg:w="1"/><text x="37.8500%" y="303.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.27%)</title><rect x="37.6000%" y="277" width="0.2667%" height="15" fill="rgb(247,81,37)" fg:x="141" fg:w="1"/><text x="37.8500%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.27%)</title><rect x="37.6000%" y="261" width="0.2667%" height="15" fill="rgb(209,12,38)" fg:x="141" fg:w="1"/><text x="37.8500%" y="271.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (1 samples, 0.27%)</title><rect x="37.6000%" y="245" width="0.2667%" height="15" fill="rgb(227,1,9)" fg:x="141" fg:w="1"/><text x="37.8500%" y="255.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.27%)</title><rect x="37.6000%" y="229" width="0.2667%" height="15" fill="rgb(248,47,43)" fg:x="141" fg:w="1"/><text x="37.8500%" y="239.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (14 samples, 3.73%)</title><rect x="38.1333%" y="293" width="3.7333%" height="15" fill="rgb(221,10,30)" fg:x="143" fg:w="14"/><text x="38.3833%" y="303.50">&lt;&amp;st..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.27%)</title><rect x="41.6000%" y="277" width="0.2667%" height="15" fill="rgb(210,229,1)" fg:x="156" fg:w="1"/><text x="41.8500%" y="287.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.27%)</title><rect x="41.6000%" y="261" width="0.2667%" height="15" fill="rgb(222,148,37)" fg:x="156" fg:w="1"/><text x="41.8500%" y="271.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.27%)</title><rect x="41.6000%" y="245" width="0.2667%" height="15" fill="rgb(234,67,33)" fg:x="156" fg:w="1"/><text x="41.8500%" y="255.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::len (5 samples, 1.33%)</title><rect x="41.8667%" y="293" width="1.3333%" height="15" fill="rgb(247,98,35)" fg:x="157" fg:w="5"/><text x="42.1167%" y="303.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (5 samples, 1.33%)</title><rect x="41.8667%" y="277" width="1.3333%" height="15" fill="rgb(247,138,52)" fg:x="157" fg:w="5"/><text x="42.1167%" y="287.50"></text></g><g><title>core::char::methods::len_utf8 (5 samples, 1.33%)</title><rect x="41.8667%" y="261" width="1.3333%" height="15" fill="rgb(213,79,30)" fg:x="157" fg:w="5"/><text x="42.1167%" y="271.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.80%)</title><rect x="43.2000%" y="293" width="0.8000%" height="15" fill="rgb(246,177,23)" fg:x="162" fg:w="3"/><text x="43.4500%" y="303.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.80%)</title><rect x="43.2000%" y="277" width="0.8000%" height="15" fill="rgb(230,62,27)" fg:x="162" fg:w="3"/><text x="43.4500%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.27%)</title><rect x="43.7333%" y="261" width="0.2667%" height="15" fill="rgb(216,154,8)" fg:x="164" fg:w="1"/><text x="43.9833%" y="271.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (13 samples, 3.47%)</title><rect x="44.8000%" y="229" width="3.4667%" height="15" fill="rgb(244,35,45)" fg:x="168" fg:w="13"/><text x="45.0500%" y="239.50">&lt;ir..</text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (7 samples, 1.87%)</title><rect x="46.4000%" y="213" width="1.8667%" height="15" fill="rgb(251,115,12)" fg:x="174" fg:w="7"/><text x="46.6500%" y="223.50">c..</text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (19 samples, 5.07%)</title><rect x="44.2667%" y="245" width="5.0667%" height="15" fill="rgb(240,54,50)" fg:x="166" fg:w="19"/><text x="44.5167%" y="255.50">&lt;iri_s..</text></g><g><title>iri_string::parser::char::is_ucschar (4 samples, 1.07%)</title><rect x="48.2667%" y="229" width="1.0667%" height="15" fill="rgb(233,84,52)" fg:x="181" fg:w="4"/><text x="48.5167%" y="239.50"></text></g><g><title>core::ops::function::FnMut::call_mut (159 samples, 42.40%)</title><rect x="7.2000%" y="565" width="42.4000%" height="15" fill="rgb(207,117,47)" fg:x="27" fg:w="159"/><text x="7.4500%" y="575.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::segment (159 samples, 42.40%)</title><rect x="7.2000%" y="549" width="42.4000%" height="15" fill="rgb(249,43,39)" fg:x="27" fg:w="159"/><text x="7.4500%" y="559.50">iri_string::parser::details::segment</text></g><g><title>nom::error::context::{{closure}} (158 samples, 42.13%)</title><rect x="7.4667%" y="533" width="42.1333%" height="15" fill="rgb(209,38,44)" fg:x="28" fg:w="158"/><text x="7.7167%" y="543.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (139 samples, 37.07%)</title><rect x="12.5333%" y="517" width="37.0667%" height="15" fill="rgb(236,212,23)" fg:x="47" fg:w="139"/><text x="12.7833%" y="527.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::combinator::recognize::{{closure}} (137 samples, 36.53%)</title><rect x="13.0667%" y="501" width="36.5333%" height="15" fill="rgb(242,79,21)" fg:x="49" fg:w="137"/><text x="13.3167%" y="511.50">nom::combinator::recognize::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (130 samples, 34.67%)</title><rect x="14.9333%" y="485" width="34.6667%" height="15" fill="rgb(211,96,35)" fg:x="56" fg:w="130"/><text x="15.1833%" y="495.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::multi::many0_count::{{closure}} (130 samples, 34.67%)</title><rect x="14.9333%" y="469" width="34.6667%" height="15" fill="rgb(253,215,40)" fg:x="56" fg:w="130"/><text x="15.1833%" y="479.50">nom::multi::many0_count::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (121 samples, 32.27%)</title><rect x="17.3333%" y="453" width="32.2667%" height="15" fill="rgb(211,81,21)" fg:x="65" fg:w="121"/><text x="17.5833%" y="463.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (116 samples, 30.93%)</title><rect x="18.6667%" y="437" width="30.9333%" height="15" fill="rgb(208,190,38)" fg:x="70" fg:w="116"/><text x="18.9167%" y="447.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::pchar (116 samples, 30.93%)</title><rect x="18.6667%" y="421" width="30.9333%" height="15" fill="rgb(235,213,38)" fg:x="70" fg:w="116"/><text x="18.9167%" y="431.50">iri_string::parser::details::pchar</text></g><g><title>nom::combinator::recognize::{{closure}} (116 samples, 30.93%)</title><rect x="18.6667%" y="405" width="30.9333%" height="15" fill="rgb(237,122,38)" fg:x="70" fg:w="116"/><text x="18.9167%" y="415.50">nom::combinator::recognize::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (55 samples, 14.67%)</title><rect x="34.9333%" y="389" width="14.6667%" height="15" fill="rgb(244,218,35)" fg:x="131" fg:w="55"/><text x="35.1833%" y="399.50">&lt;F as nom::internal::P..</text></g><g><title>nom::branch::alt::{{closure}} (55 samples, 14.67%)</title><rect x="34.9333%" y="373" width="14.6667%" height="15" fill="rgb(240,68,47)" fg:x="131" fg:w="55"/><text x="35.1833%" y="383.50">nom::branch::alt::{{cl..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (55 samples, 14.67%)</title><rect x="34.9333%" y="357" width="14.6667%" height="15" fill="rgb(210,16,53)" fg:x="131" fg:w="55"/><text x="35.1833%" y="367.50">&lt;(A,B) as nom::branch:..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (51 samples, 13.60%)</title><rect x="36.0000%" y="341" width="13.6000%" height="15" fill="rgb(235,124,12)" fg:x="135" fg:w="51"/><text x="36.2500%" y="351.50">&lt;nom::internal::Map&lt;F..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (49 samples, 13.07%)</title><rect x="36.5333%" y="325" width="13.0667%" height="15" fill="rgb(224,169,11)" fg:x="137" fg:w="49"/><text x="36.7833%" y="335.50">&lt;F as nom::internal:..</text></g><g><title>nom::character::complete::satisfy::{{closure}} (44 samples, 11.73%)</title><rect x="37.8667%" y="309" width="11.7333%" height="15" fill="rgb(250,166,2)" fg:x="142" fg:w="44"/><text x="38.1167%" y="319.50">nom::character::c..</text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 5.60%)</title><rect x="44.0000%" y="293" width="5.6000%" height="15" fill="rgb(242,216,29)" fg:x="165" fg:w="21"/><text x="44.2500%" y="303.50">core::o..</text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (21 samples, 5.60%)</title><rect x="44.0000%" y="277" width="5.6000%" height="15" fill="rgb(230,116,27)" fg:x="165" fg:w="21"/><text x="44.2500%" y="287.50">nom::ch..</text></g><g><title>iri_string::parser::details::pchar::{{closure}} (21 samples, 5.60%)</title><rect x="44.0000%" y="261" width="5.6000%" height="15" fill="rgb(228,99,48)" fg:x="165" fg:w="21"/><text x="44.2500%" y="271.50">iri_str..</text></g><g><title>iri_string::parser::char::is_sub_delim (1 samples, 0.27%)</title><rect x="49.3333%" y="245" width="0.2667%" height="15" fill="rgb(253,11,6)" fg:x="185" fg:w="1"/><text x="49.5833%" y="255.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (3 samples, 0.80%)</title><rect x="50.1333%" y="549" width="0.8000%" height="15" fill="rgb(247,143,39)" fg:x="188" fg:w="3"/><text x="50.3833%" y="559.50"></text></g><g><title>iri_string::parser::details::decompose_relative_ref (185 samples, 49.33%)</title><rect x="2.1333%" y="997" width="49.3333%" height="15" fill="rgb(236,97,10)" fg:x="8" fg:w="185"/><text x="2.3833%" y="1007.50">iri_string::parser::details::decompose_relative_ref</text></g><g><title>nom::error::context::{{closure}} (185 samples, 49.33%)</title><rect x="2.1333%" y="981" width="49.3333%" height="15" fill="rgb(233,208,19)" fg:x="8" fg:w="185"/><text x="2.3833%" y="991.50">nom::error::context::{{closure}}</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (185 samples, 49.33%)</title><rect x="2.1333%" y="965" width="49.3333%" height="15" fill="rgb(216,164,2)" fg:x="8" fg:w="185"/><text x="2.3833%" y="975.50">&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (185 samples, 49.33%)</title><rect x="2.1333%" y="949" width="49.3333%" height="15" fill="rgb(220,129,5)" fg:x="8" fg:w="185"/><text x="2.3833%" y="959.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::sequence::tuple::{{closure}} (185 samples, 49.33%)</title><rect x="2.1333%" y="933" width="49.3333%" height="15" fill="rgb(242,17,10)" fg:x="8" fg:w="185"/><text x="2.3833%" y="943.50">nom::sequence::tuple::{{closure}}</text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (185 samples, 49.33%)</title><rect x="2.1333%" y="917" width="49.3333%" height="15" fill="rgb(242,107,0)" fg:x="8" fg:w="185"/><text x="2.3833%" y="927.50">&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (185 samples, 49.33%)</title><rect x="2.1333%" y="901" width="49.3333%" height="15" fill="rgb(251,28,31)" fg:x="8" fg:w="185"/><text x="2.3833%" y="911.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (185 samples, 49.33%)</title><rect x="2.1333%" y="885" width="49.3333%" height="15" fill="rgb(233,223,10)" fg:x="8" fg:w="185"/><text x="2.3833%" y="895.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::decompose_relative_part (185 samples, 49.33%)</title><rect x="2.1333%" y="869" width="49.3333%" height="15" fill="rgb(215,21,27)" fg:x="8" fg:w="185"/><text x="2.3833%" y="879.50">iri_string::parser::details::decompose_relative_part</text></g><g><title>nom::error::context::{{closure}} (185 samples, 49.33%)</title><rect x="2.1333%" y="853" width="49.3333%" height="15" fill="rgb(232,23,21)" fg:x="8" fg:w="185"/><text x="2.3833%" y="863.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (185 samples, 49.33%)</title><rect x="2.1333%" y="837" width="49.3333%" height="15" fill="rgb(244,5,23)" fg:x="8" fg:w="185"/><text x="2.3833%" y="847.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::branch::alt::{{closure}} (185 samples, 49.33%)</title><rect x="2.1333%" y="821" width="49.3333%" height="15" fill="rgb(226,81,46)" fg:x="8" fg:w="185"/><text x="2.3833%" y="831.50">nom::branch::alt::{{closure}}</text></g><g><title>&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (185 samples, 49.33%)</title><rect x="2.1333%" y="805" width="49.3333%" height="15" fill="rgb(247,70,30)" fg:x="8" fg:w="185"/><text x="2.3833%" y="815.50">&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (185 samples, 49.33%)</title><rect x="2.1333%" y="789" width="49.3333%" height="15" fill="rgb(212,68,19)" fg:x="8" fg:w="185"/><text x="2.3833%" y="799.50">&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (185 samples, 49.33%)</title><rect x="2.1333%" y="773" width="49.3333%" height="15" fill="rgb(240,187,13)" fg:x="8" fg:w="185"/><text x="2.3833%" y="783.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (185 samples, 49.33%)</title><rect x="2.1333%" y="757" width="49.3333%" height="15" fill="rgb(223,113,26)" fg:x="8" fg:w="185"/><text x="2.3833%" y="767.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::path_noscheme (184 samples, 49.07%)</title><rect x="2.4000%" y="741" width="49.0667%" height="15" fill="rgb(206,192,2)" fg:x="9" fg:w="184"/><text x="2.6500%" y="751.50">iri_string::parser::details::path_noscheme</text></g><g><title>nom::error::context::{{closure}} (183 samples, 48.80%)</title><rect x="2.6667%" y="725" width="48.8000%" height="15" fill="rgb(241,108,4)" fg:x="10" fg:w="183"/><text x="2.9167%" y="735.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (183 samples, 48.80%)</title><rect x="2.6667%" y="709" width="48.8000%" height="15" fill="rgb(247,173,49)" fg:x="10" fg:w="183"/><text x="2.9167%" y="719.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::combinator::recognize::{{closure}} (182 samples, 48.53%)</title><rect x="2.9333%" y="693" width="48.5333%" height="15" fill="rgb(224,114,35)" fg:x="11" fg:w="182"/><text x="3.1833%" y="703.50">nom::combinator::recognize::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (181 samples, 48.27%)</title><rect x="3.2000%" y="677" width="48.2667%" height="15" fill="rgb(245,159,27)" fg:x="12" fg:w="181"/><text x="3.4500%" y="687.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::sequence::pair::{{closure}} (181 samples, 48.27%)</title><rect x="3.2000%" y="661" width="48.2667%" height="15" fill="rgb(245,172,44)" fg:x="12" fg:w="181"/><text x="3.4500%" y="671.50">nom::sequence::pair::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (181 samples, 48.27%)</title><rect x="3.2000%" y="645" width="48.2667%" height="15" fill="rgb(236,23,11)" fg:x="12" fg:w="181"/><text x="3.4500%" y="655.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::multi::many0_count::{{closure}} (173 samples, 46.13%)</title><rect x="5.3333%" y="629" width="46.1333%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="173"/><text x="5.5833%" y="639.50">nom::multi::many0_count::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (169 samples, 45.07%)</title><rect x="6.4000%" y="613" width="45.0667%" height="15" fill="rgb(237,72,25)" fg:x="24" fg:w="169"/><text x="6.6500%" y="623.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::sequence::preceded::{{closure}} (167 samples, 44.53%)</title><rect x="6.9333%" y="597" width="44.5333%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="167"/><text x="7.1833%" y="607.50">nom::sequence::preceded::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (166 samples, 44.27%)</title><rect x="7.2000%" y="581" width="44.2667%" height="15" fill="rgb(217,125,39)" fg:x="27" fg:w="166"/><text x="7.4500%" y="591.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::character::complete::char::{{closure}} (7 samples, 1.87%)</title><rect x="49.6000%" y="565" width="1.8667%" height="15" fill="rgb(235,36,10)" fg:x="186" fg:w="7"/><text x="49.8500%" y="575.50">n..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.53%)</title><rect x="50.9333%" y="549" width="0.5333%" height="15" fill="rgb(251,123,47)" fg:x="191" fg:w="2"/><text x="51.1833%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.53%)</title><rect x="50.9333%" y="533" width="0.5333%" height="15" fill="rgb(221,13,13)" fg:x="191" fg:w="2"/><text x="51.1833%" y="543.50"></text></g><g><title>nom::bytes::complete::tag::{{closure}} (1 samples, 0.27%)</title><rect x="52.0000%" y="741" width="0.2667%" height="15" fill="rgb(238,131,9)" fg:x="195" fg:w="1"/><text x="52.2500%" y="751.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (1 samples, 0.27%)</title><rect x="52.0000%" y="725" width="0.2667%" height="15" fill="rgb(211,50,8)" fg:x="195" fg:w="1"/><text x="52.2500%" y="735.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::Compare&lt;&amp;[u8]&gt;&gt;::compare (1 samples, 0.27%)</title><rect x="52.0000%" y="709" width="0.2667%" height="15" fill="rgb(245,182,24)" fg:x="195" fg:w="1"/><text x="52.2500%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1 samples, 0.27%)</title><rect x="52.0000%" y="693" width="0.2667%" height="15" fill="rgb(242,14,37)" fg:x="195" fg:w="1"/><text x="52.2500%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.27%)</title><rect x="52.0000%" y="677" width="0.2667%" height="15" fill="rgb(246,228,12)" fg:x="195" fg:w="1"/><text x="52.2500%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.27%)</title><rect x="52.0000%" y="661" width="0.2667%" height="15" fill="rgb(213,55,15)" fg:x="195" fg:w="1"/><text x="52.2500%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.27%)</title><rect x="52.0000%" y="645" width="0.2667%" height="15" fill="rgb(209,9,3)" fg:x="195" fg:w="1"/><text x="52.2500%" y="655.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.27%)</title><rect x="52.2667%" y="629" width="0.2667%" height="15" fill="rgb(230,59,30)" fg:x="196" fg:w="1"/><text x="52.5167%" y="639.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.27%)</title><rect x="52.8000%" y="469" width="0.2667%" height="15" fill="rgb(209,121,21)" fg:x="198" fg:w="1"/><text x="53.0500%" y="479.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.53%)</title><rect x="55.4667%" y="373" width="0.5333%" height="15" fill="rgb(220,109,13)" fg:x="208" fg:w="2"/><text x="55.7167%" y="383.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.53%)</title><rect x="56.0000%" y="373" width="0.5333%" height="15" fill="rgb(232,18,1)" fg:x="210" fg:w="2"/><text x="56.2500%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.27%)</title><rect x="56.2667%" y="357" width="0.2667%" height="15" fill="rgb(215,41,42)" fg:x="211" fg:w="1"/><text x="56.5167%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.27%)</title><rect x="56.2667%" y="341" width="0.2667%" height="15" fill="rgb(224,123,36)" fg:x="211" fg:w="1"/><text x="56.5167%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.27%)</title><rect x="56.2667%" y="325" width="0.2667%" height="15" fill="rgb(240,125,3)" fg:x="211" fg:w="1"/><text x="56.5167%" y="335.50"></text></g><g><title>nom::error::context (1 samples, 0.27%)</title><rect x="57.3333%" y="261" width="0.2667%" height="15" fill="rgb(205,98,50)" fg:x="215" fg:w="1"/><text x="57.5833%" y="271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.53%)</title><rect x="57.3333%" y="293" width="0.5333%" height="15" fill="rgb(205,185,37)" fg:x="215" fg:w="2"/><text x="57.5833%" y="303.50"></text></g><g><title>iri_string::parser::details::pct_encoded (2 samples, 0.53%)</title><rect x="57.3333%" y="277" width="0.5333%" height="15" fill="rgb(238,207,15)" fg:x="215" fg:w="2"/><text x="57.5833%" y="287.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.27%)</title><rect x="57.6000%" y="261" width="0.2667%" height="15" fill="rgb(213,199,42)" fg:x="216" fg:w="1"/><text x="57.8500%" y="271.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (4 samples, 1.07%)</title><rect x="57.8667%" y="277" width="1.0667%" height="15" fill="rgb(235,201,11)" fg:x="217" fg:w="4"/><text x="58.1167%" y="287.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.53%)</title><rect x="58.4000%" y="261" width="0.5333%" height="15" fill="rgb(207,46,11)" fg:x="219" fg:w="2"/><text x="58.6500%" y="271.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.53%)</title><rect x="58.4000%" y="245" width="0.5333%" height="15" fill="rgb(241,35,35)" fg:x="219" fg:w="2"/><text x="58.6500%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.53%)</title><rect x="58.4000%" y="229" width="0.5333%" height="15" fill="rgb(243,32,47)" fg:x="219" fg:w="2"/><text x="58.6500%" y="239.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.27%)</title><rect x="58.6667%" y="213" width="0.2667%" height="15" fill="rgb(247,202,23)" fg:x="220" fg:w="1"/><text x="58.9167%" y="223.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.53%)</title><rect x="58.9333%" y="277" width="0.5333%" height="15" fill="rgb(219,102,11)" fg:x="221" fg:w="2"/><text x="59.1833%" y="287.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.53%)</title><rect x="58.9333%" y="261" width="0.5333%" height="15" fill="rgb(243,110,44)" fg:x="221" fg:w="2"/><text x="59.1833%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.27%)</title><rect x="59.2000%" y="245" width="0.2667%" height="15" fill="rgb(222,74,54)" fg:x="222" fg:w="1"/><text x="59.4500%" y="255.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (36 samples, 9.60%)</title><rect x="52.2667%" y="725" width="9.6000%" height="15" fill="rgb(216,99,12)" fg:x="196" fg:w="36"/><text x="52.5167%" y="735.50">&lt;F as nom::int..</text></g><g><title>core::ops::function::FnMut::call_mut (36 samples, 9.60%)</title><rect x="52.2667%" y="709" width="9.6000%" height="15" fill="rgb(226,22,26)" fg:x="196" fg:w="36"/><text x="52.5167%" y="719.50">core::ops::fun..</text></g><g><title>iri_string::parser::details::path_abempty (36 samples, 9.60%)</title><rect x="52.2667%" y="693" width="9.6000%" height="15" fill="rgb(217,163,10)" fg:x="196" fg:w="36"/><text x="52.5167%" y="703.50">iri_string::pa..</text></g><g><title>nom::error::context::{{closure}} (36 samples, 9.60%)</title><rect x="52.2667%" y="677" width="9.6000%" height="15" fill="rgb(213,25,53)" fg:x="196" fg:w="36"/><text x="52.5167%" y="687.50">nom::error::co..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (36 samples, 9.60%)</title><rect x="52.2667%" y="661" width="9.6000%" height="15" fill="rgb(252,105,26)" fg:x="196" fg:w="36"/><text x="52.5167%" y="671.50">&lt;F as nom::int..</text></g><g><title>nom::combinator::recognize::{{closure}} (36 samples, 9.60%)</title><rect x="52.2667%" y="645" width="9.6000%" height="15" fill="rgb(220,39,43)" fg:x="196" fg:w="36"/><text x="52.5167%" y="655.50">nom::combinato..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 9.33%)</title><rect x="52.5333%" y="629" width="9.3333%" height="15" fill="rgb(229,68,48)" fg:x="197" fg:w="35"/><text x="52.7833%" y="639.50">&lt;F as nom::in..</text></g><g><title>nom::multi::many0_count::{{closure}} (35 samples, 9.33%)</title><rect x="52.5333%" y="613" width="9.3333%" height="15" fill="rgb(252,8,32)" fg:x="197" fg:w="35"/><text x="52.7833%" y="623.50">nom::multi::m..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 9.33%)</title><rect x="52.5333%" y="597" width="9.3333%" height="15" fill="rgb(223,20,43)" fg:x="197" fg:w="35"/><text x="52.7833%" y="607.50">&lt;F as nom::in..</text></g><g><title>nom::sequence::preceded::{{closure}} (35 samples, 9.33%)</title><rect x="52.5333%" y="581" width="9.3333%" height="15" fill="rgb(229,81,49)" fg:x="197" fg:w="35"/><text x="52.7833%" y="591.50">nom::sequence..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 9.33%)</title><rect x="52.5333%" y="565" width="9.3333%" height="15" fill="rgb(236,28,36)" fg:x="197" fg:w="35"/><text x="52.7833%" y="575.50">&lt;F as nom::in..</text></g><g><title>core::ops::function::FnMut::call_mut (35 samples, 9.33%)</title><rect x="52.5333%" y="549" width="9.3333%" height="15" fill="rgb(249,185,26)" fg:x="197" fg:w="35"/><text x="52.7833%" y="559.50">core::ops::fu..</text></g><g><title>iri_string::parser::details::segment (35 samples, 9.33%)</title><rect x="52.5333%" y="533" width="9.3333%" height="15" fill="rgb(249,174,33)" fg:x="197" fg:w="35"/><text x="52.7833%" y="543.50">iri_string::p..</text></g><g><title>nom::error::context::{{closure}} (35 samples, 9.33%)</title><rect x="52.5333%" y="517" width="9.3333%" height="15" fill="rgb(233,201,37)" fg:x="197" fg:w="35"/><text x="52.7833%" y="527.50">nom::error::c..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 9.07%)</title><rect x="52.8000%" y="501" width="9.0667%" height="15" fill="rgb(221,78,26)" fg:x="198" fg:w="34"/><text x="53.0500%" y="511.50">&lt;F as nom::in..</text></g><g><title>nom::combinator::recognize::{{closure}} (34 samples, 9.07%)</title><rect x="52.8000%" y="485" width="9.0667%" height="15" fill="rgb(250,127,30)" fg:x="198" fg:w="34"/><text x="53.0500%" y="495.50">nom::combinat..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (33 samples, 8.80%)</title><rect x="53.0667%" y="469" width="8.8000%" height="15" fill="rgb(230,49,44)" fg:x="199" fg:w="33"/><text x="53.3167%" y="479.50">&lt;F as nom::i..</text></g><g><title>nom::multi::many0_count::{{closure}} (33 samples, 8.80%)</title><rect x="53.0667%" y="453" width="8.8000%" height="15" fill="rgb(229,67,23)" fg:x="199" fg:w="33"/><text x="53.3167%" y="463.50">nom::multi::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (29 samples, 7.73%)</title><rect x="54.1333%" y="437" width="7.7333%" height="15" fill="rgb(249,83,47)" fg:x="203" fg:w="29"/><text x="54.3833%" y="447.50">&lt;F as nom::..</text></g><g><title>core::ops::function::FnMut::call_mut (28 samples, 7.47%)</title><rect x="54.4000%" y="421" width="7.4667%" height="15" fill="rgb(215,43,3)" fg:x="204" fg:w="28"/><text x="54.6500%" y="431.50">core::ops:..</text></g><g><title>iri_string::parser::details::pchar (28 samples, 7.47%)</title><rect x="54.4000%" y="405" width="7.4667%" height="15" fill="rgb(238,154,13)" fg:x="204" fg:w="28"/><text x="54.6500%" y="415.50">iri_string..</text></g><g><title>nom::combinator::recognize::{{closure}} (28 samples, 7.47%)</title><rect x="54.4000%" y="389" width="7.4667%" height="15" fill="rgb(219,56,2)" fg:x="204" fg:w="28"/><text x="54.6500%" y="399.50">nom::combi..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 5.33%)</title><rect x="56.5333%" y="373" width="5.3333%" height="15" fill="rgb(233,0,4)" fg:x="212" fg:w="20"/><text x="56.7833%" y="383.50">&lt;F as n..</text></g><g><title>nom::branch::alt::{{closure}} (20 samples, 5.33%)</title><rect x="56.5333%" y="357" width="5.3333%" height="15" fill="rgb(235,30,7)" fg:x="212" fg:w="20"/><text x="56.7833%" y="367.50">nom::br..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (20 samples, 5.33%)</title><rect x="56.5333%" y="341" width="5.3333%" height="15" fill="rgb(250,79,13)" fg:x="212" fg:w="20"/><text x="56.7833%" y="351.50">&lt;(A,B) ..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (19 samples, 5.07%)</title><rect x="56.8000%" y="325" width="5.0667%" height="15" fill="rgb(211,146,34)" fg:x="213" fg:w="19"/><text x="57.0500%" y="335.50">&lt;nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (18 samples, 4.80%)</title><rect x="57.0667%" y="309" width="4.8000%" height="15" fill="rgb(228,22,38)" fg:x="214" fg:w="18"/><text x="57.3167%" y="319.50">&lt;F as ..</text></g><g><title>nom::character::complete::satisfy::{{closure}} (15 samples, 4.00%)</title><rect x="57.8667%" y="293" width="4.0000%" height="15" fill="rgb(235,168,5)" fg:x="217" fg:w="15"/><text x="58.1167%" y="303.50">nom:..</text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 2.40%)</title><rect x="59.4667%" y="277" width="2.4000%" height="15" fill="rgb(221,155,16)" fg:x="223" fg:w="9"/><text x="59.7167%" y="287.50">co..</text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (9 samples, 2.40%)</title><rect x="59.4667%" y="261" width="2.4000%" height="15" fill="rgb(215,215,53)" fg:x="223" fg:w="9"/><text x="59.7167%" y="271.50">no..</text></g><g><title>iri_string::parser::details::pchar::{{closure}} (9 samples, 2.40%)</title><rect x="59.4667%" y="245" width="2.4000%" height="15" fill="rgb(223,4,10)" fg:x="223" fg:w="9"/><text x="59.7167%" y="255.50">ir..</text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (9 samples, 2.40%)</title><rect x="59.4667%" y="229" width="2.4000%" height="15" fill="rgb(234,103,6)" fg:x="223" fg:w="9"/><text x="59.7167%" y="239.50">&lt;i..</text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (8 samples, 2.13%)</title><rect x="59.7333%" y="213" width="2.1333%" height="15" fill="rgb(227,97,0)" fg:x="224" fg:w="8"/><text x="59.9833%" y="223.50">&lt;..</text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (5 samples, 1.33%)</title><rect x="60.5333%" y="197" width="1.3333%" height="15" fill="rgb(234,150,53)" fg:x="227" fg:w="5"/><text x="60.7833%" y="207.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.27%)</title><rect x="62.6667%" y="69" width="0.2667%" height="15" fill="rgb(228,201,54)" fg:x="235" fg:w="1"/><text x="62.9167%" y="79.50"></text></g><g><title>iri_string::parser::details::ipv4address (4 samples, 1.07%)</title><rect x="62.1333%" y="421" width="1.0667%" height="15" fill="rgb(222,22,37)" fg:x="233" fg:w="4"/><text x="62.3833%" y="431.50"></text></g><g><title>nom::error::context::{{closure}} (4 samples, 1.07%)</title><rect x="62.1333%" y="405" width="1.0667%" height="15" fill="rgb(237,53,32)" fg:x="233" fg:w="4"/><text x="62.3833%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="62.1333%" y="389" width="1.0667%" height="15" fill="rgb(233,25,53)" fg:x="233" fg:w="4"/><text x="62.3833%" y="399.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (4 samples, 1.07%)</title><rect x="62.1333%" y="373" width="1.0667%" height="15" fill="rgb(210,40,34)" fg:x="233" fg:w="4"/><text x="62.3833%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="62.1333%" y="357" width="1.0667%" height="15" fill="rgb(241,220,44)" fg:x="233" fg:w="4"/><text x="62.3833%" y="367.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (4 samples, 1.07%)</title><rect x="62.1333%" y="341" width="1.0667%" height="15" fill="rgb(235,28,35)" fg:x="233" fg:w="4"/><text x="62.3833%" y="351.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="62.1333%" y="325" width="1.0667%" height="15" fill="rgb(210,56,17)" fg:x="233" fg:w="4"/><text x="62.3833%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="62.1333%" y="309" width="1.0667%" height="15" fill="rgb(224,130,29)" fg:x="233" fg:w="4"/><text x="62.3833%" y="319.50"></text></g><g><title>nom::sequence::terminated::{{closure}} (4 samples, 1.07%)</title><rect x="62.1333%" y="293" width="1.0667%" height="15" fill="rgb(235,212,8)" fg:x="233" fg:w="4"/><text x="62.3833%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="62.1333%" y="277" width="1.0667%" height="15" fill="rgb(223,33,50)" fg:x="233" fg:w="4"/><text x="62.3833%" y="287.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 1.07%)</title><rect x="62.1333%" y="261" width="1.0667%" height="15" fill="rgb(219,149,13)" fg:x="233" fg:w="4"/><text x="62.3833%" y="271.50"></text></g><g><title>iri_string::parser::details::dec_octet (4 samples, 1.07%)</title><rect x="62.1333%" y="245" width="1.0667%" height="15" fill="rgb(250,156,29)" fg:x="233" fg:w="4"/><text x="62.3833%" y="255.50"></text></g><g><title>nom::error::context::{{closure}} (4 samples, 1.07%)</title><rect x="62.1333%" y="229" width="1.0667%" height="15" fill="rgb(216,193,19)" fg:x="233" fg:w="4"/><text x="62.3833%" y="239.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="62.1333%" y="213" width="1.0667%" height="15" fill="rgb(216,135,14)" fg:x="233" fg:w="4"/><text x="62.3833%" y="223.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (4 samples, 1.07%)</title><rect x="62.1333%" y="197" width="1.0667%" height="15" fill="rgb(241,47,5)" fg:x="233" fg:w="4"/><text x="62.3833%" y="207.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="62.1333%" y="181" width="1.0667%" height="15" fill="rgb(233,42,35)" fg:x="233" fg:w="4"/><text x="62.3833%" y="191.50"></text></g><g><title>nom::branch::alt::{{closure}} (4 samples, 1.07%)</title><rect x="62.1333%" y="165" width="1.0667%" height="15" fill="rgb(231,13,6)" fg:x="233" fg:w="4"/><text x="62.3833%" y="175.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (4 samples, 1.07%)</title><rect x="62.1333%" y="149" width="1.0667%" height="15" fill="rgb(207,181,40)" fg:x="233" fg:w="4"/><text x="62.3833%" y="159.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.53%)</title><rect x="62.6667%" y="133" width="0.5333%" height="15" fill="rgb(254,173,49)" fg:x="235" fg:w="2"/><text x="62.9167%" y="143.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (2 samples, 0.53%)</title><rect x="62.6667%" y="117" width="0.5333%" height="15" fill="rgb(221,1,38)" fg:x="235" fg:w="2"/><text x="62.9167%" y="127.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.53%)</title><rect x="62.6667%" y="101" width="0.5333%" height="15" fill="rgb(206,124,46)" fg:x="235" fg:w="2"/><text x="62.9167%" y="111.50"></text></g><g><title>nom::sequence::pair::{{closure}} (2 samples, 0.53%)</title><rect x="62.6667%" y="85" width="0.5333%" height="15" fill="rgb(249,21,11)" fg:x="235" fg:w="2"/><text x="62.9167%" y="95.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.27%)</title><rect x="62.9333%" y="69" width="0.2667%" height="15" fill="rgb(222,201,40)" fg:x="236" fg:w="1"/><text x="63.1833%" y="79.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.27%)</title><rect x="63.4667%" y="245" width="0.2667%" height="15" fill="rgb(235,61,29)" fg:x="238" fg:w="1"/><text x="63.7167%" y="255.50"></text></g><g><title>iri_string::parser::details::pct_encoded (1 samples, 0.27%)</title><rect x="63.4667%" y="229" width="0.2667%" height="15" fill="rgb(219,207,3)" fg:x="238" fg:w="1"/><text x="63.7167%" y="239.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.27%)</title><rect x="63.4667%" y="213" width="0.2667%" height="15" fill="rgb(222,56,46)" fg:x="238" fg:w="1"/><text x="63.7167%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.27%)</title><rect x="63.4667%" y="197" width="0.2667%" height="15" fill="rgb(239,76,54)" fg:x="238" fg:w="1"/><text x="63.7167%" y="207.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (1 samples, 0.27%)</title><rect x="63.4667%" y="181" width="0.2667%" height="15" fill="rgb(231,124,27)" fg:x="238" fg:w="1"/><text x="63.7167%" y="191.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.27%)</title><rect x="63.4667%" y="165" width="0.2667%" height="15" fill="rgb(249,195,6)" fg:x="238" fg:w="1"/><text x="63.7167%" y="175.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 2.93%)</title><rect x="62.1333%" y="549" width="2.9333%" height="15" fill="rgb(237,174,47)" fg:x="233" fg:w="11"/><text x="62.3833%" y="559.50">co..</text></g><g><title>iri_string::parser::details::host (11 samples, 2.93%)</title><rect x="62.1333%" y="533" width="2.9333%" height="15" fill="rgb(206,201,31)" fg:x="233" fg:w="11"/><text x="62.3833%" y="543.50">ir..</text></g><g><title>nom::error::context::{{closure}} (11 samples, 2.93%)</title><rect x="62.1333%" y="517" width="2.9333%" height="15" fill="rgb(231,57,52)" fg:x="233" fg:w="11"/><text x="62.3833%" y="527.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (11 samples, 2.93%)</title><rect x="62.1333%" y="501" width="2.9333%" height="15" fill="rgb(248,177,22)" fg:x="233" fg:w="11"/><text x="62.3833%" y="511.50">&lt;F..</text></g><g><title>nom::branch::alt::{{closure}} (11 samples, 2.93%)</title><rect x="62.1333%" y="485" width="2.9333%" height="15" fill="rgb(215,211,37)" fg:x="233" fg:w="11"/><text x="62.3833%" y="495.50">no..</text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (11 samples, 2.93%)</title><rect x="62.1333%" y="469" width="2.9333%" height="15" fill="rgb(241,128,51)" fg:x="233" fg:w="11"/><text x="62.3833%" y="479.50">&lt;(..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (11 samples, 2.93%)</title><rect x="62.1333%" y="453" width="2.9333%" height="15" fill="rgb(227,165,31)" fg:x="233" fg:w="11"/><text x="62.3833%" y="463.50">&lt;F..</text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 2.93%)</title><rect x="62.1333%" y="437" width="2.9333%" height="15" fill="rgb(228,167,24)" fg:x="233" fg:w="11"/><text x="62.3833%" y="447.50">co..</text></g><g><title>iri_string::parser::details::reg_name (7 samples, 1.87%)</title><rect x="63.2000%" y="421" width="1.8667%" height="15" fill="rgb(228,143,12)" fg:x="237" fg:w="7"/><text x="63.4500%" y="431.50">i..</text></g><g><title>nom::error::context::{{closure}} (7 samples, 1.87%)</title><rect x="63.2000%" y="405" width="1.8667%" height="15" fill="rgb(249,149,8)" fg:x="237" fg:w="7"/><text x="63.4500%" y="415.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 1.87%)</title><rect x="63.2000%" y="389" width="1.8667%" height="15" fill="rgb(243,35,44)" fg:x="237" fg:w="7"/><text x="63.4500%" y="399.50">&lt;..</text></g><g><title>nom::combinator::recognize::{{closure}} (7 samples, 1.87%)</title><rect x="63.2000%" y="373" width="1.8667%" height="15" fill="rgb(246,89,9)" fg:x="237" fg:w="7"/><text x="63.4500%" y="383.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 1.87%)</title><rect x="63.2000%" y="357" width="1.8667%" height="15" fill="rgb(233,213,13)" fg:x="237" fg:w="7"/><text x="63.4500%" y="367.50">&lt;..</text></g><g><title>nom::multi::many0_count::{{closure}} (7 samples, 1.87%)</title><rect x="63.2000%" y="341" width="1.8667%" height="15" fill="rgb(233,141,41)" fg:x="237" fg:w="7"/><text x="63.4500%" y="351.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 1.87%)</title><rect x="63.2000%" y="325" width="1.8667%" height="15" fill="rgb(239,167,4)" fg:x="237" fg:w="7"/><text x="63.4500%" y="335.50">&lt;..</text></g><g><title>nom::branch::alt::{{closure}} (7 samples, 1.87%)</title><rect x="63.2000%" y="309" width="1.8667%" height="15" fill="rgb(209,217,16)" fg:x="237" fg:w="7"/><text x="63.4500%" y="319.50">n..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (7 samples, 1.87%)</title><rect x="63.2000%" y="293" width="1.8667%" height="15" fill="rgb(219,88,35)" fg:x="237" fg:w="7"/><text x="63.4500%" y="303.50">&lt;..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="63.4667%" y="277" width="1.6000%" height="15" fill="rgb(220,193,23)" fg:x="238" fg:w="6"/><text x="63.7167%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="63.4667%" y="261" width="1.6000%" height="15" fill="rgb(230,90,52)" fg:x="238" fg:w="6"/><text x="63.7167%" y="271.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (5 samples, 1.33%)</title><rect x="63.7333%" y="245" width="1.3333%" height="15" fill="rgb(252,106,19)" fg:x="239" fg:w="5"/><text x="63.9833%" y="255.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (5 samples, 1.33%)</title><rect x="63.7333%" y="229" width="1.3333%" height="15" fill="rgb(206,74,20)" fg:x="239" fg:w="5"/><text x="63.9833%" y="239.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 1.33%)</title><rect x="63.7333%" y="213" width="1.3333%" height="15" fill="rgb(230,138,44)" fg:x="239" fg:w="5"/><text x="63.9833%" y="223.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (5 samples, 1.33%)</title><rect x="63.7333%" y="197" width="1.3333%" height="15" fill="rgb(235,182,43)" fg:x="239" fg:w="5"/><text x="63.9833%" y="207.50"></text></g><g><title>core::str::pattern::Searcher::next_match (5 samples, 1.33%)</title><rect x="63.7333%" y="181" width="1.3333%" height="15" fill="rgb(242,16,51)" fg:x="239" fg:w="5"/><text x="63.9833%" y="191.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (4 samples, 1.07%)</title><rect x="64.0000%" y="165" width="1.0667%" height="15" fill="rgb(248,9,4)" fg:x="240" fg:w="4"/><text x="64.2500%" y="175.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (4 samples, 1.07%)</title><rect x="64.0000%" y="149" width="1.0667%" height="15" fill="rgb(210,31,22)" fg:x="240" fg:w="4"/><text x="64.2500%" y="159.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (4 samples, 1.07%)</title><rect x="64.0000%" y="133" width="1.0667%" height="15" fill="rgb(239,54,39)" fg:x="240" fg:w="4"/><text x="64.2500%" y="143.50"></text></g><g><title>iri_string::parser::details::reg_name::{{closure}} (4 samples, 1.07%)</title><rect x="64.0000%" y="117" width="1.0667%" height="15" fill="rgb(230,99,41)" fg:x="240" fg:w="4"/><text x="64.2500%" y="127.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (4 samples, 1.07%)</title><rect x="64.0000%" y="101" width="1.0667%" height="15" fill="rgb(253,106,12)" fg:x="240" fg:w="4"/><text x="64.2500%" y="111.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (4 samples, 1.07%)</title><rect x="64.0000%" y="85" width="1.0667%" height="15" fill="rgb(213,46,41)" fg:x="240" fg:w="4"/><text x="64.2500%" y="95.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.53%)</title><rect x="65.6000%" y="293" width="0.5333%" height="15" fill="rgb(215,133,35)" fg:x="246" fg:w="2"/><text x="65.8500%" y="303.50"></text></g><g><title>iri_string::parser::details::pct_encoded (2 samples, 0.53%)</title><rect x="65.6000%" y="277" width="0.5333%" height="15" fill="rgb(213,28,5)" fg:x="246" fg:w="2"/><text x="65.8500%" y="287.50"></text></g><g><title>nom::error::context::{{closure}} (2 samples, 0.53%)</title><rect x="65.6000%" y="261" width="0.5333%" height="15" fill="rgb(215,77,49)" fg:x="246" fg:w="2"/><text x="65.8500%" y="271.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.53%)</title><rect x="65.6000%" y="245" width="0.5333%" height="15" fill="rgb(248,100,22)" fg:x="246" fg:w="2"/><text x="65.8500%" y="255.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (2 samples, 0.53%)</title><rect x="65.6000%" y="229" width="0.5333%" height="15" fill="rgb(208,67,9)" fg:x="246" fg:w="2"/><text x="65.8500%" y="239.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.53%)</title><rect x="65.6000%" y="213" width="0.5333%" height="15" fill="rgb(219,133,21)" fg:x="246" fg:w="2"/><text x="65.8500%" y="223.50"></text></g><g><title>nom::character::complete::char::{{closure}} (2 samples, 0.53%)</title><rect x="65.6000%" y="197" width="0.5333%" height="15" fill="rgb(246,46,29)" fg:x="246" fg:w="2"/><text x="65.8500%" y="207.50"></text></g><g><title>iri_string::parser::details::decompose_hier_part (61 samples, 16.27%)</title><rect x="51.7333%" y="869" width="16.2667%" height="15" fill="rgb(246,185,52)" fg:x="194" fg:w="61"/><text x="51.9833%" y="879.50">iri_string::parser::detai..</text></g><g><title>nom::error::context::{{closure}} (61 samples, 16.27%)</title><rect x="51.7333%" y="853" width="16.2667%" height="15" fill="rgb(252,136,11)" fg:x="194" fg:w="61"/><text x="51.9833%" y="863.50">nom::error::context::{{cl..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 16.27%)</title><rect x="51.7333%" y="837" width="16.2667%" height="15" fill="rgb(219,138,53)" fg:x="194" fg:w="61"/><text x="51.9833%" y="847.50">&lt;F as nom::internal::Pars..</text></g><g><title>nom::branch::alt::{{closure}} (61 samples, 16.27%)</title><rect x="51.7333%" y="821" width="16.2667%" height="15" fill="rgb(211,51,23)" fg:x="194" fg:w="61"/><text x="51.9833%" y="831.50">nom::branch::alt::{{closu..</text></g><g><title>&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (61 samples, 16.27%)</title><rect x="51.7333%" y="805" width="16.2667%" height="15" fill="rgb(247,221,28)" fg:x="194" fg:w="61"/><text x="51.9833%" y="815.50">&lt;(A,B,C,D) as nom::branch..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (60 samples, 16.00%)</title><rect x="52.0000%" y="789" width="16.0000%" height="15" fill="rgb(251,222,45)" fg:x="195" fg:w="60"/><text x="52.2500%" y="799.50">&lt;F as nom::internal::Pars..</text></g><g><title>nom::sequence::preceded::{{closure}} (60 samples, 16.00%)</title><rect x="52.0000%" y="773" width="16.0000%" height="15" fill="rgb(217,162,53)" fg:x="195" fg:w="60"/><text x="52.2500%" y="783.50">nom::sequence::preceded::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (60 samples, 16.00%)</title><rect x="52.0000%" y="757" width="16.0000%" height="15" fill="rgb(229,93,14)" fg:x="195" fg:w="60"/><text x="52.2500%" y="767.50">&lt;F as nom::internal::Pars..</text></g><g><title>nom::sequence::pair::{{closure}} (59 samples, 15.73%)</title><rect x="52.2667%" y="741" width="15.7333%" height="15" fill="rgb(209,67,49)" fg:x="196" fg:w="59"/><text x="52.5167%" y="751.50">nom::sequence::pair::{{c..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (23 samples, 6.13%)</title><rect x="61.8667%" y="725" width="6.1333%" height="15" fill="rgb(213,87,29)" fg:x="232" fg:w="23"/><text x="62.1167%" y="735.50">&lt;nom::in..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (23 samples, 6.13%)</title><rect x="61.8667%" y="709" width="6.1333%" height="15" fill="rgb(205,151,52)" fg:x="232" fg:w="23"/><text x="62.1167%" y="719.50">&lt;F as no..</text></g><g><title>core::ops::function::FnMut::call_mut (23 samples, 6.13%)</title><rect x="61.8667%" y="693" width="6.1333%" height="15" fill="rgb(253,215,39)" fg:x="232" fg:w="23"/><text x="62.1167%" y="703.50">core::op..</text></g><g><title>iri_string::parser::details::authority (23 samples, 6.13%)</title><rect x="61.8667%" y="677" width="6.1333%" height="15" fill="rgb(221,220,41)" fg:x="232" fg:w="23"/><text x="62.1167%" y="687.50">iri_stri..</text></g><g><title>nom::error::context::{{closure}} (23 samples, 6.13%)</title><rect x="61.8667%" y="661" width="6.1333%" height="15" fill="rgb(218,133,21)" fg:x="232" fg:w="23"/><text x="62.1167%" y="671.50">nom::err..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (23 samples, 6.13%)</title><rect x="61.8667%" y="645" width="6.1333%" height="15" fill="rgb(221,193,43)" fg:x="232" fg:w="23"/><text x="62.1167%" y="655.50">&lt;F as no..</text></g><g><title>nom::combinator::recognize::{{closure}} (23 samples, 6.13%)</title><rect x="61.8667%" y="629" width="6.1333%" height="15" fill="rgb(240,128,52)" fg:x="232" fg:w="23"/><text x="62.1167%" y="639.50">nom::com..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22 samples, 5.87%)</title><rect x="62.1333%" y="613" width="5.8667%" height="15" fill="rgb(253,114,12)" fg:x="233" fg:w="22"/><text x="62.3833%" y="623.50">&lt;F as n..</text></g><g><title>nom::sequence::tuple::{{closure}} (22 samples, 5.87%)</title><rect x="62.1333%" y="597" width="5.8667%" height="15" fill="rgb(215,223,47)" fg:x="233" fg:w="22"/><text x="62.3833%" y="607.50">nom::se..</text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (22 samples, 5.87%)</title><rect x="62.1333%" y="581" width="5.8667%" height="15" fill="rgb(248,225,23)" fg:x="233" fg:w="22"/><text x="62.3833%" y="591.50">&lt;(FnA,F..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22 samples, 5.87%)</title><rect x="62.1333%" y="565" width="5.8667%" height="15" fill="rgb(250,108,0)" fg:x="233" fg:w="22"/><text x="62.3833%" y="575.50">&lt;F as n..</text></g><g><title>nom::combinator::opt::{{closure}} (11 samples, 2.93%)</title><rect x="65.0667%" y="549" width="2.9333%" height="15" fill="rgb(228,208,7)" fg:x="244" fg:w="11"/><text x="65.3167%" y="559.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (11 samples, 2.93%)</title><rect x="65.0667%" y="533" width="2.9333%" height="15" fill="rgb(244,45,10)" fg:x="244" fg:w="11"/><text x="65.3167%" y="543.50">&lt;F..</text></g><g><title>nom::sequence::terminated::{{closure}} (11 samples, 2.93%)</title><rect x="65.0667%" y="517" width="2.9333%" height="15" fill="rgb(207,125,25)" fg:x="244" fg:w="11"/><text x="65.3167%" y="527.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (11 samples, 2.93%)</title><rect x="65.0667%" y="501" width="2.9333%" height="15" fill="rgb(210,195,18)" fg:x="244" fg:w="11"/><text x="65.3167%" y="511.50">&lt;F..</text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 2.93%)</title><rect x="65.0667%" y="485" width="2.9333%" height="15" fill="rgb(249,80,12)" fg:x="244" fg:w="11"/><text x="65.3167%" y="495.50">co..</text></g><g><title>iri_string::parser::details::userinfo (11 samples, 2.93%)</title><rect x="65.0667%" y="469" width="2.9333%" height="15" fill="rgb(221,65,9)" fg:x="244" fg:w="11"/><text x="65.3167%" y="479.50">ir..</text></g><g><title>nom::error::context::{{closure}} (11 samples, 2.93%)</title><rect x="65.0667%" y="453" width="2.9333%" height="15" fill="rgb(235,49,36)" fg:x="244" fg:w="11"/><text x="65.3167%" y="463.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (11 samples, 2.93%)</title><rect x="65.0667%" y="437" width="2.9333%" height="15" fill="rgb(225,32,20)" fg:x="244" fg:w="11"/><text x="65.3167%" y="447.50">&lt;F..</text></g><g><title>nom::combinator::recognize::{{closure}} (11 samples, 2.93%)</title><rect x="65.0667%" y="421" width="2.9333%" height="15" fill="rgb(215,141,46)" fg:x="244" fg:w="11"/><text x="65.3167%" y="431.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="65.6000%" y="405" width="2.4000%" height="15" fill="rgb(250,160,47)" fg:x="246" fg:w="9"/><text x="65.8500%" y="415.50">&lt;F..</text></g><g><title>nom::multi::many0_count::{{closure}} (9 samples, 2.40%)</title><rect x="65.6000%" y="389" width="2.4000%" height="15" fill="rgb(216,222,40)" fg:x="246" fg:w="9"/><text x="65.8500%" y="399.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="65.6000%" y="373" width="2.4000%" height="15" fill="rgb(234,217,39)" fg:x="246" fg:w="9"/><text x="65.8500%" y="383.50">&lt;F..</text></g><g><title>nom::branch::alt::{{closure}} (9 samples, 2.40%)</title><rect x="65.6000%" y="357" width="2.4000%" height="15" fill="rgb(207,178,40)" fg:x="246" fg:w="9"/><text x="65.8500%" y="367.50">no..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (9 samples, 2.40%)</title><rect x="65.6000%" y="341" width="2.4000%" height="15" fill="rgb(221,136,13)" fg:x="246" fg:w="9"/><text x="65.8500%" y="351.50">&lt;(..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="65.6000%" y="325" width="2.4000%" height="15" fill="rgb(249,199,10)" fg:x="246" fg:w="9"/><text x="65.8500%" y="335.50">&lt;n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="65.6000%" y="309" width="2.4000%" height="15" fill="rgb(249,222,13)" fg:x="246" fg:w="9"/><text x="65.8500%" y="319.50">&lt;F..</text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (7 samples, 1.87%)</title><rect x="66.1333%" y="293" width="1.8667%" height="15" fill="rgb(244,185,38)" fg:x="248" fg:w="7"/><text x="66.3833%" y="303.50">n..</text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (7 samples, 1.87%)</title><rect x="66.1333%" y="277" width="1.8667%" height="15" fill="rgb(236,202,9)" fg:x="248" fg:w="7"/><text x="66.3833%" y="287.50">&lt;..</text></g><g><title>core::str::&lt;impl str&gt;::find (7 samples, 1.87%)</title><rect x="66.1333%" y="261" width="1.8667%" height="15" fill="rgb(250,229,37)" fg:x="248" fg:w="7"/><text x="66.3833%" y="271.50">c..</text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (7 samples, 1.87%)</title><rect x="66.1333%" y="245" width="1.8667%" height="15" fill="rgb(206,174,23)" fg:x="248" fg:w="7"/><text x="66.3833%" y="255.50">&lt;..</text></g><g><title>core::str::pattern::Searcher::next_match (7 samples, 1.87%)</title><rect x="66.1333%" y="229" width="1.8667%" height="15" fill="rgb(211,33,43)" fg:x="248" fg:w="7"/><text x="66.3833%" y="239.50">c..</text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (7 samples, 1.87%)</title><rect x="66.1333%" y="213" width="1.8667%" height="15" fill="rgb(245,58,50)" fg:x="248" fg:w="7"/><text x="66.3833%" y="223.50">&lt;..</text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (7 samples, 1.87%)</title><rect x="66.1333%" y="197" width="1.8667%" height="15" fill="rgb(244,68,36)" fg:x="248" fg:w="7"/><text x="66.3833%" y="207.50">&lt;..</text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (7 samples, 1.87%)</title><rect x="66.1333%" y="181" width="1.8667%" height="15" fill="rgb(232,229,15)" fg:x="248" fg:w="7"/><text x="66.3833%" y="191.50">n..</text></g><g><title>iri_string::parser::details::userinfo::{{closure}} (7 samples, 1.87%)</title><rect x="66.1333%" y="165" width="1.8667%" height="15" fill="rgb(254,30,23)" fg:x="248" fg:w="7"/><text x="66.3833%" y="175.50">i..</text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (7 samples, 1.87%)</title><rect x="66.1333%" y="149" width="1.8667%" height="15" fill="rgb(235,160,14)" fg:x="248" fg:w="7"/><text x="66.3833%" y="159.50">&lt;..</text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (7 samples, 1.87%)</title><rect x="66.1333%" y="133" width="1.8667%" height="15" fill="rgb(212,155,44)" fg:x="248" fg:w="7"/><text x="66.3833%" y="143.50">&lt;..</text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (1 samples, 0.27%)</title><rect x="67.7333%" y="117" width="0.2667%" height="15" fill="rgb(226,2,50)" fg:x="254" fg:w="1"/><text x="67.9833%" y="127.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.53%)</title><rect x="68.5333%" y="773" width="0.5333%" height="15" fill="rgb(234,177,6)" fg:x="257" fg:w="2"/><text x="68.7833%" y="783.50"></text></g><g><title>nom::bytes::complete::take_while::{{closure}} (2 samples, 0.53%)</title><rect x="68.5333%" y="757" width="0.5333%" height="15" fill="rgb(217,24,9)" fg:x="257" fg:w="2"/><text x="68.7833%" y="767.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (2 samples, 0.53%)</title><rect x="68.5333%" y="741" width="0.5333%" height="15" fill="rgb(220,13,46)" fg:x="257" fg:w="2"/><text x="68.7833%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (1 samples, 0.27%)</title><rect x="68.8000%" y="725" width="0.2667%" height="15" fill="rgb(239,221,27)" fg:x="258" fg:w="1"/><text x="69.0500%" y="735.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.27%)</title><rect x="68.8000%" y="709" width="0.2667%" height="15" fill="rgb(222,198,25)" fg:x="258" fg:w="1"/><text x="69.0500%" y="719.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1 samples, 0.27%)</title><rect x="68.8000%" y="693" width="0.2667%" height="15" fill="rgb(211,99,13)" fg:x="258" fg:w="1"/><text x="69.0500%" y="703.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.27%)</title><rect x="68.8000%" y="677" width="0.2667%" height="15" fill="rgb(232,111,31)" fg:x="258" fg:w="1"/><text x="69.0500%" y="687.50"></text></g><g><title>&lt;iri_string::parser::RiReferenceComponents&lt;S&gt; as core::convert::From&lt;&amp;iri_string::types::generic::reference::RiReferenceStr&lt;S&gt;&gt;&gt;::from (253 samples, 67.47%)</title><rect x="2.1333%" y="1173" width="67.4667%" height="15" fill="rgb(245,82,37)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1183.50">&lt;iri_string::parser::RiReferenceComponents&lt;S&gt; as core::convert::From&lt;&amp;iri_string::types::generic::reference::RiR..</text></g><g><title>nom::combinator::all_consuming::{{closure}} (253 samples, 67.47%)</title><rect x="2.1333%" y="1157" width="67.4667%" height="15" fill="rgb(227,149,46)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1167.50">nom::combinator::all_consuming::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (253 samples, 67.47%)</title><rect x="2.1333%" y="1141" width="67.4667%" height="15" fill="rgb(218,36,50)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1151.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (253 samples, 67.47%)</title><rect x="2.1333%" y="1125" width="67.4667%" height="15" fill="rgb(226,80,48)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1135.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::decompose_uri_reference (253 samples, 67.47%)</title><rect x="2.1333%" y="1109" width="67.4667%" height="15" fill="rgb(238,224,15)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1119.50">iri_string::parser::details::decompose_uri_reference</text></g><g><title>nom::error::context::{{closure}} (253 samples, 67.47%)</title><rect x="2.1333%" y="1093" width="67.4667%" height="15" fill="rgb(241,136,10)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1103.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (253 samples, 67.47%)</title><rect x="2.1333%" y="1077" width="67.4667%" height="15" fill="rgb(208,32,45)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1087.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::branch::alt::{{closure}} (253 samples, 67.47%)</title><rect x="2.1333%" y="1061" width="67.4667%" height="15" fill="rgb(207,135,9)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1071.50">nom::branch::alt::{{closure}}</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (253 samples, 67.47%)</title><rect x="2.1333%" y="1045" width="67.4667%" height="15" fill="rgb(206,86,44)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1055.50">&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (253 samples, 67.47%)</title><rect x="2.1333%" y="1029" width="67.4667%" height="15" fill="rgb(245,177,15)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1039.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (253 samples, 67.47%)</title><rect x="2.1333%" y="1013" width="67.4667%" height="15" fill="rgb(206,64,50)" fg:x="8" fg:w="253"/><text x="2.3833%" y="1023.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::decompose_uri (68 samples, 18.13%)</title><rect x="51.4667%" y="997" width="18.1333%" height="15" fill="rgb(234,36,40)" fg:x="193" fg:w="68"/><text x="51.7167%" y="1007.50">iri_string::parser::details:..</text></g><g><title>nom::error::context::{{closure}} (68 samples, 18.13%)</title><rect x="51.4667%" y="981" width="18.1333%" height="15" fill="rgb(213,64,8)" fg:x="193" fg:w="68"/><text x="51.7167%" y="991.50">nom::error::context::{{closu..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (68 samples, 18.13%)</title><rect x="51.4667%" y="965" width="18.1333%" height="15" fill="rgb(210,75,36)" fg:x="193" fg:w="68"/><text x="51.7167%" y="975.50">&lt;nom::internal::Map&lt;F,G,O1&gt; ..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (68 samples, 18.13%)</title><rect x="51.4667%" y="949" width="18.1333%" height="15" fill="rgb(229,88,21)" fg:x="193" fg:w="68"/><text x="51.7167%" y="959.50">&lt;F as nom::internal::Parser&lt;..</text></g><g><title>nom::sequence::tuple::{{closure}} (68 samples, 18.13%)</title><rect x="51.4667%" y="933" width="18.1333%" height="15" fill="rgb(252,204,47)" fg:x="193" fg:w="68"/><text x="51.7167%" y="943.50">nom::sequence::tuple::{{clos..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD,FnE) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E),Error&gt;&gt;::parse (67 samples, 17.87%)</title><rect x="51.7333%" y="917" width="17.8667%" height="15" fill="rgb(208,77,27)" fg:x="194" fg:w="67"/><text x="51.9833%" y="927.50">&lt;(FnA,FnB,FnC,FnD,FnE) as no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 17.87%)</title><rect x="51.7333%" y="901" width="17.8667%" height="15" fill="rgb(221,76,26)" fg:x="194" fg:w="67"/><text x="51.9833%" y="911.50">&lt;F as nom::internal::Parser&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (67 samples, 17.87%)</title><rect x="51.7333%" y="885" width="17.8667%" height="15" fill="rgb(225,139,18)" fg:x="194" fg:w="67"/><text x="51.9833%" y="895.50">core::ops::function::FnMut::..</text></g><g><title>iri_string::parser::details::scheme (6 samples, 1.60%)</title><rect x="68.0000%" y="869" width="1.6000%" height="15" fill="rgb(230,137,11)" fg:x="255" fg:w="6"/><text x="68.2500%" y="879.50"></text></g><g><title>nom::error::context::{{closure}} (5 samples, 1.33%)</title><rect x="68.2667%" y="853" width="1.3333%" height="15" fill="rgb(212,28,1)" fg:x="256" fg:w="5"/><text x="68.5167%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 1.33%)</title><rect x="68.2667%" y="837" width="1.3333%" height="15" fill="rgb(248,164,17)" fg:x="256" fg:w="5"/><text x="68.5167%" y="847.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (5 samples, 1.33%)</title><rect x="68.2667%" y="821" width="1.3333%" height="15" fill="rgb(222,171,42)" fg:x="256" fg:w="5"/><text x="68.5167%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="68.5333%" y="805" width="1.0667%" height="15" fill="rgb(243,84,45)" fg:x="257" fg:w="4"/><text x="68.7833%" y="815.50"></text></g><g><title>nom::sequence::pair::{{closure}} (4 samples, 1.07%)</title><rect x="68.5333%" y="789" width="1.0667%" height="15" fill="rgb(252,49,23)" fg:x="257" fg:w="4"/><text x="68.7833%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.53%)</title><rect x="69.0667%" y="773" width="0.5333%" height="15" fill="rgb(215,19,7)" fg:x="259" fg:w="2"/><text x="69.3167%" y="783.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.27%)</title><rect x="70.1333%" y="1109" width="0.2667%" height="15" fill="rgb(238,81,41)" fg:x="263" fg:w="1"/><text x="70.3833%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.27%)</title><rect x="70.9333%" y="949" width="0.2667%" height="15" fill="rgb(210,199,37)" fg:x="266" fg:w="1"/><text x="71.1833%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 1.33%)</title><rect x="70.4000%" y="1109" width="1.3333%" height="15" fill="rgb(244,192,49)" fg:x="264" fg:w="5"/><text x="70.6500%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.80%)</title><rect x="70.9333%" y="1093" width="0.8000%" height="15" fill="rgb(226,211,11)" fg:x="266" fg:w="3"/><text x="71.1833%" y="1103.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.80%)</title><rect x="70.9333%" y="1077" width="0.8000%" height="15" fill="rgb(236,162,54)" fg:x="266" fg:w="3"/><text x="71.1833%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.80%)</title><rect x="70.9333%" y="1061" width="0.8000%" height="15" fill="rgb(220,229,9)" fg:x="266" fg:w="3"/><text x="71.1833%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.80%)</title><rect x="70.9333%" y="1045" width="0.8000%" height="15" fill="rgb(250,87,22)" fg:x="266" fg:w="3"/><text x="71.1833%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.80%)</title><rect x="70.9333%" y="1029" width="0.8000%" height="15" fill="rgb(239,43,17)" fg:x="266" fg:w="3"/><text x="71.1833%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.80%)</title><rect x="70.9333%" y="1013" width="0.8000%" height="15" fill="rgb(231,177,25)" fg:x="266" fg:w="3"/><text x="71.1833%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.80%)</title><rect x="70.9333%" y="997" width="0.8000%" height="15" fill="rgb(219,179,1)" fg:x="266" fg:w="3"/><text x="71.1833%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.80%)</title><rect x="70.9333%" y="981" width="0.8000%" height="15" fill="rgb(238,219,53)" fg:x="266" fg:w="3"/><text x="71.1833%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.80%)</title><rect x="70.9333%" y="965" width="0.8000%" height="15" fill="rgb(232,167,36)" fg:x="266" fg:w="3"/><text x="71.1833%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.53%)</title><rect x="71.2000%" y="949" width="0.5333%" height="15" fill="rgb(244,19,51)" fg:x="267" fg:w="2"/><text x="71.4500%" y="959.50"></text></g><g><title>__rust_alloc (1 samples, 0.27%)</title><rect x="71.4667%" y="933" width="0.2667%" height="15" fill="rgb(224,6,22)" fg:x="268" fg:w="1"/><text x="71.7167%" y="943.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.27%)</title><rect x="71.7333%" y="1109" width="0.2667%" height="15" fill="rgb(224,145,5)" fg:x="269" fg:w="1"/><text x="71.9833%" y="1119.50"></text></g><g><title>iri_string::resolve_old::merge (10 samples, 2.67%)</title><rect x="69.6000%" y="1173" width="2.6667%" height="15" fill="rgb(234,130,49)" fg:x="261" fg:w="10"/><text x="69.8500%" y="1183.50">ir..</text></g><g><title>alloc::fmt::format (9 samples, 2.40%)</title><rect x="69.8667%" y="1157" width="2.4000%" height="15" fill="rgb(254,6,2)" fg:x="262" fg:w="9"/><text x="70.1167%" y="1167.50">al..</text></g><g><title>core::fmt::Write::write_fmt (9 samples, 2.40%)</title><rect x="69.8667%" y="1141" width="2.4000%" height="15" fill="rgb(208,96,46)" fg:x="262" fg:w="9"/><text x="70.1167%" y="1151.50">co..</text></g><g><title>core::fmt::write (8 samples, 2.13%)</title><rect x="70.1333%" y="1125" width="2.1333%" height="15" fill="rgb(239,3,39)" fg:x="263" fg:w="8"/><text x="70.3833%" y="1135.50">c..</text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.27%)</title><rect x="72.0000%" y="1109" width="0.2667%" height="15" fill="rgb(233,210,1)" fg:x="270" fg:w="1"/><text x="72.2500%" y="1119.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.27%)</title><rect x="72.2667%" y="805" width="0.2667%" height="15" fill="rgb(244,137,37)" fg:x="271" fg:w="1"/><text x="72.5167%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.80%)</title><rect x="73.3333%" y="69" width="0.8000%" height="15" fill="rgb(240,136,2)" fg:x="275" fg:w="3"/><text x="73.5833%" y="79.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}} (2 samples, 0.53%)</title><rect x="73.6000%" y="53" width="0.5333%" height="15" fill="rgb(239,18,37)" fg:x="276" fg:w="2"/><text x="73.8500%" y="63.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.27%)</title><rect x="73.8667%" y="37" width="0.2667%" height="15" fill="rgb(218,185,22)" fg:x="277" fg:w="1"/><text x="74.1167%" y="47.50"></text></g><g><title>iri_string::parser::details::ipv4address (7 samples, 1.87%)</title><rect x="72.5333%" y="421" width="1.8667%" height="15" fill="rgb(225,218,4)" fg:x="272" fg:w="7"/><text x="72.7833%" y="431.50">i..</text></g><g><title>nom::error::context::{{closure}} (7 samples, 1.87%)</title><rect x="72.5333%" y="405" width="1.8667%" height="15" fill="rgb(230,182,32)" fg:x="272" fg:w="7"/><text x="72.7833%" y="415.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 1.87%)</title><rect x="72.5333%" y="389" width="1.8667%" height="15" fill="rgb(242,56,43)" fg:x="272" fg:w="7"/><text x="72.7833%" y="399.50">&lt;..</text></g><g><title>nom::combinator::recognize::{{closure}} (7 samples, 1.87%)</title><rect x="72.5333%" y="373" width="1.8667%" height="15" fill="rgb(233,99,24)" fg:x="272" fg:w="7"/><text x="72.7833%" y="383.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 1.87%)</title><rect x="72.5333%" y="357" width="1.8667%" height="15" fill="rgb(234,209,42)" fg:x="272" fg:w="7"/><text x="72.7833%" y="367.50">&lt;..</text></g><g><title>nom::sequence::tuple::{{closure}} (6 samples, 1.60%)</title><rect x="72.8000%" y="341" width="1.6000%" height="15" fill="rgb(227,7,12)" fg:x="273" fg:w="6"/><text x="73.0500%" y="351.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="72.8000%" y="325" width="1.6000%" height="15" fill="rgb(245,203,43)" fg:x="273" fg:w="6"/><text x="73.0500%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="72.8000%" y="309" width="1.6000%" height="15" fill="rgb(238,205,33)" fg:x="273" fg:w="6"/><text x="73.0500%" y="319.50"></text></g><g><title>nom::sequence::terminated::{{closure}} (6 samples, 1.60%)</title><rect x="72.8000%" y="293" width="1.6000%" height="15" fill="rgb(231,56,7)" fg:x="273" fg:w="6"/><text x="73.0500%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="72.8000%" y="277" width="1.6000%" height="15" fill="rgb(244,186,29)" fg:x="273" fg:w="6"/><text x="73.0500%" y="287.50"></text></g><g><title>core::ops::function::FnMut::call_mut (6 samples, 1.60%)</title><rect x="72.8000%" y="261" width="1.6000%" height="15" fill="rgb(234,111,31)" fg:x="273" fg:w="6"/><text x="73.0500%" y="271.50"></text></g><g><title>iri_string::parser::details::dec_octet (6 samples, 1.60%)</title><rect x="72.8000%" y="245" width="1.6000%" height="15" fill="rgb(241,149,10)" fg:x="273" fg:w="6"/><text x="73.0500%" y="255.50"></text></g><g><title>nom::error::context::{{closure}} (6 samples, 1.60%)</title><rect x="72.8000%" y="229" width="1.6000%" height="15" fill="rgb(249,206,44)" fg:x="273" fg:w="6"/><text x="73.0500%" y="239.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="72.8000%" y="213" width="1.6000%" height="15" fill="rgb(251,153,30)" fg:x="273" fg:w="6"/><text x="73.0500%" y="223.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (6 samples, 1.60%)</title><rect x="72.8000%" y="197" width="1.6000%" height="15" fill="rgb(239,152,38)" fg:x="273" fg:w="6"/><text x="73.0500%" y="207.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="72.8000%" y="181" width="1.6000%" height="15" fill="rgb(249,139,47)" fg:x="273" fg:w="6"/><text x="73.0500%" y="191.50"></text></g><g><title>nom::branch::alt::{{closure}} (6 samples, 1.60%)</title><rect x="72.8000%" y="165" width="1.6000%" height="15" fill="rgb(244,64,35)" fg:x="273" fg:w="6"/><text x="73.0500%" y="175.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (6 samples, 1.60%)</title><rect x="72.8000%" y="149" width="1.6000%" height="15" fill="rgb(216,46,15)" fg:x="273" fg:w="6"/><text x="73.0500%" y="159.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 1.33%)</title><rect x="73.0667%" y="133" width="1.3333%" height="15" fill="rgb(250,74,19)" fg:x="274" fg:w="5"/><text x="73.3167%" y="143.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (5 samples, 1.33%)</title><rect x="73.0667%" y="117" width="1.3333%" height="15" fill="rgb(249,42,33)" fg:x="274" fg:w="5"/><text x="73.3167%" y="127.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.07%)</title><rect x="73.3333%" y="101" width="1.0667%" height="15" fill="rgb(242,149,17)" fg:x="275" fg:w="4"/><text x="73.5833%" y="111.50"></text></g><g><title>nom::sequence::pair::{{closure}} (4 samples, 1.07%)</title><rect x="73.3333%" y="85" width="1.0667%" height="15" fill="rgb(244,29,21)" fg:x="275" fg:w="4"/><text x="73.5833%" y="95.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.27%)</title><rect x="74.1333%" y="69" width="0.2667%" height="15" fill="rgb(220,130,37)" fg:x="278" fg:w="1"/><text x="74.3833%" y="79.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (6 samples, 1.60%)</title><rect x="74.4000%" y="85" width="1.6000%" height="15" fill="rgb(211,67,2)" fg:x="279" fg:w="6"/><text x="74.6500%" y="95.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (2 samples, 0.53%)</title><rect x="75.4667%" y="69" width="0.5333%" height="15" fill="rgb(235,68,52)" fg:x="283" fg:w="2"/><text x="75.7167%" y="79.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (8 samples, 2.13%)</title><rect x="74.4000%" y="149" width="2.1333%" height="15" fill="rgb(246,142,3)" fg:x="279" fg:w="8"/><text x="74.6500%" y="159.50">&lt;..</text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (8 samples, 2.13%)</title><rect x="74.4000%" y="133" width="2.1333%" height="15" fill="rgb(241,25,7)" fg:x="279" fg:w="8"/><text x="74.6500%" y="143.50">n..</text></g><g><title>iri_string::parser::details::reg_name::{{closure}} (8 samples, 2.13%)</title><rect x="74.4000%" y="117" width="2.1333%" height="15" fill="rgb(242,119,39)" fg:x="279" fg:w="8"/><text x="74.6500%" y="127.50">i..</text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (8 samples, 2.13%)</title><rect x="74.4000%" y="101" width="2.1333%" height="15" fill="rgb(241,98,45)" fg:x="279" fg:w="8"/><text x="74.6500%" y="111.50">&lt;..</text></g><g><title>iri_string::parser::char::is_ucschar (2 samples, 0.53%)</title><rect x="76.0000%" y="85" width="0.5333%" height="15" fill="rgb(254,28,30)" fg:x="285" fg:w="2"/><text x="76.2500%" y="95.50"></text></g><g><title>core::ops::function::FnMut::call_mut (16 samples, 4.27%)</title><rect x="72.5333%" y="549" width="4.2667%" height="15" fill="rgb(241,142,54)" fg:x="272" fg:w="16"/><text x="72.7833%" y="559.50">core:..</text></g><g><title>iri_string::parser::details::host (16 samples, 4.27%)</title><rect x="72.5333%" y="533" width="4.2667%" height="15" fill="rgb(222,85,15)" fg:x="272" fg:w="16"/><text x="72.7833%" y="543.50">iri_s..</text></g><g><title>nom::error::context::{{closure}} (16 samples, 4.27%)</title><rect x="72.5333%" y="517" width="4.2667%" height="15" fill="rgb(210,85,47)" fg:x="272" fg:w="16"/><text x="72.7833%" y="527.50">nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (16 samples, 4.27%)</title><rect x="72.5333%" y="501" width="4.2667%" height="15" fill="rgb(224,206,25)" fg:x="272" fg:w="16"/><text x="72.7833%" y="511.50">&lt;F as..</text></g><g><title>nom::branch::alt::{{closure}} (16 samples, 4.27%)</title><rect x="72.5333%" y="485" width="4.2667%" height="15" fill="rgb(243,201,19)" fg:x="272" fg:w="16"/><text x="72.7833%" y="495.50">nom::..</text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (16 samples, 4.27%)</title><rect x="72.5333%" y="469" width="4.2667%" height="15" fill="rgb(236,59,4)" fg:x="272" fg:w="16"/><text x="72.7833%" y="479.50">&lt;(A,B..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (16 samples, 4.27%)</title><rect x="72.5333%" y="453" width="4.2667%" height="15" fill="rgb(254,179,45)" fg:x="272" fg:w="16"/><text x="72.7833%" y="463.50">&lt;F as..</text></g><g><title>core::ops::function::FnMut::call_mut (16 samples, 4.27%)</title><rect x="72.5333%" y="437" width="4.2667%" height="15" fill="rgb(226,14,10)" fg:x="272" fg:w="16"/><text x="72.7833%" y="447.50">core:..</text></g><g><title>iri_string::parser::details::reg_name (9 samples, 2.40%)</title><rect x="74.4000%" y="421" width="2.4000%" height="15" fill="rgb(244,27,41)" fg:x="279" fg:w="9"/><text x="74.6500%" y="431.50">ir..</text></g><g><title>nom::error::context::{{closure}} (9 samples, 2.40%)</title><rect x="74.4000%" y="405" width="2.4000%" height="15" fill="rgb(235,35,32)" fg:x="279" fg:w="9"/><text x="74.6500%" y="415.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="74.4000%" y="389" width="2.4000%" height="15" fill="rgb(218,68,31)" fg:x="279" fg:w="9"/><text x="74.6500%" y="399.50">&lt;F..</text></g><g><title>nom::combinator::recognize::{{closure}} (9 samples, 2.40%)</title><rect x="74.4000%" y="373" width="2.4000%" height="15" fill="rgb(207,120,37)" fg:x="279" fg:w="9"/><text x="74.6500%" y="383.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="74.4000%" y="357" width="2.4000%" height="15" fill="rgb(227,98,0)" fg:x="279" fg:w="9"/><text x="74.6500%" y="367.50">&lt;F..</text></g><g><title>nom::multi::many0_count::{{closure}} (9 samples, 2.40%)</title><rect x="74.4000%" y="341" width="2.4000%" height="15" fill="rgb(207,7,3)" fg:x="279" fg:w="9"/><text x="74.6500%" y="351.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="74.4000%" y="325" width="2.4000%" height="15" fill="rgb(206,98,19)" fg:x="279" fg:w="9"/><text x="74.6500%" y="335.50">&lt;F..</text></g><g><title>nom::branch::alt::{{closure}} (9 samples, 2.40%)</title><rect x="74.4000%" y="309" width="2.4000%" height="15" fill="rgb(217,5,26)" fg:x="279" fg:w="9"/><text x="74.6500%" y="319.50">no..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (9 samples, 2.40%)</title><rect x="74.4000%" y="293" width="2.4000%" height="15" fill="rgb(235,190,38)" fg:x="279" fg:w="9"/><text x="74.6500%" y="303.50">&lt;(..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="74.4000%" y="277" width="2.4000%" height="15" fill="rgb(247,86,24)" fg:x="279" fg:w="9"/><text x="74.6500%" y="287.50">&lt;n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="74.4000%" y="261" width="2.4000%" height="15" fill="rgb(205,101,16)" fg:x="279" fg:w="9"/><text x="74.6500%" y="271.50">&lt;F..</text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (9 samples, 2.40%)</title><rect x="74.4000%" y="245" width="2.4000%" height="15" fill="rgb(246,168,33)" fg:x="279" fg:w="9"/><text x="74.6500%" y="255.50">no..</text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (9 samples, 2.40%)</title><rect x="74.4000%" y="229" width="2.4000%" height="15" fill="rgb(231,114,1)" fg:x="279" fg:w="9"/><text x="74.6500%" y="239.50">&lt;&amp;..</text></g><g><title>core::str::&lt;impl str&gt;::find (9 samples, 2.40%)</title><rect x="74.4000%" y="213" width="2.4000%" height="15" fill="rgb(207,184,53)" fg:x="279" fg:w="9"/><text x="74.6500%" y="223.50">co..</text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (9 samples, 2.40%)</title><rect x="74.4000%" y="197" width="2.4000%" height="15" fill="rgb(224,95,51)" fg:x="279" fg:w="9"/><text x="74.6500%" y="207.50">&lt;c..</text></g><g><title>core::str::pattern::Searcher::next_match (9 samples, 2.40%)</title><rect x="74.4000%" y="181" width="2.4000%" height="15" fill="rgb(212,188,45)" fg:x="279" fg:w="9"/><text x="74.6500%" y="191.50">co..</text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (9 samples, 2.40%)</title><rect x="74.4000%" y="165" width="2.4000%" height="15" fill="rgb(223,154,38)" fg:x="279" fg:w="9"/><text x="74.6500%" y="175.50">&lt;c..</text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.27%)</title><rect x="76.5333%" y="149" width="0.2667%" height="15" fill="rgb(251,22,52)" fg:x="287" fg:w="1"/><text x="76.7833%" y="159.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.27%)</title><rect x="76.5333%" y="133" width="0.2667%" height="15" fill="rgb(229,209,22)" fg:x="287" fg:w="1"/><text x="76.7833%" y="143.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.27%)</title><rect x="76.5333%" y="117" width="0.2667%" height="15" fill="rgb(234,138,34)" fg:x="287" fg:w="1"/><text x="76.7833%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.27%)</title><rect x="76.5333%" y="101" width="0.2667%" height="15" fill="rgb(212,95,11)" fg:x="287" fg:w="1"/><text x="76.7833%" y="111.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (5 samples, 1.33%)</title><rect x="78.1333%" y="133" width="1.3333%" height="15" fill="rgb(240,179,47)" fg:x="293" fg:w="5"/><text x="78.3833%" y="143.50"></text></g><g><title>iri_string::parser::details::authority (27 samples, 7.20%)</title><rect x="72.5333%" y="677" width="7.2000%" height="15" fill="rgb(240,163,11)" fg:x="272" fg:w="27"/><text x="72.7833%" y="687.50">iri_string..</text></g><g><title>nom::error::context::{{closure}} (27 samples, 7.20%)</title><rect x="72.5333%" y="661" width="7.2000%" height="15" fill="rgb(236,37,12)" fg:x="272" fg:w="27"/><text x="72.7833%" y="671.50">nom::error..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 7.20%)</title><rect x="72.5333%" y="645" width="7.2000%" height="15" fill="rgb(232,164,16)" fg:x="272" fg:w="27"/><text x="72.7833%" y="655.50">&lt;F as nom:..</text></g><g><title>nom::combinator::recognize::{{closure}} (27 samples, 7.20%)</title><rect x="72.5333%" y="629" width="7.2000%" height="15" fill="rgb(244,205,15)" fg:x="272" fg:w="27"/><text x="72.7833%" y="639.50">nom::combi..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 7.20%)</title><rect x="72.5333%" y="613" width="7.2000%" height="15" fill="rgb(223,117,47)" fg:x="272" fg:w="27"/><text x="72.7833%" y="623.50">&lt;F as nom:..</text></g><g><title>nom::sequence::tuple::{{closure}} (27 samples, 7.20%)</title><rect x="72.5333%" y="597" width="7.2000%" height="15" fill="rgb(244,107,35)" fg:x="272" fg:w="27"/><text x="72.7833%" y="607.50">nom::seque..</text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (27 samples, 7.20%)</title><rect x="72.5333%" y="581" width="7.2000%" height="15" fill="rgb(205,140,8)" fg:x="272" fg:w="27"/><text x="72.7833%" y="591.50">&lt;(FnA,FnB,..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 7.20%)</title><rect x="72.5333%" y="565" width="7.2000%" height="15" fill="rgb(228,84,46)" fg:x="272" fg:w="27"/><text x="72.7833%" y="575.50">&lt;F as nom:..</text></g><g><title>nom::combinator::opt::{{closure}} (11 samples, 2.93%)</title><rect x="76.8000%" y="549" width="2.9333%" height="15" fill="rgb(254,188,9)" fg:x="288" fg:w="11"/><text x="77.0500%" y="559.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10 samples, 2.67%)</title><rect x="77.0667%" y="533" width="2.6667%" height="15" fill="rgb(206,112,54)" fg:x="289" fg:w="10"/><text x="77.3167%" y="543.50">&lt;F..</text></g><g><title>nom::sequence::terminated::{{closure}} (10 samples, 2.67%)</title><rect x="77.0667%" y="517" width="2.6667%" height="15" fill="rgb(216,84,49)" fg:x="289" fg:w="10"/><text x="77.3167%" y="527.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10 samples, 2.67%)</title><rect x="77.0667%" y="501" width="2.6667%" height="15" fill="rgb(214,194,35)" fg:x="289" fg:w="10"/><text x="77.3167%" y="511.50">&lt;F..</text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 2.67%)</title><rect x="77.0667%" y="485" width="2.6667%" height="15" fill="rgb(249,28,3)" fg:x="289" fg:w="10"/><text x="77.3167%" y="495.50">co..</text></g><g><title>iri_string::parser::details::userinfo (10 samples, 2.67%)</title><rect x="77.0667%" y="469" width="2.6667%" height="15" fill="rgb(222,56,52)" fg:x="289" fg:w="10"/><text x="77.3167%" y="479.50">ir..</text></g><g><title>nom::error::context::{{closure}} (10 samples, 2.67%)</title><rect x="77.0667%" y="453" width="2.6667%" height="15" fill="rgb(245,217,50)" fg:x="289" fg:w="10"/><text x="77.3167%" y="463.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10 samples, 2.67%)</title><rect x="77.0667%" y="437" width="2.6667%" height="15" fill="rgb(213,201,24)" fg:x="289" fg:w="10"/><text x="77.3167%" y="447.50">&lt;F..</text></g><g><title>nom::combinator::recognize::{{closure}} (10 samples, 2.67%)</title><rect x="77.0667%" y="421" width="2.6667%" height="15" fill="rgb(248,116,28)" fg:x="289" fg:w="10"/><text x="77.3167%" y="431.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="77.3333%" y="405" width="2.4000%" height="15" fill="rgb(219,72,43)" fg:x="290" fg:w="9"/><text x="77.5833%" y="415.50">&lt;F..</text></g><g><title>nom::multi::many0_count::{{closure}} (9 samples, 2.40%)</title><rect x="77.3333%" y="389" width="2.4000%" height="15" fill="rgb(209,138,14)" fg:x="290" fg:w="9"/><text x="77.5833%" y="399.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="77.3333%" y="373" width="2.4000%" height="15" fill="rgb(222,18,33)" fg:x="290" fg:w="9"/><text x="77.5833%" y="383.50">&lt;F..</text></g><g><title>nom::branch::alt::{{closure}} (9 samples, 2.40%)</title><rect x="77.3333%" y="357" width="2.4000%" height="15" fill="rgb(213,199,7)" fg:x="290" fg:w="9"/><text x="77.5833%" y="367.50">no..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (9 samples, 2.40%)</title><rect x="77.3333%" y="341" width="2.4000%" height="15" fill="rgb(250,110,10)" fg:x="290" fg:w="9"/><text x="77.5833%" y="351.50">&lt;(..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="77.3333%" y="325" width="2.4000%" height="15" fill="rgb(248,123,6)" fg:x="290" fg:w="9"/><text x="77.5833%" y="335.50">&lt;n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="77.3333%" y="309" width="2.4000%" height="15" fill="rgb(206,91,31)" fg:x="290" fg:w="9"/><text x="77.5833%" y="319.50">&lt;F..</text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (9 samples, 2.40%)</title><rect x="77.3333%" y="293" width="2.4000%" height="15" fill="rgb(211,154,13)" fg:x="290" fg:w="9"/><text x="77.5833%" y="303.50">no..</text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (9 samples, 2.40%)</title><rect x="77.3333%" y="277" width="2.4000%" height="15" fill="rgb(225,148,7)" fg:x="290" fg:w="9"/><text x="77.5833%" y="287.50">&lt;&amp;..</text></g><g><title>core::str::&lt;impl str&gt;::find (8 samples, 2.13%)</title><rect x="77.6000%" y="261" width="2.1333%" height="15" fill="rgb(220,160,43)" fg:x="291" fg:w="8"/><text x="77.8500%" y="271.50">c..</text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (8 samples, 2.13%)</title><rect x="77.6000%" y="245" width="2.1333%" height="15" fill="rgb(213,52,39)" fg:x="291" fg:w="8"/><text x="77.8500%" y="255.50">&lt;..</text></g><g><title>core::str::pattern::Searcher::next_match (8 samples, 2.13%)</title><rect x="77.6000%" y="229" width="2.1333%" height="15" fill="rgb(243,137,7)" fg:x="291" fg:w="8"/><text x="77.8500%" y="239.50">c..</text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (7 samples, 1.87%)</title><rect x="77.8667%" y="213" width="1.8667%" height="15" fill="rgb(230,79,13)" fg:x="292" fg:w="7"/><text x="78.1167%" y="223.50">&lt;..</text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (7 samples, 1.87%)</title><rect x="77.8667%" y="197" width="1.8667%" height="15" fill="rgb(247,105,23)" fg:x="292" fg:w="7"/><text x="78.1167%" y="207.50">&lt;..</text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (7 samples, 1.87%)</title><rect x="77.8667%" y="181" width="1.8667%" height="15" fill="rgb(223,179,41)" fg:x="292" fg:w="7"/><text x="78.1167%" y="191.50">n..</text></g><g><title>iri_string::parser::details::userinfo::{{closure}} (7 samples, 1.87%)</title><rect x="77.8667%" y="165" width="1.8667%" height="15" fill="rgb(218,9,34)" fg:x="292" fg:w="7"/><text x="78.1167%" y="175.50">i..</text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (7 samples, 1.87%)</title><rect x="77.8667%" y="149" width="1.8667%" height="15" fill="rgb(222,106,8)" fg:x="292" fg:w="7"/><text x="78.1167%" y="159.50">&lt;..</text></g><g><title>iri_string::parser::char::is_ucschar (1 samples, 0.27%)</title><rect x="79.4667%" y="133" width="0.2667%" height="15" fill="rgb(211,220,0)" fg:x="298" fg:w="1"/><text x="79.7167%" y="143.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (1 samples, 0.27%)</title><rect x="80.2667%" y="453" width="0.2667%" height="15" fill="rgb(229,52,16)" fg:x="301" fg:w="1"/><text x="80.5167%" y="463.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.53%)</title><rect x="82.6667%" y="357" width="0.5333%" height="15" fill="rgb(212,155,18)" fg:x="310" fg:w="2"/><text x="82.9167%" y="367.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.27%)</title><rect x="83.2000%" y="357" width="0.2667%" height="15" fill="rgb(242,21,14)" fg:x="312" fg:w="1"/><text x="83.4500%" y="367.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (4 samples, 1.07%)</title><rect x="84.5333%" y="213" width="1.0667%" height="15" fill="rgb(222,19,48)" fg:x="317" fg:w="4"/><text x="84.7833%" y="223.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (4 samples, 1.07%)</title><rect x="84.5333%" y="197" width="1.0667%" height="15" fill="rgb(232,45,27)" fg:x="317" fg:w="4"/><text x="84.7833%" y="207.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (2 samples, 0.53%)</title><rect x="85.0667%" y="181" width="0.5333%" height="15" fill="rgb(249,103,42)" fg:x="319" fg:w="2"/><text x="85.3167%" y="191.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (50 samples, 13.33%)</title><rect x="72.5333%" y="709" width="13.3333%" height="15" fill="rgb(246,81,33)" fg:x="272" fg:w="50"/><text x="72.7833%" y="719.50">&lt;F as nom::internal:..</text></g><g><title>core::ops::function::FnMut::call_mut (50 samples, 13.33%)</title><rect x="72.5333%" y="693" width="13.3333%" height="15" fill="rgb(252,33,42)" fg:x="272" fg:w="50"/><text x="72.7833%" y="703.50">core::ops::function:..</text></g><g><title>iri_string::parser::details::path_abempty (23 samples, 6.13%)</title><rect x="79.7333%" y="677" width="6.1333%" height="15" fill="rgb(209,212,41)" fg:x="299" fg:w="23"/><text x="79.9833%" y="687.50">iri_stri..</text></g><g><title>nom::error::context::{{closure}} (23 samples, 6.13%)</title><rect x="79.7333%" y="661" width="6.1333%" height="15" fill="rgb(207,154,6)" fg:x="299" fg:w="23"/><text x="79.9833%" y="671.50">nom::err..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (23 samples, 6.13%)</title><rect x="79.7333%" y="645" width="6.1333%" height="15" fill="rgb(223,64,47)" fg:x="299" fg:w="23"/><text x="79.9833%" y="655.50">&lt;F as no..</text></g><g><title>nom::combinator::recognize::{{closure}} (23 samples, 6.13%)</title><rect x="79.7333%" y="629" width="6.1333%" height="15" fill="rgb(211,161,38)" fg:x="299" fg:w="23"/><text x="79.9833%" y="639.50">nom::com..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22 samples, 5.87%)</title><rect x="80.0000%" y="613" width="5.8667%" height="15" fill="rgb(219,138,40)" fg:x="300" fg:w="22"/><text x="80.2500%" y="623.50">&lt;F as n..</text></g><g><title>nom::multi::many0_count::{{closure}} (22 samples, 5.87%)</title><rect x="80.0000%" y="597" width="5.8667%" height="15" fill="rgb(241,228,46)" fg:x="300" fg:w="22"/><text x="80.2500%" y="607.50">nom::mu..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22 samples, 5.87%)</title><rect x="80.0000%" y="581" width="5.8667%" height="15" fill="rgb(223,209,38)" fg:x="300" fg:w="22"/><text x="80.2500%" y="591.50">&lt;F as n..</text></g><g><title>nom::sequence::preceded::{{closure}} (22 samples, 5.87%)</title><rect x="80.0000%" y="565" width="5.8667%" height="15" fill="rgb(236,164,45)" fg:x="300" fg:w="22"/><text x="80.2500%" y="575.50">nom::se..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22 samples, 5.87%)</title><rect x="80.0000%" y="549" width="5.8667%" height="15" fill="rgb(231,15,5)" fg:x="300" fg:w="22"/><text x="80.2500%" y="559.50">&lt;F as n..</text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 5.87%)</title><rect x="80.0000%" y="533" width="5.8667%" height="15" fill="rgb(252,35,15)" fg:x="300" fg:w="22"/><text x="80.2500%" y="543.50">core::o..</text></g><g><title>iri_string::parser::details::segment (22 samples, 5.87%)</title><rect x="80.0000%" y="517" width="5.8667%" height="15" fill="rgb(248,181,18)" fg:x="300" fg:w="22"/><text x="80.2500%" y="527.50">iri_str..</text></g><g><title>nom::error::context::{{closure}} (22 samples, 5.87%)</title><rect x="80.0000%" y="501" width="5.8667%" height="15" fill="rgb(233,39,42)" fg:x="300" fg:w="22"/><text x="80.2500%" y="511.50">nom::er..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (21 samples, 5.60%)</title><rect x="80.2667%" y="485" width="5.6000%" height="15" fill="rgb(238,110,33)" fg:x="301" fg:w="21"/><text x="80.5167%" y="495.50">&lt;F as n..</text></g><g><title>nom::combinator::recognize::{{closure}} (21 samples, 5.60%)</title><rect x="80.2667%" y="469" width="5.6000%" height="15" fill="rgb(233,195,10)" fg:x="301" fg:w="21"/><text x="80.5167%" y="479.50">nom::co..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 5.33%)</title><rect x="80.5333%" y="453" width="5.3333%" height="15" fill="rgb(254,105,3)" fg:x="302" fg:w="20"/><text x="80.7833%" y="463.50">&lt;F as n..</text></g><g><title>nom::multi::many0_count::{{closure}} (20 samples, 5.33%)</title><rect x="80.5333%" y="437" width="5.3333%" height="15" fill="rgb(221,225,9)" fg:x="302" fg:w="20"/><text x="80.7833%" y="447.50">nom::mu..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (18 samples, 4.80%)</title><rect x="81.0667%" y="421" width="4.8000%" height="15" fill="rgb(224,227,45)" fg:x="304" fg:w="18"/><text x="81.3167%" y="431.50">&lt;F as ..</text></g><g><title>core::ops::function::FnMut::call_mut (18 samples, 4.80%)</title><rect x="81.0667%" y="405" width="4.8000%" height="15" fill="rgb(229,198,43)" fg:x="304" fg:w="18"/><text x="81.3167%" y="415.50">core::..</text></g><g><title>iri_string::parser::details::pchar (18 samples, 4.80%)</title><rect x="81.0667%" y="389" width="4.8000%" height="15" fill="rgb(206,209,35)" fg:x="304" fg:w="18"/><text x="81.3167%" y="399.50">iri_st..</text></g><g><title>nom::combinator::recognize::{{closure}} (18 samples, 4.80%)</title><rect x="81.0667%" y="373" width="4.8000%" height="15" fill="rgb(245,195,53)" fg:x="304" fg:w="18"/><text x="81.3167%" y="383.50">nom::c..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.40%)</title><rect x="83.4667%" y="357" width="2.4000%" height="15" fill="rgb(240,92,26)" fg:x="313" fg:w="9"/><text x="83.7167%" y="367.50">&lt;F..</text></g><g><title>nom::branch::alt::{{closure}} (9 samples, 2.40%)</title><rect x="83.4667%" y="341" width="2.4000%" height="15" fill="rgb(207,40,23)" fg:x="313" fg:w="9"/><text x="83.7167%" y="351.50">no..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (9 samples, 2.40%)</title><rect x="83.4667%" y="325" width="2.4000%" height="15" fill="rgb(223,111,35)" fg:x="313" fg:w="9"/><text x="83.7167%" y="335.50">&lt;(..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (6 samples, 1.60%)</title><rect x="84.2667%" y="309" width="1.6000%" height="15" fill="rgb(229,147,28)" fg:x="316" fg:w="6"/><text x="84.5167%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 1.33%)</title><rect x="84.5333%" y="293" width="1.3333%" height="15" fill="rgb(211,29,28)" fg:x="317" fg:w="5"/><text x="84.7833%" y="303.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}} (5 samples, 1.33%)</title><rect x="84.5333%" y="277" width="1.3333%" height="15" fill="rgb(228,72,33)" fg:x="317" fg:w="5"/><text x="84.7833%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 1.33%)</title><rect x="84.5333%" y="261" width="1.3333%" height="15" fill="rgb(205,214,31)" fg:x="317" fg:w="5"/><text x="84.7833%" y="271.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (5 samples, 1.33%)</title><rect x="84.5333%" y="245" width="1.3333%" height="15" fill="rgb(224,111,15)" fg:x="317" fg:w="5"/><text x="84.7833%" y="255.50"></text></g><g><title>iri_string::parser::details::pchar::{{closure}} (5 samples, 1.33%)</title><rect x="84.5333%" y="229" width="1.3333%" height="15" fill="rgb(253,21,26)" fg:x="317" fg:w="5"/><text x="84.7833%" y="239.50"></text></g><g><title>iri_string::parser::char::is_sub_delim (1 samples, 0.27%)</title><rect x="85.6000%" y="213" width="0.2667%" height="15" fill="rgb(245,139,43)" fg:x="321" fg:w="1"/><text x="85.8500%" y="223.50"></text></g><g><title>iri_string::parser::details::hier_part (52 samples, 13.87%)</title><rect x="72.2667%" y="917" width="13.8667%" height="15" fill="rgb(252,170,7)" fg:x="271" fg:w="52"/><text x="72.5167%" y="927.50">iri_string::parser::d..</text></g><g><title>nom::error::context::{{closure}} (52 samples, 13.87%)</title><rect x="72.2667%" y="901" width="13.8667%" height="15" fill="rgb(231,118,14)" fg:x="271" fg:w="52"/><text x="72.5167%" y="911.50">nom::error::context::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (52 samples, 13.87%)</title><rect x="72.2667%" y="885" width="13.8667%" height="15" fill="rgb(238,83,0)" fg:x="271" fg:w="52"/><text x="72.5167%" y="895.50">&lt;F as nom::internal::..</text></g><g><title>nom::combinator::recognize::{{closure}} (52 samples, 13.87%)</title><rect x="72.2667%" y="869" width="13.8667%" height="15" fill="rgb(221,39,39)" fg:x="271" fg:w="52"/><text x="72.5167%" y="879.50">nom::combinator::reco..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (52 samples, 13.87%)</title><rect x="72.2667%" y="853" width="13.8667%" height="15" fill="rgb(222,119,46)" fg:x="271" fg:w="52"/><text x="72.5167%" y="863.50">&lt;F as nom::internal::..</text></g><g><title>nom::branch::alt::{{closure}} (52 samples, 13.87%)</title><rect x="72.2667%" y="837" width="13.8667%" height="15" fill="rgb(222,165,49)" fg:x="271" fg:w="52"/><text x="72.5167%" y="847.50">nom::branch::alt::{{c..</text></g><g><title>&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (52 samples, 13.87%)</title><rect x="72.2667%" y="821" width="13.8667%" height="15" fill="rgb(219,113,52)" fg:x="271" fg:w="52"/><text x="72.5167%" y="831.50">&lt;(A,B,C,D) as nom::br..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (51 samples, 13.60%)</title><rect x="72.5333%" y="805" width="13.6000%" height="15" fill="rgb(214,7,15)" fg:x="272" fg:w="51"/><text x="72.7833%" y="815.50">&lt;F as nom::internal::..</text></g><g><title>nom::combinator::recognize::{{closure}} (51 samples, 13.60%)</title><rect x="72.5333%" y="789" width="13.6000%" height="15" fill="rgb(235,32,4)" fg:x="272" fg:w="51"/><text x="72.7833%" y="799.50">nom::combinator::reco..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (51 samples, 13.60%)</title><rect x="72.5333%" y="773" width="13.6000%" height="15" fill="rgb(238,90,54)" fg:x="272" fg:w="51"/><text x="72.7833%" y="783.50">&lt;F as nom::internal::..</text></g><g><title>nom::sequence::preceded::{{closure}} (51 samples, 13.60%)</title><rect x="72.5333%" y="757" width="13.6000%" height="15" fill="rgb(213,208,19)" fg:x="272" fg:w="51"/><text x="72.7833%" y="767.50">nom::sequence::preced..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (51 samples, 13.60%)</title><rect x="72.5333%" y="741" width="13.6000%" height="15" fill="rgb(233,156,4)" fg:x="272" fg:w="51"/><text x="72.7833%" y="751.50">&lt;F as nom::internal::..</text></g><g><title>nom::sequence::pair::{{closure}} (51 samples, 13.60%)</title><rect x="72.5333%" y="725" width="13.6000%" height="15" fill="rgb(207,194,5)" fg:x="272" fg:w="51"/><text x="72.7833%" y="735.50">nom::sequence::pair::..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.27%)</title><rect x="85.8667%" y="709" width="0.2667%" height="15" fill="rgb(206,111,30)" fg:x="322" fg:w="1"/><text x="86.1167%" y="719.50"></text></g><g><title>&lt;iri_string::types::generic::normal::RiString&lt;S&gt; as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (53 samples, 14.13%)</title><rect x="72.2667%" y="1157" width="14.1333%" height="15" fill="rgb(243,70,54)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1167.50">&lt;iri_string::types::g..</text></g><g><title>&lt;&amp;iri_string::types::generic::normal::RiStr&lt;S&gt; as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (53 samples, 14.13%)</title><rect x="72.2667%" y="1141" width="14.1333%" height="15" fill="rgb(242,28,8)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1151.50">&lt;&amp;iri_string::types::..</text></g><g><title>iri_string::validate::iri (53 samples, 14.13%)</title><rect x="72.2667%" y="1125" width="14.1333%" height="15" fill="rgb(219,106,18)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1135.50">iri_string::validate:..</text></g><g><title>nom::combinator::all_consuming::{{closure}} (53 samples, 14.13%)</title><rect x="72.2667%" y="1109" width="14.1333%" height="15" fill="rgb(244,222,10)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1119.50">nom::combinator::all_..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (53 samples, 14.13%)</title><rect x="72.2667%" y="1093" width="14.1333%" height="15" fill="rgb(236,179,52)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1103.50">&lt;F as nom::internal::..</text></g><g><title>core::ops::function::FnMut::call_mut (53 samples, 14.13%)</title><rect x="72.2667%" y="1077" width="14.1333%" height="15" fill="rgb(213,23,39)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1087.50">core::ops::function::..</text></g><g><title>iri_string::parser::details::uri (53 samples, 14.13%)</title><rect x="72.2667%" y="1061" width="14.1333%" height="15" fill="rgb(238,48,10)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1071.50">iri_string::parser::d..</text></g><g><title>nom::error::context::{{closure}} (53 samples, 14.13%)</title><rect x="72.2667%" y="1045" width="14.1333%" height="15" fill="rgb(251,196,23)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1055.50">nom::error::context::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (53 samples, 14.13%)</title><rect x="72.2667%" y="1029" width="14.1333%" height="15" fill="rgb(250,152,24)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1039.50">&lt;F as nom::internal::..</text></g><g><title>nom::combinator::recognize::{{closure}} (53 samples, 14.13%)</title><rect x="72.2667%" y="1013" width="14.1333%" height="15" fill="rgb(209,150,17)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1023.50">nom::combinator::reco..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (53 samples, 14.13%)</title><rect x="72.2667%" y="997" width="14.1333%" height="15" fill="rgb(234,202,34)" fg:x="271" fg:w="53"/><text x="72.5167%" y="1007.50">&lt;F as nom::internal::..</text></g><g><title>nom::sequence::tuple::{{closure}} (53 samples, 14.13%)</title><rect x="72.2667%" y="981" width="14.1333%" height="15" fill="rgb(253,148,53)" fg:x="271" fg:w="53"/><text x="72.5167%" y="991.50">nom::sequence::tuple:..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD,FnE) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E),Error&gt;&gt;::parse (53 samples, 14.13%)</title><rect x="72.2667%" y="965" width="14.1333%" height="15" fill="rgb(218,129,16)" fg:x="271" fg:w="53"/><text x="72.5167%" y="975.50">&lt;(FnA,FnB,FnC,FnD,FnE..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (53 samples, 14.13%)</title><rect x="72.2667%" y="949" width="14.1333%" height="15" fill="rgb(216,85,19)" fg:x="271" fg:w="53"/><text x="72.5167%" y="959.50">&lt;F as nom::internal::..</text></g><g><title>core::ops::function::FnMut::call_mut (53 samples, 14.13%)</title><rect x="72.2667%" y="933" width="14.1333%" height="15" fill="rgb(235,228,7)" fg:x="271" fg:w="53"/><text x="72.5167%" y="943.50">core::ops::function::..</text></g><g><title>iri_string::parser::details::scheme (1 samples, 0.27%)</title><rect x="86.1333%" y="917" width="0.2667%" height="15" fill="rgb(245,175,0)" fg:x="323" fg:w="1"/><text x="86.3833%" y="927.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.27%)</title><rect x="86.1333%" y="901" width="0.2667%" height="15" fill="rgb(208,168,36)" fg:x="323" fg:w="1"/><text x="86.3833%" y="911.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.27%)</title><rect x="86.1333%" y="885" width="0.2667%" height="15" fill="rgb(246,171,24)" fg:x="323" fg:w="1"/><text x="86.3833%" y="895.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (1 samples, 0.27%)</title><rect x="86.1333%" y="869" width="0.2667%" height="15" fill="rgb(215,142,24)" fg:x="323" fg:w="1"/><text x="86.3833%" y="879.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.27%)</title><rect x="86.4000%" y="1157" width="0.2667%" height="15" fill="rgb(250,187,7)" fg:x="324" fg:w="1"/><text x="86.6500%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.27%)</title><rect x="86.4000%" y="1141" width="0.2667%" height="15" fill="rgb(228,66,33)" fg:x="324" fg:w="1"/><text x="86.6500%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.27%)</title><rect x="86.4000%" y="1125" width="0.2667%" height="15" fill="rgb(234,215,21)" fg:x="324" fg:w="1"/><text x="86.6500%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.27%)</title><rect x="86.4000%" y="1109" width="0.2667%" height="15" fill="rgb(222,191,20)" fg:x="324" fg:w="1"/><text x="86.6500%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.27%)</title><rect x="86.4000%" y="1093" width="0.2667%" height="15" fill="rgb(245,79,54)" fg:x="324" fg:w="1"/><text x="86.6500%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.27%)</title><rect x="86.6667%" y="1029" width="0.2667%" height="15" fill="rgb(240,10,37)" fg:x="325" fg:w="1"/><text x="86.9167%" y="1039.50"></text></g><g><title>iri_string::resolve_old::recompose_components (57 samples, 15.20%)</title><rect x="72.2667%" y="1173" width="15.2000%" height="15" fill="rgb(214,192,32)" fg:x="271" fg:w="57"/><text x="72.5167%" y="1183.50">iri_string::resolve_old..</text></g><g><title>alloc::string::String::push_str (3 samples, 0.80%)</title><rect x="86.6667%" y="1157" width="0.8000%" height="15" fill="rgb(209,36,54)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.80%)</title><rect x="86.6667%" y="1141" width="0.8000%" height="15" fill="rgb(220,10,11)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.80%)</title><rect x="86.6667%" y="1125" width="0.8000%" height="15" fill="rgb(221,106,17)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.80%)</title><rect x="86.6667%" y="1109" width="0.8000%" height="15" fill="rgb(251,142,44)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.80%)</title><rect x="86.6667%" y="1093" width="0.8000%" height="15" fill="rgb(238,13,15)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.80%)</title><rect x="86.6667%" y="1077" width="0.8000%" height="15" fill="rgb(208,107,27)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.80%)</title><rect x="86.6667%" y="1061" width="0.8000%" height="15" fill="rgb(205,136,37)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.80%)</title><rect x="86.6667%" y="1045" width="0.8000%" height="15" fill="rgb(250,205,27)" fg:x="325" fg:w="3"/><text x="86.9167%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.53%)</title><rect x="86.9333%" y="1029" width="0.5333%" height="15" fill="rgb(210,80,43)" fg:x="326" fg:w="2"/><text x="87.1833%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.53%)</title><rect x="86.9333%" y="1013" width="0.5333%" height="15" fill="rgb(247,160,36)" fg:x="326" fg:w="2"/><text x="87.1833%" y="1023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.53%)</title><rect x="86.9333%" y="997" width="0.5333%" height="15" fill="rgb(234,13,49)" fg:x="326" fg:w="2"/><text x="87.1833%" y="1007.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.53%)</title><rect x="86.9333%" y="981" width="0.5333%" height="15" fill="rgb(234,122,0)" fg:x="326" fg:w="2"/><text x="87.1833%" y="991.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.53%)</title><rect x="86.9333%" y="965" width="0.5333%" height="15" fill="rgb(207,146,38)" fg:x="326" fg:w="2"/><text x="87.1833%" y="975.50"></text></g><g><title>_int_realloc (2 samples, 0.53%)</title><rect x="86.9333%" y="949" width="0.5333%" height="15" fill="rgb(207,177,25)" fg:x="326" fg:w="2"/><text x="87.1833%" y="959.50"></text></g><g><title>_int_malloc (1 samples, 0.27%)</title><rect x="87.2000%" y="933" width="0.2667%" height="15" fill="rgb(211,178,42)" fg:x="327" fg:w="1"/><text x="87.4500%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.27%)</title><rect x="88.2667%" y="1045" width="0.2667%" height="15" fill="rgb(230,69,54)" fg:x="331" fg:w="1"/><text x="88.5167%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.27%)</title><rect x="88.2667%" y="1029" width="0.2667%" height="15" fill="rgb(214,135,41)" fg:x="331" fg:w="1"/><text x="88.5167%" y="1039.50"></text></g><g><title>_int_free (1 samples, 0.27%)</title><rect x="89.0667%" y="917" width="0.2667%" height="15" fill="rgb(237,67,25)" fg:x="334" fg:w="1"/><text x="89.3167%" y="927.50"></text></g><g><title>malloc_consolidate (1 samples, 0.27%)</title><rect x="89.0667%" y="901" width="0.2667%" height="15" fill="rgb(222,189,50)" fg:x="334" fg:w="1"/><text x="89.3167%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 1.07%)</title><rect x="88.8000%" y="997" width="1.0667%" height="15" fill="rgb(245,148,34)" fg:x="333" fg:w="4"/><text x="89.0500%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 1.07%)</title><rect x="88.8000%" y="981" width="1.0667%" height="15" fill="rgb(222,29,6)" fg:x="333" fg:w="4"/><text x="89.0500%" y="991.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 1.07%)</title><rect x="88.8000%" y="965" width="1.0667%" height="15" fill="rgb(221,189,43)" fg:x="333" fg:w="4"/><text x="89.0500%" y="975.50"></text></g><g><title>__GI___libc_realloc (4 samples, 1.07%)</title><rect x="88.8000%" y="949" width="1.0667%" height="15" fill="rgb(207,36,27)" fg:x="333" fg:w="4"/><text x="89.0500%" y="959.50"></text></g><g><title>_int_realloc (3 samples, 0.80%)</title><rect x="89.0667%" y="933" width="0.8000%" height="15" fill="rgb(217,90,24)" fg:x="334" fg:w="3"/><text x="89.3167%" y="943.50"></text></g><g><title>_int_malloc (2 samples, 0.53%)</title><rect x="89.3333%" y="917" width="0.5333%" height="15" fill="rgb(224,66,35)" fg:x="335" fg:w="2"/><text x="89.5833%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.27%)</title><rect x="89.8667%" y="997" width="0.2667%" height="15" fill="rgb(221,13,50)" fg:x="337" fg:w="1"/><text x="90.1167%" y="1007.50"></text></g><g><title>tcache_get (1 samples, 0.27%)</title><rect x="89.8667%" y="981" width="0.2667%" height="15" fill="rgb(236,68,49)" fg:x="337" fg:w="1"/><text x="90.1167%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 1.87%)</title><rect x="88.5333%" y="1013" width="1.8667%" height="15" fill="rgb(229,146,28)" fg:x="332" fg:w="7"/><text x="88.7833%" y="1023.50">a..</text></g><g><title>__rust_alloc (1 samples, 0.27%)</title><rect x="90.1333%" y="997" width="0.2667%" height="15" fill="rgb(225,31,38)" fg:x="338" fg:w="1"/><text x="90.3833%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 2.67%)</title><rect x="88.0000%" y="1077" width="2.6667%" height="15" fill="rgb(250,208,3)" fg:x="330" fg:w="10"/><text x="88.2500%" y="1087.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 2.67%)</title><rect x="88.0000%" y="1061" width="2.6667%" height="15" fill="rgb(246,54,23)" fg:x="330" fg:w="10"/><text x="88.2500%" y="1071.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 2.13%)</title><rect x="88.5333%" y="1045" width="2.1333%" height="15" fill="rgb(243,76,11)" fg:x="332" fg:w="8"/><text x="88.7833%" y="1055.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 2.13%)</title><rect x="88.5333%" y="1029" width="2.1333%" height="15" fill="rgb(245,21,50)" fg:x="332" fg:w="8"/><text x="88.7833%" y="1039.50">a..</text></g><g><title>core::cmp::max (1 samples, 0.27%)</title><rect x="90.4000%" y="1013" width="0.2667%" height="15" fill="rgb(228,9,43)" fg:x="339" fg:w="1"/><text x="90.6500%" y="1023.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.27%)</title><rect x="90.4000%" y="997" width="0.2667%" height="15" fill="rgb(208,100,47)" fg:x="339" fg:w="1"/><text x="90.6500%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.27%)</title><rect x="90.4000%" y="981" width="0.2667%" height="15" fill="rgb(232,26,8)" fg:x="339" fg:w="1"/><text x="90.6500%" y="991.50"></text></g><g><title>alloc::string::String::push_str (13 samples, 3.47%)</title><rect x="87.4667%" y="1141" width="3.4667%" height="15" fill="rgb(216,166,38)" fg:x="328" fg:w="13"/><text x="87.7167%" y="1151.50">all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 3.47%)</title><rect x="87.4667%" y="1125" width="3.4667%" height="15" fill="rgb(251,202,51)" fg:x="328" fg:w="13"/><text x="87.7167%" y="1135.50">all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 3.47%)</title><rect x="87.4667%" y="1109" width="3.4667%" height="15" fill="rgb(254,216,34)" fg:x="328" fg:w="13"/><text x="87.7167%" y="1119.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 3.47%)</title><rect x="87.4667%" y="1093" width="3.4667%" height="15" fill="rgb(251,32,27)" fg:x="328" fg:w="13"/><text x="87.7167%" y="1103.50">all..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.27%)</title><rect x="90.6667%" y="1077" width="0.2667%" height="15" fill="rgb(208,127,28)" fg:x="340" fg:w="1"/><text x="90.9167%" y="1087.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.27%)</title><rect x="90.6667%" y="1061" width="0.2667%" height="15" fill="rgb(224,137,22)" fg:x="340" fg:w="1"/><text x="90.9167%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.27%)</title><rect x="90.9333%" y="1077" width="0.2667%" height="15" fill="rgb(254,70,32)" fg:x="341" fg:w="1"/><text x="91.1833%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.27%)</title><rect x="90.9333%" y="1061" width="0.2667%" height="15" fill="rgb(229,75,37)" fg:x="341" fg:w="1"/><text x="91.1833%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.27%)</title><rect x="90.9333%" y="1045" width="0.2667%" height="15" fill="rgb(252,64,23)" fg:x="341" fg:w="1"/><text x="91.1833%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.27%)</title><rect x="92.5333%" y="1029" width="0.2667%" height="15" fill="rgb(232,162,48)" fg:x="347" fg:w="1"/><text x="92.7833%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 2.13%)</title><rect x="90.9333%" y="1141" width="2.1333%" height="15" fill="rgb(246,160,12)" fg:x="341" fg:w="8"/><text x="91.1833%" y="1151.50">c..</text></g><g><title>iri_string::resolve_old::remove_dot_segments_step::{{closure}} (8 samples, 2.13%)</title><rect x="90.9333%" y="1125" width="2.1333%" height="15" fill="rgb(247,166,0)" fg:x="341" fg:w="8"/><text x="91.1833%" y="1135.50">i..</text></g><g><title>core::str::&lt;impl str&gt;::find (8 samples, 2.13%)</title><rect x="90.9333%" y="1109" width="2.1333%" height="15" fill="rgb(249,219,21)" fg:x="341" fg:w="8"/><text x="91.1833%" y="1119.50">c..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (8 samples, 2.13%)</title><rect x="90.9333%" y="1093" width="2.1333%" height="15" fill="rgb(205,209,3)" fg:x="341" fg:w="8"/><text x="91.1833%" y="1103.50">&lt;..</text></g><g><title>core::slice::memchr::memchr (7 samples, 1.87%)</title><rect x="91.2000%" y="1077" width="1.8667%" height="15" fill="rgb(243,44,1)" fg:x="342" fg:w="7"/><text x="91.4500%" y="1087.50">c..</text></g><g><title>core::slice::memchr::memchr_general_case (6 samples, 1.60%)</title><rect x="91.4667%" y="1061" width="1.6000%" height="15" fill="rgb(206,159,16)" fg:x="343" fg:w="6"/><text x="91.7167%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.80%)</title><rect x="92.2667%" y="1045" width="0.8000%" height="15" fill="rgb(244,77,30)" fg:x="346" fg:w="3"/><text x="92.5167%" y="1055.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (1 samples, 0.27%)</title><rect x="92.8000%" y="1029" width="0.2667%" height="15" fill="rgb(218,69,12)" fg:x="348" fg:w="1"/><text x="93.0500%" y="1039.50"></text></g><g><title>core::str::&lt;impl str&gt;::ends_with (2 samples, 0.53%)</title><rect x="93.0667%" y="1141" width="0.5333%" height="15" fill="rgb(212,87,7)" fg:x="349" fg:w="2"/><text x="93.3167%" y="1151.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_suffix_of (2 samples, 0.53%)</title><rect x="93.0667%" y="1125" width="0.5333%" height="15" fill="rgb(245,114,25)" fg:x="349" fg:w="2"/><text x="93.3167%" y="1135.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (2 samples, 0.53%)</title><rect x="93.0667%" y="1109" width="0.5333%" height="15" fill="rgb(210,61,42)" fg:x="349" fg:w="2"/><text x="93.3167%" y="1119.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (2 samples, 0.53%)</title><rect x="93.0667%" y="1093" width="0.5333%" height="15" fill="rgb(211,52,33)" fg:x="349" fg:w="2"/><text x="93.3167%" y="1103.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (3 samples, 0.80%)</title><rect x="93.6000%" y="1141" width="0.8000%" height="15" fill="rgb(234,58,33)" fg:x="351" fg:w="3"/><text x="93.8500%" y="1151.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.80%)</title><rect x="93.6000%" y="1125" width="0.8000%" height="15" fill="rgb(220,115,36)" fg:x="351" fg:w="3"/><text x="93.8500%" y="1135.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.80%)</title><rect x="93.6000%" y="1109" width="0.8000%" height="15" fill="rgb(243,153,54)" fg:x="351" fg:w="3"/><text x="93.8500%" y="1119.50"></text></g><g><title>core::slice::memchr::memchr_general_case (3 samples, 0.80%)</title><rect x="93.6000%" y="1093" width="0.8000%" height="15" fill="rgb(251,47,18)" fg:x="351" fg:w="3"/><text x="93.8500%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.53%)</title><rect x="95.2000%" y="1077" width="0.5333%" height="15" fill="rgb(242,102,42)" fg:x="357" fg:w="2"/><text x="95.4500%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (3 samples, 0.80%)</title><rect x="95.2000%" y="1093" width="0.8000%" height="15" fill="rgb(234,31,38)" fg:x="357" fg:w="3"/><text x="95.4500%" y="1103.50"></text></g><g><title>core::slice::memchr::memrchr::{{closure}} (1 samples, 0.27%)</title><rect x="95.7333%" y="1077" width="0.2667%" height="15" fill="rgb(221,117,51)" fg:x="359" fg:w="1"/><text x="95.9833%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to (2 samples, 0.53%)</title><rect x="96.0000%" y="1093" width="0.5333%" height="15" fill="rgb(212,20,18)" fg:x="360" fg:w="2"/><text x="96.2500%" y="1103.50"></text></g><g><title>core::ptr::align_offset (2 samples, 0.53%)</title><rect x="96.0000%" y="1077" width="0.5333%" height="15" fill="rgb(245,133,36)" fg:x="360" fg:w="2"/><text x="96.2500%" y="1087.50"></text></g><g><title>core::str::&lt;impl str&gt;::rfind (9 samples, 2.40%)</title><rect x="94.4000%" y="1141" width="2.4000%" height="15" fill="rgb(212,6,19)" fg:x="354" fg:w="9"/><text x="94.6500%" y="1151.50">co..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (9 samples, 2.40%)</title><rect x="94.4000%" y="1125" width="2.4000%" height="15" fill="rgb(218,1,36)" fg:x="354" fg:w="9"/><text x="94.6500%" y="1135.50">&lt;c..</text></g><g><title>core::slice::memchr::memrchr (8 samples, 2.13%)</title><rect x="94.6667%" y="1109" width="2.1333%" height="15" fill="rgb(246,84,54)" fg:x="355" fg:w="8"/><text x="94.9167%" y="1119.50">c..</text></g><g><title>core::slice::memchr::contains_zero_byte (1 samples, 0.27%)</title><rect x="96.5333%" y="1093" width="0.2667%" height="15" fill="rgb(242,110,6)" fg:x="362" fg:w="1"/><text x="96.7833%" y="1103.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 0.27%)</title><rect x="96.8000%" y="1141" width="0.2667%" height="15" fill="rgb(214,47,5)" fg:x="363" fg:w="1"/><text x="97.0500%" y="1151.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 0.27%)</title><rect x="96.8000%" y="1125" width="0.2667%" height="15" fill="rgb(218,159,25)" fg:x="363" fg:w="1"/><text x="97.0500%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 0.27%)</title><rect x="96.8000%" y="1109" width="0.2667%" height="15" fill="rgb(215,211,28)" fg:x="363" fg:w="1"/><text x="97.0500%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.27%)</title><rect x="96.8000%" y="1093" width="0.2667%" height="15" fill="rgb(238,59,32)" fg:x="363" fg:w="1"/><text x="97.0500%" y="1103.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.27%)</title><rect x="96.8000%" y="1077" width="0.2667%" height="15" fill="rgb(226,82,3)" fg:x="363" fg:w="1"/><text x="97.0500%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.27%)</title><rect x="96.8000%" y="1061" width="0.2667%" height="15" fill="rgb(240,164,32)" fg:x="363" fg:w="1"/><text x="97.0500%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_prefix (1 samples, 0.27%)</title><rect x="97.0667%" y="1141" width="0.2667%" height="15" fill="rgb(232,46,7)" fg:x="364" fg:w="1"/><text x="97.3167%" y="1151.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_prefix_of (1 samples, 0.27%)</title><rect x="97.0667%" y="1125" width="0.2667%" height="15" fill="rgb(229,129,53)" fg:x="364" fg:w="1"/><text x="97.3167%" y="1135.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.27%)</title><rect x="97.3333%" y="1093" width="0.2667%" height="15" fill="rgb(234,188,29)" fg:x="365" fg:w="1"/><text x="97.5833%" y="1103.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.53%)</title><rect x="97.6000%" y="1093" width="0.5333%" height="15" fill="rgb(246,141,4)" fg:x="366" fg:w="2"/><text x="97.8500%" y="1103.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.53%)</title><rect x="97.6000%" y="1077" width="0.5333%" height="15" fill="rgb(229,23,39)" fg:x="366" fg:w="2"/><text x="97.8500%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.53%)</title><rect x="97.6000%" y="1061" width="0.5333%" height="15" fill="rgb(206,12,3)" fg:x="366" fg:w="2"/><text x="97.8500%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (4 samples, 1.07%)</title><rect x="97.3333%" y="1125" width="1.0667%" height="15" fill="rgb(252,226,20)" fg:x="365" fg:w="4"/><text x="97.5833%" y="1135.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (4 samples, 1.07%)</title><rect x="97.3333%" y="1109" width="1.0667%" height="15" fill="rgb(216,123,35)" fg:x="365" fg:w="4"/><text x="97.5833%" y="1119.50"></text></g><g><title>iri_string::resolve_old::remove_dot_segments (1 samples, 0.27%)</title><rect x="98.1333%" y="1093" width="0.2667%" height="15" fill="rgb(212,68,40)" fg:x="368" fg:w="1"/><text x="98.3833%" y="1103.50"></text></g><g><title>__libc_start_main_impl (368 samples, 98.13%)</title><rect x="0.5333%" y="1461" width="98.1333%" height="15" fill="rgb(254,125,32)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1471.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (368 samples, 98.13%)</title><rect x="0.5333%" y="1445" width="98.1333%" height="15" fill="rgb(253,97,22)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1455.50">__libc_start_call_main</text></g><g><title>main (368 samples, 98.13%)</title><rect x="0.5333%" y="1429" width="98.1333%" height="15" fill="rgb(241,101,14)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1439.50">main</text></g><g><title>std::rt::lang_start_internal (368 samples, 98.13%)</title><rect x="0.5333%" y="1413" width="98.1333%" height="15" fill="rgb(238,103,29)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1423.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (368 samples, 98.13%)</title><rect x="0.5333%" y="1397" width="98.1333%" height="15" fill="rgb(233,195,47)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1407.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (368 samples, 98.13%)</title><rect x="0.5333%" y="1381" width="98.1333%" height="15" fill="rgb(246,218,30)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1391.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (368 samples, 98.13%)</title><rect x="0.5333%" y="1365" width="98.1333%" height="15" fill="rgb(219,145,47)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1375.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (368 samples, 98.13%)</title><rect x="0.5333%" y="1349" width="98.1333%" height="15" fill="rgb(243,12,26)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1359.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (368 samples, 98.13%)</title><rect x="0.5333%" y="1333" width="98.1333%" height="15" fill="rgb(214,87,16)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1343.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (368 samples, 98.13%)</title><rect x="0.5333%" y="1317" width="98.1333%" height="15" fill="rgb(208,99,42)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1327.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (368 samples, 98.13%)</title><rect x="0.5333%" y="1301" width="98.1333%" height="15" fill="rgb(253,99,2)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1311.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (368 samples, 98.13%)</title><rect x="0.5333%" y="1285" width="98.1333%" height="15" fill="rgb(220,168,23)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1295.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (368 samples, 98.13%)</title><rect x="0.5333%" y="1269" width="98.1333%" height="15" fill="rgb(242,38,24)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1279.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (368 samples, 98.13%)</title><rect x="0.5333%" y="1253" width="98.1333%" height="15" fill="rgb(225,182,9)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1263.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (368 samples, 98.13%)</title><rect x="0.5333%" y="1237" width="98.1333%" height="15" fill="rgb(243,178,37)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1247.50">core::ops::function::FnOnce::call_once</text></g><g><title>old::main (368 samples, 98.13%)</title><rect x="0.5333%" y="1221" width="98.1333%" height="15" fill="rgb(232,139,19)" fg:x="2" fg:w="368"/><text x="0.7833%" y="1231.50">old::main</text></g><g><title>iri_string::resolve_old::resolve (366 samples, 97.60%)</title><rect x="1.0667%" y="1205" width="97.6000%" height="15" fill="rgb(225,201,24)" fg:x="4" fg:w="366"/><text x="1.3167%" y="1215.50">iri_string::resolve_old::resolve</text></g><g><title>iri_string::resolve_old::resolve_impl (362 samples, 96.53%)</title><rect x="2.1333%" y="1189" width="96.5333%" height="15" fill="rgb(221,47,46)" fg:x="8" fg:w="362"/><text x="2.3833%" y="1199.50">iri_string::resolve_old::resolve_impl</text></g><g><title>iri_string::resolve_old::remove_dot_segments (42 samples, 11.20%)</title><rect x="87.4667%" y="1173" width="11.2000%" height="15" fill="rgb(249,23,13)" fg:x="328" fg:w="42"/><text x="87.7167%" y="1183.50">iri_string::reso..</text></g><g><title>iri_string::resolve_old::remove_dot_segments_step (42 samples, 11.20%)</title><rect x="87.4667%" y="1157" width="11.2000%" height="15" fill="rgb(219,9,5)" fg:x="328" fg:w="42"/><text x="87.7167%" y="1167.50">iri_string::reso..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (5 samples, 1.33%)</title><rect x="97.3333%" y="1141" width="1.3333%" height="15" fill="rgb(254,171,16)" fg:x="365" fg:w="5"/><text x="97.5833%" y="1151.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.27%)</title><rect x="98.4000%" y="1125" width="0.2667%" height="15" fill="rgb(230,171,20)" fg:x="369" fg:w="1"/><text x="98.6500%" y="1135.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.27%)</title><rect x="98.4000%" y="1109" width="0.2667%" height="15" fill="rgb(210,71,41)" fg:x="369" fg:w="1"/><text x="98.6500%" y="1119.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.27%)</title><rect x="98.4000%" y="1093" width="0.2667%" height="15" fill="rgb(206,173,20)" fg:x="369" fg:w="1"/><text x="98.6500%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.27%)</title><rect x="98.4000%" y="1077" width="0.2667%" height="15" fill="rgb(233,88,34)" fg:x="369" fg:w="1"/><text x="98.6500%" y="1087.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.27%)</title><rect x="98.4000%" y="1061" width="0.2667%" height="15" fill="rgb(223,209,46)" fg:x="369" fg:w="1"/><text x="98.6500%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="98.6667%" y="1413" width="0.2667%" height="15" fill="rgb(250,43,18)" fg:x="370" fg:w="1"/><text x="98.9167%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="98.6667%" y="1397" width="0.2667%" height="15" fill="rgb(208,13,10)" fg:x="370" fg:w="1"/><text x="98.9167%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="98.6667%" y="1381" width="0.2667%" height="15" fill="rgb(212,200,36)" fg:x="370" fg:w="1"/><text x="98.9167%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="98.6667%" y="1365" width="0.2667%" height="15" fill="rgb(225,90,30)" fg:x="370" fg:w="1"/><text x="98.9167%" y="1375.50"></text></g><g><title>_dl_start_final (2 samples, 0.53%)</title><rect x="98.6667%" y="1445" width="0.5333%" height="15" fill="rgb(236,182,39)" fg:x="370" fg:w="2"/><text x="98.9167%" y="1455.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.53%)</title><rect x="98.6667%" y="1429" width="0.5333%" height="15" fill="rgb(212,144,35)" fg:x="370" fg:w="2"/><text x="98.9167%" y="1439.50"></text></g><g><title>dl_main (1 samples, 0.27%)</title><rect x="98.9333%" y="1413" width="0.2667%" height="15" fill="rgb(228,63,44)" fg:x="371" fg:w="1"/><text x="99.1833%" y="1423.50"></text></g><g><title>call_init_paths (1 samples, 0.27%)</title><rect x="98.9333%" y="1397" width="0.2667%" height="15" fill="rgb(228,109,6)" fg:x="371" fg:w="1"/><text x="99.1833%" y="1407.50"></text></g><g><title>_dl_init_paths (1 samples, 0.27%)</title><rect x="98.9333%" y="1381" width="0.2667%" height="15" fill="rgb(238,117,24)" fg:x="371" fg:w="1"/><text x="99.1833%" y="1391.50"></text></g><g><title>_dl_important_hwcaps (1 samples, 0.27%)</title><rect x="98.9333%" y="1365" width="0.2667%" height="15" fill="rgb(242,26,26)" fg:x="371" fg:w="1"/><text x="99.1833%" y="1375.50"></text></g><g><title>sort_priorities_by_name (1 samples, 0.27%)</title><rect x="98.9333%" y="1349" width="0.2667%" height="15" fill="rgb(221,92,48)" fg:x="371" fg:w="1"/><text x="99.1833%" y="1359.50"></text></g><g><title>bcmp (1 samples, 0.27%)</title><rect x="98.9333%" y="1333" width="0.2667%" height="15" fill="rgb(209,209,32)" fg:x="371" fg:w="1"/><text x="99.1833%" y="1343.50"></text></g><g><title>elf_get_dynamic_info (1 samples, 0.27%)</title><rect x="99.2000%" y="1445" width="0.2667%" height="15" fill="rgb(221,70,22)" fg:x="372" fg:w="1"/><text x="99.4500%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.2000%" y="1429" width="0.2667%" height="15" fill="rgb(248,145,5)" fg:x="372" fg:w="1"/><text x="99.4500%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.2000%" y="1413" width="0.2667%" height="15" fill="rgb(226,116,26)" fg:x="372" fg:w="1"/><text x="99.4500%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.2000%" y="1397" width="0.2667%" height="15" fill="rgb(244,5,17)" fg:x="372" fg:w="1"/><text x="99.4500%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.2000%" y="1381" width="0.2667%" height="15" fill="rgb(252,159,33)" fg:x="372" fg:w="1"/><text x="99.4500%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.2000%" y="1365" width="0.2667%" height="15" fill="rgb(206,71,0)" fg:x="372" fg:w="1"/><text x="99.4500%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.2000%" y="1349" width="0.2667%" height="15" fill="rgb(233,118,54)" fg:x="372" fg:w="1"/><text x="99.4500%" y="1359.50"></text></g><g><title>elf_machine_load_address (1 samples, 0.27%)</title><rect x="99.4667%" y="1445" width="0.2667%" height="15" fill="rgb(234,83,48)" fg:x="373" fg:w="1"/><text x="99.7167%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.4667%" y="1429" width="0.2667%" height="15" fill="rgb(228,3,54)" fg:x="373" fg:w="1"/><text x="99.7167%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.4667%" y="1413" width="0.2667%" height="15" fill="rgb(226,155,13)" fg:x="373" fg:w="1"/><text x="99.7167%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.4667%" y="1397" width="0.2667%" height="15" fill="rgb(241,28,37)" fg:x="373" fg:w="1"/><text x="99.7167%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.4667%" y="1381" width="0.2667%" height="15" fill="rgb(233,93,10)" fg:x="373" fg:w="1"/><text x="99.7167%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.4667%" y="1365" width="0.2667%" height="15" fill="rgb(225,113,19)" fg:x="373" fg:w="1"/><text x="99.7167%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.4667%" y="1349" width="0.2667%" height="15" fill="rgb(241,2,18)" fg:x="373" fg:w="1"/><text x="99.7167%" y="1359.50"></text></g><g><title>all (375 samples, 100%)</title><rect x="0.0000%" y="1509" width="100.0000%" height="15" fill="rgb(228,207,21)" fg:x="0" fg:w="375"/><text x="0.2500%" y="1519.50"></text></g><g><title>old (375 samples, 100.00%)</title><rect x="0.0000%" y="1493" width="100.0000%" height="15" fill="rgb(213,211,35)" fg:x="0" fg:w="375"/><text x="0.2500%" y="1503.50">old</text></g><g><title>_start (375 samples, 100.00%)</title><rect x="0.0000%" y="1477" width="100.0000%" height="15" fill="rgb(209,83,10)" fg:x="0" fg:w="375"/><text x="0.2500%" y="1487.50">_start</text></g><g><title>_dl_start (5 samples, 1.33%)</title><rect x="98.6667%" y="1461" width="1.3333%" height="15" fill="rgb(209,164,1)" fg:x="370" fg:w="5"/><text x="98.9167%" y="1471.50"></text></g><g><title>rtld_timer_start (1 samples, 0.27%)</title><rect x="99.7333%" y="1445" width="0.2667%" height="15" fill="rgb(213,184,43)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1429" width="0.2667%" height="15" fill="rgb(231,61,34)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1413" width="0.2667%" height="15" fill="rgb(235,75,3)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1397" width="0.2667%" height="15" fill="rgb(220,106,47)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1381" width="0.2667%" height="15" fill="rgb(210,196,33)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1365" width="0.2667%" height="15" fill="rgb(229,154,42)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1349" width="0.2667%" height="15" fill="rgb(228,114,26)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1333" width="0.2667%" height="15" fill="rgb(208,144,1)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.27%)</title><rect x="99.7333%" y="1317" width="0.2667%" height="15" fill="rgb(239,112,37)" fg:x="374" fg:w="1"/><text x="99.9833%" y="1327.50"></text></g></svg></svg>