<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1526" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1509.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1509.00"> </text><svg id="frames" x="10" width="1180" total_samples="341"><g><title>[unknown] (1 samples, 0.29%)</title><rect x="0.0000%" y="1429" width="0.2933%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="0.0000%" y="1413" width="0.2933%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="0.0000%" y="1397" width="0.2933%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="0.0000%" y="1381" width="0.2933%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="0.0000%" y="1365" width="0.2933%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="0.0000%" y="1349" width="0.2933%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1359.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.59%)</title><rect x="5.8651%" y="341" width="0.5865%" height="15" fill="rgb(207,160,47)" fg:x="20" fg:w="2"/><text x="6.1151%" y="351.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (4 samples, 1.17%)</title><rect x="6.4516%" y="341" width="1.1730%" height="15" fill="rgb(228,23,34)" fg:x="22" fg:w="4"/><text x="6.7016%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.29%)</title><rect x="7.3314%" y="325" width="0.2933%" height="15" fill="rgb(218,30,26)" fg:x="25" fg:w="1"/><text x="7.5814%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.29%)</title><rect x="7.3314%" y="309" width="0.2933%" height="15" fill="rgb(220,122,19)" fg:x="25" fg:w="1"/><text x="7.5814%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.29%)</title><rect x="7.3314%" y="293" width="0.2933%" height="15" fill="rgb(250,228,42)" fg:x="25" fg:w="1"/><text x="7.5814%" y="303.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.29%)</title><rect x="7.6246%" y="293" width="0.2933%" height="15" fill="rgb(240,193,28)" fg:x="26" fg:w="1"/><text x="7.8746%" y="303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.59%)</title><rect x="9.0909%" y="261" width="0.5865%" height="15" fill="rgb(216,20,37)" fg:x="31" fg:w="2"/><text x="9.3409%" y="271.50"></text></g><g><title>iri_string::parser::details::pct_encoded (2 samples, 0.59%)</title><rect x="9.0909%" y="245" width="0.5865%" height="15" fill="rgb(206,188,39)" fg:x="31" fg:w="2"/><text x="9.3409%" y="255.50"></text></g><g><title>nom::error::context::{{closure}} (2 samples, 0.59%)</title><rect x="9.0909%" y="229" width="0.5865%" height="15" fill="rgb(217,207,13)" fg:x="31" fg:w="2"/><text x="9.3409%" y="239.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="9.3842%" y="213" width="0.2933%" height="15" fill="rgb(231,73,38)" fg:x="32" fg:w="1"/><text x="9.6342%" y="223.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (1 samples, 0.29%)</title><rect x="9.3842%" y="197" width="0.2933%" height="15" fill="rgb(225,20,46)" fg:x="32" fg:w="1"/><text x="9.6342%" y="207.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="9.3842%" y="181" width="0.2933%" height="15" fill="rgb(210,31,41)" fg:x="32" fg:w="1"/><text x="9.6342%" y="191.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.59%)</title><rect x="9.6774%" y="245" width="0.5865%" height="15" fill="rgb(221,200,47)" fg:x="33" fg:w="2"/><text x="9.9274%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.29%)</title><rect x="9.9707%" y="229" width="0.2933%" height="15" fill="rgb(226,26,5)" fg:x="34" fg:w="1"/><text x="10.2207%" y="239.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.29%)</title><rect x="9.9707%" y="213" width="0.2933%" height="15" fill="rgb(249,33,26)" fg:x="34" fg:w="1"/><text x="10.2207%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.29%)</title><rect x="9.9707%" y="197" width="0.2933%" height="15" fill="rgb(235,183,28)" fg:x="34" fg:w="1"/><text x="10.2207%" y="207.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.59%)</title><rect x="10.2639%" y="245" width="0.5865%" height="15" fill="rgb(221,5,38)" fg:x="35" fg:w="2"/><text x="10.5139%" y="255.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.59%)</title><rect x="10.2639%" y="229" width="0.5865%" height="15" fill="rgb(247,18,42)" fg:x="35" fg:w="2"/><text x="10.5139%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="10.5572%" y="213" width="0.2933%" height="15" fill="rgb(241,131,45)" fg:x="36" fg:w="1"/><text x="10.8072%" y="223.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (7 samples, 2.05%)</title><rect x="10.8504%" y="181" width="2.0528%" height="15" fill="rgb(249,31,29)" fg:x="37" fg:w="7"/><text x="11.1004%" y="191.50">&lt;..</text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (3 samples, 0.88%)</title><rect x="12.0235%" y="165" width="0.8798%" height="15" fill="rgb(225,111,53)" fg:x="41" fg:w="3"/><text x="12.2735%" y="175.50"></text></g><g><title>core::ops::function::FnMut::call_mut (39 samples, 11.44%)</title><rect x="1.7595%" y="517" width="11.4370%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="39"/><text x="2.0095%" y="527.50">core::ops::functi..</text></g><g><title>iri_string::parser::details::segment (39 samples, 11.44%)</title><rect x="1.7595%" y="501" width="11.4370%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="39"/><text x="2.0095%" y="511.50">iri_string::parse..</text></g><g><title>nom::error::context::{{closure}} (39 samples, 11.44%)</title><rect x="1.7595%" y="485" width="11.4370%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="39"/><text x="2.0095%" y="495.50">nom::error::conte..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (37 samples, 10.85%)</title><rect x="2.3460%" y="469" width="10.8504%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="37"/><text x="2.5960%" y="479.50">&lt;F as nom::inter..</text></g><g><title>nom::combinator::recognize::{{closure}} (35 samples, 10.26%)</title><rect x="2.9326%" y="453" width="10.2639%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="35"/><text x="3.1826%" y="463.50">nom::combinator..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 9.97%)</title><rect x="3.2258%" y="437" width="9.9707%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="34"/><text x="3.4758%" y="447.50">&lt;F as nom::int..</text></g><g><title>nom::multi::many0_count::{{closure}} (34 samples, 9.97%)</title><rect x="3.2258%" y="421" width="9.9707%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="34"/><text x="3.4758%" y="431.50">nom::multi::ma..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (32 samples, 9.38%)</title><rect x="3.8123%" y="405" width="9.3842%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="32"/><text x="4.0623%" y="415.50">&lt;F as nom::in..</text></g><g><title>core::ops::function::FnMut::call_mut (31 samples, 9.09%)</title><rect x="4.1056%" y="389" width="9.0909%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="31"/><text x="4.3556%" y="399.50">core::ops::fu..</text></g><g><title>iri_string::parser::details::pchar (31 samples, 9.09%)</title><rect x="4.1056%" y="373" width="9.0909%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="31"/><text x="4.3556%" y="383.50">iri_string::p..</text></g><g><title>nom::combinator::recognize::{{closure}} (31 samples, 9.09%)</title><rect x="4.1056%" y="357" width="9.0909%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="31"/><text x="4.3556%" y="367.50">nom::combinat..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (19 samples, 5.57%)</title><rect x="7.6246%" y="341" width="5.5718%" height="15" fill="rgb(238,167,29)" fg:x="26" fg:w="19"/><text x="7.8746%" y="351.50">&lt;F as n..</text></g><g><title>nom::branch::alt::{{closure}} (19 samples, 5.57%)</title><rect x="7.6246%" y="325" width="5.5718%" height="15" fill="rgb(232,182,51)" fg:x="26" fg:w="19"/><text x="7.8746%" y="335.50">nom::br..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (19 samples, 5.57%)</title><rect x="7.6246%" y="309" width="5.5718%" height="15" fill="rgb(231,60,39)" fg:x="26" fg:w="19"/><text x="7.8746%" y="319.50">&lt;(A,B) ..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (18 samples, 5.28%)</title><rect x="7.9179%" y="293" width="5.2786%" height="15" fill="rgb(208,69,12)" fg:x="27" fg:w="18"/><text x="8.1679%" y="303.50">&lt;nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (17 samples, 4.99%)</title><rect x="8.2111%" y="277" width="4.9853%" height="15" fill="rgb(235,93,37)" fg:x="28" fg:w="17"/><text x="8.4611%" y="287.50">&lt;F as ..</text></g><g><title>nom::character::complete::satisfy::{{closure}} (12 samples, 3.52%)</title><rect x="9.6774%" y="261" width="3.5191%" height="15" fill="rgb(213,116,39)" fg:x="33" fg:w="12"/><text x="9.9274%" y="271.50">nom..</text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 2.35%)</title><rect x="10.8504%" y="245" width="2.3460%" height="15" fill="rgb(222,207,29)" fg:x="37" fg:w="8"/><text x="11.1004%" y="255.50">c..</text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (8 samples, 2.35%)</title><rect x="10.8504%" y="229" width="2.3460%" height="15" fill="rgb(206,96,30)" fg:x="37" fg:w="8"/><text x="11.1004%" y="239.50">n..</text></g><g><title>iri_string::parser::details::pchar::{{closure}} (8 samples, 2.35%)</title><rect x="10.8504%" y="213" width="2.3460%" height="15" fill="rgb(218,138,4)" fg:x="37" fg:w="8"/><text x="11.1004%" y="223.50">i..</text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (8 samples, 2.35%)</title><rect x="10.8504%" y="197" width="2.3460%" height="15" fill="rgb(250,191,14)" fg:x="37" fg:w="8"/><text x="11.1004%" y="207.50">&lt;..</text></g><g><title>iri_string::parser::char::is_ucschar (1 samples, 0.29%)</title><rect x="12.9032%" y="181" width="0.2933%" height="15" fill="rgb(239,60,40)" fg:x="44" fg:w="1"/><text x="13.1532%" y="191.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="0.8798%" y="693" width="12.6100%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="43"/><text x="1.1298%" y="703.50">&lt;F as nom::internal..</text></g><g><title>core::ops::function::FnMut::call_mut (43 samples, 12.61%)</title><rect x="0.8798%" y="677" width="12.6100%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="43"/><text x="1.1298%" y="687.50">core::ops::function..</text></g><g><title>iri_string::parser::details::path_abempty (43 samples, 12.61%)</title><rect x="0.8798%" y="661" width="12.6100%" height="15" fill="rgb(250,213,24)" fg:x="3" fg:w="43"/><text x="1.1298%" y="671.50">iri_string::parser:..</text></g><g><title>nom::error::context::{{closure}} (43 samples, 12.61%)</title><rect x="0.8798%" y="645" width="12.6100%" height="15" fill="rgb(247,123,22)" fg:x="3" fg:w="43"/><text x="1.1298%" y="655.50">nom::error::context..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="0.8798%" y="629" width="12.6100%" height="15" fill="rgb(231,138,38)" fg:x="3" fg:w="43"/><text x="1.1298%" y="639.50">&lt;F as nom::internal..</text></g><g><title>nom::combinator::recognize::{{closure}} (43 samples, 12.61%)</title><rect x="0.8798%" y="613" width="12.6100%" height="15" fill="rgb(231,145,46)" fg:x="3" fg:w="43"/><text x="1.1298%" y="623.50">nom::combinator::re..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="0.8798%" y="597" width="12.6100%" height="15" fill="rgb(251,118,11)" fg:x="3" fg:w="43"/><text x="1.1298%" y="607.50">&lt;F as nom::internal..</text></g><g><title>nom::multi::many0_count::{{closure}} (43 samples, 12.61%)</title><rect x="0.8798%" y="581" width="12.6100%" height="15" fill="rgb(217,147,25)" fg:x="3" fg:w="43"/><text x="1.1298%" y="591.50">nom::multi::many0_c..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 11.73%)</title><rect x="1.7595%" y="565" width="11.7302%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="40"/><text x="2.0095%" y="575.50">&lt;F as nom::intern..</text></g><g><title>nom::sequence::preceded::{{closure}} (40 samples, 11.73%)</title><rect x="1.7595%" y="549" width="11.7302%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="40"/><text x="2.0095%" y="559.50">nom::sequence::pr..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 11.73%)</title><rect x="1.7595%" y="533" width="11.7302%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="40"/><text x="2.0095%" y="543.50">&lt;F as nom::intern..</text></g><g><title>nom::character::complete::char::{{closure}} (1 samples, 0.29%)</title><rect x="13.1965%" y="517" width="0.2933%" height="15" fill="rgb(248,47,43)" fg:x="45" fg:w="1"/><text x="13.4465%" y="527.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="13.1965%" y="501" width="0.2933%" height="15" fill="rgb(221,10,30)" fg:x="45" fg:w="1"/><text x="13.4465%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="13.1965%" y="485" width="0.2933%" height="15" fill="rgb(210,229,1)" fg:x="45" fg:w="1"/><text x="13.4465%" y="495.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (1 samples, 0.29%)</title><rect x="13.7830%" y="581" width="0.2933%" height="15" fill="rgb(222,148,37)" fg:x="47" fg:w="1"/><text x="14.0330%" y="591.50"></text></g><g><title>iri_string::parser::details::ip_literal (1 samples, 0.29%)</title><rect x="14.3695%" y="389" width="0.2933%" height="15" fill="rgb(234,67,33)" fg:x="49" fg:w="1"/><text x="14.6195%" y="399.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.29%)</title><rect x="14.3695%" y="373" width="0.2933%" height="15" fill="rgb(247,98,35)" fg:x="49" fg:w="1"/><text x="14.6195%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="14.3695%" y="357" width="0.2933%" height="15" fill="rgb(247,138,52)" fg:x="49" fg:w="1"/><text x="14.6195%" y="367.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (1 samples, 0.29%)</title><rect x="14.3695%" y="341" width="0.2933%" height="15" fill="rgb(213,79,30)" fg:x="49" fg:w="1"/><text x="14.6195%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="14.3695%" y="325" width="0.2933%" height="15" fill="rgb(246,177,23)" fg:x="49" fg:w="1"/><text x="14.6195%" y="335.50"></text></g><g><title>iri_string::parser::details::ipv4address (2 samples, 0.59%)</title><rect x="14.6628%" y="389" width="0.5865%" height="15" fill="rgb(230,62,27)" fg:x="50" fg:w="2"/><text x="14.9128%" y="399.50"></text></g><g><title>nom::error::context::{{closure}} (2 samples, 0.59%)</title><rect x="14.6628%" y="373" width="0.5865%" height="15" fill="rgb(216,154,8)" fg:x="50" fg:w="2"/><text x="14.9128%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="14.6628%" y="357" width="0.5865%" height="15" fill="rgb(244,35,45)" fg:x="50" fg:w="2"/><text x="14.9128%" y="367.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (2 samples, 0.59%)</title><rect x="14.6628%" y="341" width="0.5865%" height="15" fill="rgb(251,115,12)" fg:x="50" fg:w="2"/><text x="14.9128%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="14.6628%" y="325" width="0.5865%" height="15" fill="rgb(240,54,50)" fg:x="50" fg:w="2"/><text x="14.9128%" y="335.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (2 samples, 0.59%)</title><rect x="14.6628%" y="309" width="0.5865%" height="15" fill="rgb(233,84,52)" fg:x="50" fg:w="2"/><text x="14.9128%" y="319.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="14.6628%" y="293" width="0.5865%" height="15" fill="rgb(207,117,47)" fg:x="50" fg:w="2"/><text x="14.9128%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="14.6628%" y="277" width="0.5865%" height="15" fill="rgb(249,43,39)" fg:x="50" fg:w="2"/><text x="14.9128%" y="287.50"></text></g><g><title>nom::sequence::terminated::{{closure}} (2 samples, 0.59%)</title><rect x="14.6628%" y="261" width="0.5865%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="2"/><text x="14.9128%" y="271.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="14.6628%" y="245" width="0.5865%" height="15" fill="rgb(236,212,23)" fg:x="50" fg:w="2"/><text x="14.9128%" y="255.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.59%)</title><rect x="14.6628%" y="229" width="0.5865%" height="15" fill="rgb(242,79,21)" fg:x="50" fg:w="2"/><text x="14.9128%" y="239.50"></text></g><g><title>iri_string::parser::details::dec_octet (2 samples, 0.59%)</title><rect x="14.6628%" y="213" width="0.5865%" height="15" fill="rgb(211,96,35)" fg:x="50" fg:w="2"/><text x="14.9128%" y="223.50"></text></g><g><title>nom::error::context::{{closure}} (2 samples, 0.59%)</title><rect x="14.6628%" y="197" width="0.5865%" height="15" fill="rgb(253,215,40)" fg:x="50" fg:w="2"/><text x="14.9128%" y="207.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="14.6628%" y="181" width="0.5865%" height="15" fill="rgb(211,81,21)" fg:x="50" fg:w="2"/><text x="14.9128%" y="191.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (2 samples, 0.59%)</title><rect x="14.6628%" y="165" width="0.5865%" height="15" fill="rgb(208,190,38)" fg:x="50" fg:w="2"/><text x="14.9128%" y="175.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="14.6628%" y="149" width="0.5865%" height="15" fill="rgb(235,213,38)" fg:x="50" fg:w="2"/><text x="14.9128%" y="159.50"></text></g><g><title>nom::branch::alt::{{closure}} (2 samples, 0.59%)</title><rect x="14.6628%" y="133" width="0.5865%" height="15" fill="rgb(237,122,38)" fg:x="50" fg:w="2"/><text x="14.9128%" y="143.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.29%)</title><rect x="14.9560%" y="117" width="0.2933%" height="15" fill="rgb(244,218,35)" fg:x="51" fg:w="1"/><text x="15.2060%" y="127.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="14.9560%" y="101" width="0.2933%" height="15" fill="rgb(240,68,47)" fg:x="51" fg:w="1"/><text x="15.2060%" y="111.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (1 samples, 0.29%)</title><rect x="14.9560%" y="85" width="0.2933%" height="15" fill="rgb(210,16,53)" fg:x="51" fg:w="1"/><text x="15.2060%" y="95.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="14.9560%" y="69" width="0.2933%" height="15" fill="rgb(235,124,12)" fg:x="51" fg:w="1"/><text x="15.2060%" y="79.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (1 samples, 0.29%)</title><rect x="14.9560%" y="53" width="0.2933%" height="15" fill="rgb(224,169,11)" fg:x="51" fg:w="1"/><text x="15.2060%" y="63.50"></text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="14.9560%" y="37" width="0.2933%" height="15" fill="rgb(250,166,2)" fg:x="51" fg:w="1"/><text x="15.2060%" y="47.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (2 samples, 0.59%)</title><rect x="15.8358%" y="53" width="0.5865%" height="15" fill="rgb(242,216,29)" fg:x="54" fg:w="2"/><text x="16.0858%" y="63.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (4 samples, 1.17%)</title><rect x="15.5425%" y="117" width="1.1730%" height="15" fill="rgb(230,116,27)" fg:x="53" fg:w="4"/><text x="15.7925%" y="127.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (4 samples, 1.17%)</title><rect x="15.5425%" y="101" width="1.1730%" height="15" fill="rgb(228,99,48)" fg:x="53" fg:w="4"/><text x="15.7925%" y="111.50"></text></g><g><title>iri_string::parser::details::reg_name::{{closure}} (4 samples, 1.17%)</title><rect x="15.5425%" y="85" width="1.1730%" height="15" fill="rgb(253,11,6)" fg:x="53" fg:w="4"/><text x="15.7925%" y="95.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (3 samples, 0.88%)</title><rect x="15.8358%" y="69" width="0.8798%" height="15" fill="rgb(247,143,39)" fg:x="54" fg:w="3"/><text x="16.0858%" y="79.50"></text></g><g><title>iri_string::parser::char::is_ucschar (1 samples, 0.29%)</title><rect x="16.4223%" y="53" width="0.2933%" height="15" fill="rgb(236,97,10)" fg:x="56" fg:w="1"/><text x="16.6723%" y="63.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.29%)</title><rect x="16.7155%" y="85" width="0.2933%" height="15" fill="rgb(233,208,19)" fg:x="57" fg:w="1"/><text x="16.9655%" y="95.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 3.23%)</title><rect x="14.0762%" y="517" width="3.2258%" height="15" fill="rgb(216,164,2)" fg:x="48" fg:w="11"/><text x="14.3262%" y="527.50">cor..</text></g><g><title>iri_string::parser::details::host (11 samples, 3.23%)</title><rect x="14.0762%" y="501" width="3.2258%" height="15" fill="rgb(220,129,5)" fg:x="48" fg:w="11"/><text x="14.3262%" y="511.50">iri..</text></g><g><title>nom::error::context::{{closure}} (11 samples, 3.23%)</title><rect x="14.0762%" y="485" width="3.2258%" height="15" fill="rgb(242,17,10)" fg:x="48" fg:w="11"/><text x="14.3262%" y="495.50">nom..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (11 samples, 3.23%)</title><rect x="14.0762%" y="469" width="3.2258%" height="15" fill="rgb(242,107,0)" fg:x="48" fg:w="11"/><text x="14.3262%" y="479.50">&lt;F ..</text></g><g><title>nom::branch::alt::{{closure}} (11 samples, 3.23%)</title><rect x="14.0762%" y="453" width="3.2258%" height="15" fill="rgb(251,28,31)" fg:x="48" fg:w="11"/><text x="14.3262%" y="463.50">nom..</text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (11 samples, 3.23%)</title><rect x="14.0762%" y="437" width="3.2258%" height="15" fill="rgb(233,223,10)" fg:x="48" fg:w="11"/><text x="14.3262%" y="447.50">&lt;(A..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10 samples, 2.93%)</title><rect x="14.3695%" y="421" width="2.9326%" height="15" fill="rgb(215,21,27)" fg:x="49" fg:w="10"/><text x="14.6195%" y="431.50">&lt;F..</text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 2.93%)</title><rect x="14.3695%" y="405" width="2.9326%" height="15" fill="rgb(232,23,21)" fg:x="49" fg:w="10"/><text x="14.6195%" y="415.50">co..</text></g><g><title>iri_string::parser::details::reg_name (7 samples, 2.05%)</title><rect x="15.2493%" y="389" width="2.0528%" height="15" fill="rgb(244,5,23)" fg:x="52" fg:w="7"/><text x="15.4993%" y="399.50">i..</text></g><g><title>nom::error::context::{{closure}} (7 samples, 2.05%)</title><rect x="15.2493%" y="373" width="2.0528%" height="15" fill="rgb(226,81,46)" fg:x="52" fg:w="7"/><text x="15.4993%" y="383.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="15.2493%" y="357" width="2.0528%" height="15" fill="rgb(247,70,30)" fg:x="52" fg:w="7"/><text x="15.4993%" y="367.50">&lt;..</text></g><g><title>nom::combinator::recognize::{{closure}} (7 samples, 2.05%)</title><rect x="15.2493%" y="341" width="2.0528%" height="15" fill="rgb(212,68,19)" fg:x="52" fg:w="7"/><text x="15.4993%" y="351.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="15.2493%" y="325" width="2.0528%" height="15" fill="rgb(240,187,13)" fg:x="52" fg:w="7"/><text x="15.4993%" y="335.50">&lt;..</text></g><g><title>nom::multi::many0_count::{{closure}} (7 samples, 2.05%)</title><rect x="15.2493%" y="309" width="2.0528%" height="15" fill="rgb(223,113,26)" fg:x="52" fg:w="7"/><text x="15.4993%" y="319.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="15.2493%" y="293" width="2.0528%" height="15" fill="rgb(206,192,2)" fg:x="52" fg:w="7"/><text x="15.4993%" y="303.50">&lt;..</text></g><g><title>nom::branch::alt::{{closure}} (7 samples, 2.05%)</title><rect x="15.2493%" y="277" width="2.0528%" height="15" fill="rgb(241,108,4)" fg:x="52" fg:w="7"/><text x="15.4993%" y="287.50">n..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (7 samples, 2.05%)</title><rect x="15.2493%" y="261" width="2.0528%" height="15" fill="rgb(247,173,49)" fg:x="52" fg:w="7"/><text x="15.4993%" y="271.50">&lt;..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="15.5425%" y="245" width="1.7595%" height="15" fill="rgb(224,114,35)" fg:x="53" fg:w="6"/><text x="15.7925%" y="255.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="15.5425%" y="229" width="1.7595%" height="15" fill="rgb(245,159,27)" fg:x="53" fg:w="6"/><text x="15.7925%" y="239.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (6 samples, 1.76%)</title><rect x="15.5425%" y="213" width="1.7595%" height="15" fill="rgb(245,172,44)" fg:x="53" fg:w="6"/><text x="15.7925%" y="223.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (6 samples, 1.76%)</title><rect x="15.5425%" y="197" width="1.7595%" height="15" fill="rgb(236,23,11)" fg:x="53" fg:w="6"/><text x="15.7925%" y="207.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (6 samples, 1.76%)</title><rect x="15.5425%" y="181" width="1.7595%" height="15" fill="rgb(205,117,38)" fg:x="53" fg:w="6"/><text x="15.7925%" y="191.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (6 samples, 1.76%)</title><rect x="15.5425%" y="165" width="1.7595%" height="15" fill="rgb(237,72,25)" fg:x="53" fg:w="6"/><text x="15.7925%" y="175.50"></text></g><g><title>core::str::pattern::Searcher::next_match (6 samples, 1.76%)</title><rect x="15.5425%" y="149" width="1.7595%" height="15" fill="rgb(244,70,9)" fg:x="53" fg:w="6"/><text x="15.7925%" y="159.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (6 samples, 1.76%)</title><rect x="15.5425%" y="133" width="1.7595%" height="15" fill="rgb(217,125,39)" fg:x="53" fg:w="6"/><text x="15.7925%" y="143.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.59%)</title><rect x="16.7155%" y="117" width="0.5865%" height="15" fill="rgb(235,36,10)" fg:x="57" fg:w="2"/><text x="16.9655%" y="127.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.59%)</title><rect x="16.7155%" y="101" width="0.5865%" height="15" fill="rgb(251,123,47)" fg:x="57" fg:w="2"/><text x="16.9655%" y="111.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.29%)</title><rect x="17.0088%" y="85" width="0.2933%" height="15" fill="rgb(221,13,13)" fg:x="58" fg:w="1"/><text x="17.2588%" y="95.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="17.0088%" y="69" width="0.2933%" height="15" fill="rgb(238,131,9)" fg:x="58" fg:w="1"/><text x="17.2588%" y="79.50"></text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (17 samples, 4.99%)</title><rect x="13.4897%" y="693" width="4.9853%" height="15" fill="rgb(211,50,8)" fg:x="46" fg:w="17"/><text x="13.7397%" y="703.50">&lt;nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (17 samples, 4.99%)</title><rect x="13.4897%" y="677" width="4.9853%" height="15" fill="rgb(245,182,24)" fg:x="46" fg:w="17"/><text x="13.7397%" y="687.50">&lt;F as ..</text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 4.99%)</title><rect x="13.4897%" y="661" width="4.9853%" height="15" fill="rgb(242,14,37)" fg:x="46" fg:w="17"/><text x="13.7397%" y="671.50">core::..</text></g><g><title>iri_string::parser::details::authority (17 samples, 4.99%)</title><rect x="13.4897%" y="645" width="4.9853%" height="15" fill="rgb(246,228,12)" fg:x="46" fg:w="17"/><text x="13.7397%" y="655.50">iri_st..</text></g><g><title>nom::error::context::{{closure}} (17 samples, 4.99%)</title><rect x="13.4897%" y="629" width="4.9853%" height="15" fill="rgb(213,55,15)" fg:x="46" fg:w="17"/><text x="13.7397%" y="639.50">nom::e..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (17 samples, 4.99%)</title><rect x="13.4897%" y="613" width="4.9853%" height="15" fill="rgb(209,9,3)" fg:x="46" fg:w="17"/><text x="13.7397%" y="623.50">&lt;F as ..</text></g><g><title>nom::combinator::recognize::{{closure}} (17 samples, 4.99%)</title><rect x="13.4897%" y="597" width="4.9853%" height="15" fill="rgb(230,59,30)" fg:x="46" fg:w="17"/><text x="13.7397%" y="607.50">nom::c..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (15 samples, 4.40%)</title><rect x="14.0762%" y="581" width="4.3988%" height="15" fill="rgb(209,121,21)" fg:x="48" fg:w="15"/><text x="14.3262%" y="591.50">&lt;F as..</text></g><g><title>nom::sequence::tuple::{{closure}} (15 samples, 4.40%)</title><rect x="14.0762%" y="565" width="4.3988%" height="15" fill="rgb(220,109,13)" fg:x="48" fg:w="15"/><text x="14.3262%" y="575.50">nom::..</text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (15 samples, 4.40%)</title><rect x="14.0762%" y="549" width="4.3988%" height="15" fill="rgb(232,18,1)" fg:x="48" fg:w="15"/><text x="14.3262%" y="559.50">&lt;(FnA..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (15 samples, 4.40%)</title><rect x="14.0762%" y="533" width="4.3988%" height="15" fill="rgb(215,41,42)" fg:x="48" fg:w="15"/><text x="14.3262%" y="543.50">&lt;F as..</text></g><g><title>nom::combinator::opt::{{closure}} (4 samples, 1.17%)</title><rect x="17.3021%" y="517" width="1.1730%" height="15" fill="rgb(224,123,36)" fg:x="59" fg:w="4"/><text x="17.5521%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.17%)</title><rect x="17.3021%" y="501" width="1.1730%" height="15" fill="rgb(240,125,3)" fg:x="59" fg:w="4"/><text x="17.5521%" y="511.50"></text></g><g><title>nom::sequence::terminated::{{closure}} (4 samples, 1.17%)</title><rect x="17.3021%" y="485" width="1.1730%" height="15" fill="rgb(205,98,50)" fg:x="59" fg:w="4"/><text x="17.5521%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.17%)</title><rect x="17.3021%" y="469" width="1.1730%" height="15" fill="rgb(205,185,37)" fg:x="59" fg:w="4"/><text x="17.5521%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 1.17%)</title><rect x="17.3021%" y="453" width="1.1730%" height="15" fill="rgb(238,207,15)" fg:x="59" fg:w="4"/><text x="17.5521%" y="463.50"></text></g><g><title>iri_string::parser::details::userinfo (4 samples, 1.17%)</title><rect x="17.3021%" y="437" width="1.1730%" height="15" fill="rgb(213,199,42)" fg:x="59" fg:w="4"/><text x="17.5521%" y="447.50"></text></g><g><title>nom::error::context::{{closure}} (4 samples, 1.17%)</title><rect x="17.3021%" y="421" width="1.1730%" height="15" fill="rgb(235,201,11)" fg:x="59" fg:w="4"/><text x="17.5521%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.17%)</title><rect x="17.3021%" y="405" width="1.1730%" height="15" fill="rgb(207,46,11)" fg:x="59" fg:w="4"/><text x="17.5521%" y="415.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (4 samples, 1.17%)</title><rect x="17.3021%" y="389" width="1.1730%" height="15" fill="rgb(241,35,35)" fg:x="59" fg:w="4"/><text x="17.5521%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.88%)</title><rect x="17.5953%" y="373" width="0.8798%" height="15" fill="rgb(243,32,47)" fg:x="60" fg:w="3"/><text x="17.8453%" y="383.50"></text></g><g><title>nom::multi::many0_count::{{closure}} (3 samples, 0.88%)</title><rect x="17.5953%" y="357" width="0.8798%" height="15" fill="rgb(247,202,23)" fg:x="60" fg:w="3"/><text x="17.8453%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.88%)</title><rect x="17.5953%" y="341" width="0.8798%" height="15" fill="rgb(219,102,11)" fg:x="60" fg:w="3"/><text x="17.8453%" y="351.50"></text></g><g><title>nom::branch::alt::{{closure}} (3 samples, 0.88%)</title><rect x="17.5953%" y="325" width="0.8798%" height="15" fill="rgb(243,110,44)" fg:x="60" fg:w="3"/><text x="17.8453%" y="335.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (3 samples, 0.88%)</title><rect x="17.5953%" y="309" width="0.8798%" height="15" fill="rgb(222,74,54)" fg:x="60" fg:w="3"/><text x="17.8453%" y="319.50"></text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (3 samples, 0.88%)</title><rect x="17.5953%" y="293" width="0.8798%" height="15" fill="rgb(216,99,12)" fg:x="60" fg:w="3"/><text x="17.8453%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.88%)</title><rect x="17.5953%" y="277" width="0.8798%" height="15" fill="rgb(226,22,26)" fg:x="60" fg:w="3"/><text x="17.8453%" y="287.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (3 samples, 0.88%)</title><rect x="17.5953%" y="261" width="0.8798%" height="15" fill="rgb(217,163,10)" fg:x="60" fg:w="3"/><text x="17.8453%" y="271.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (3 samples, 0.88%)</title><rect x="17.5953%" y="245" width="0.8798%" height="15" fill="rgb(213,25,53)" fg:x="60" fg:w="3"/><text x="17.8453%" y="255.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (3 samples, 0.88%)</title><rect x="17.5953%" y="229" width="0.8798%" height="15" fill="rgb(252,105,26)" fg:x="60" fg:w="3"/><text x="17.8453%" y="239.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.88%)</title><rect x="17.5953%" y="213" width="0.8798%" height="15" fill="rgb(220,39,43)" fg:x="60" fg:w="3"/><text x="17.8453%" y="223.50"></text></g><g><title>core::str::pattern::Searcher::next_match (3 samples, 0.88%)</title><rect x="17.5953%" y="197" width="0.8798%" height="15" fill="rgb(229,68,48)" fg:x="60" fg:w="3"/><text x="17.8453%" y="207.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (3 samples, 0.88%)</title><rect x="17.5953%" y="181" width="0.8798%" height="15" fill="rgb(252,8,32)" fg:x="60" fg:w="3"/><text x="17.8453%" y="191.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (3 samples, 0.88%)</title><rect x="17.5953%" y="165" width="0.8798%" height="15" fill="rgb(223,20,43)" fg:x="60" fg:w="3"/><text x="17.8453%" y="175.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (3 samples, 0.88%)</title><rect x="17.5953%" y="149" width="0.8798%" height="15" fill="rgb(229,81,49)" fg:x="60" fg:w="3"/><text x="17.8453%" y="159.50"></text></g><g><title>iri_string::parser::details::userinfo::{{closure}} (3 samples, 0.88%)</title><rect x="17.5953%" y="133" width="0.8798%" height="15" fill="rgb(236,28,36)" fg:x="60" fg:w="3"/><text x="17.8453%" y="143.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (3 samples, 0.88%)</title><rect x="17.5953%" y="117" width="0.8798%" height="15" fill="rgb(249,185,26)" fg:x="60" fg:w="3"/><text x="17.8453%" y="127.50"></text></g><g><title>iri_string::parser::details::decompose_hier_part (63 samples, 18.48%)</title><rect x="0.2933%" y="837" width="18.4751%" height="15" fill="rgb(249,174,33)" fg:x="1" fg:w="63"/><text x="0.5433%" y="847.50">iri_string::parser::details::..</text></g><g><title>nom::error::context::{{closure}} (63 samples, 18.48%)</title><rect x="0.2933%" y="821" width="18.4751%" height="15" fill="rgb(233,201,37)" fg:x="1" fg:w="63"/><text x="0.5433%" y="831.50">nom::error::context::{{closur..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (63 samples, 18.48%)</title><rect x="0.2933%" y="805" width="18.4751%" height="15" fill="rgb(221,78,26)" fg:x="1" fg:w="63"/><text x="0.5433%" y="815.50">&lt;F as nom::internal::Parser&lt;I..</text></g><g><title>nom::branch::alt::{{closure}} (63 samples, 18.48%)</title><rect x="0.2933%" y="789" width="18.4751%" height="15" fill="rgb(250,127,30)" fg:x="1" fg:w="63"/><text x="0.5433%" y="799.50">nom::branch::alt::{{closure}}</text></g><g><title>&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (63 samples, 18.48%)</title><rect x="0.2933%" y="773" width="18.4751%" height="15" fill="rgb(230,49,44)" fg:x="1" fg:w="63"/><text x="0.5433%" y="783.50">&lt;(A,B,C,D) as nom::branch::Al..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (62 samples, 18.18%)</title><rect x="0.5865%" y="757" width="18.1818%" height="15" fill="rgb(229,67,23)" fg:x="2" fg:w="62"/><text x="0.8365%" y="767.50">&lt;F as nom::internal::Parser&lt;..</text></g><g><title>nom::sequence::preceded::{{closure}} (61 samples, 17.89%)</title><rect x="0.8798%" y="741" width="17.8886%" height="15" fill="rgb(249,83,47)" fg:x="3" fg:w="61"/><text x="1.1298%" y="751.50">nom::sequence::preceded::{{c..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 17.89%)</title><rect x="0.8798%" y="725" width="17.8886%" height="15" fill="rgb(215,43,3)" fg:x="3" fg:w="61"/><text x="1.1298%" y="735.50">&lt;F as nom::internal::Parser&lt;..</text></g><g><title>nom::sequence::pair::{{closure}} (61 samples, 17.89%)</title><rect x="0.8798%" y="709" width="17.8886%" height="15" fill="rgb(238,154,13)" fg:x="3" fg:w="61"/><text x="1.1298%" y="719.50">nom::sequence::pair::{{closu..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.29%)</title><rect x="18.4751%" y="693" width="0.2933%" height="15" fill="rgb(219,56,2)" fg:x="63" fg:w="1"/><text x="18.7251%" y="703.50"></text></g><g><title>nom::bytes::complete::take_while::{{closure}} (1 samples, 0.29%)</title><rect x="18.7683%" y="725" width="0.2933%" height="15" fill="rgb(233,0,4)" fg:x="64" fg:w="1"/><text x="19.0183%" y="735.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (1 samples, 0.29%)</title><rect x="18.7683%" y="709" width="0.2933%" height="15" fill="rgb(235,30,7)" fg:x="64" fg:w="1"/><text x="19.0183%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (1 samples, 0.29%)</title><rect x="18.7683%" y="693" width="0.2933%" height="15" fill="rgb(250,79,13)" fg:x="64" fg:w="1"/><text x="19.0183%" y="703.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.29%)</title><rect x="18.7683%" y="677" width="0.2933%" height="15" fill="rgb(211,146,34)" fg:x="64" fg:w="1"/><text x="19.0183%" y="687.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1 samples, 0.29%)</title><rect x="18.7683%" y="661" width="0.2933%" height="15" fill="rgb(228,22,38)" fg:x="64" fg:w="1"/><text x="19.0183%" y="671.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.29%)</title><rect x="18.7683%" y="645" width="0.2933%" height="15" fill="rgb(235,168,5)" fg:x="64" fg:w="1"/><text x="19.0183%" y="655.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="18.7683%" y="629" width="0.2933%" height="15" fill="rgb(221,155,16)" fg:x="64" fg:w="1"/><text x="19.0183%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="18.7683%" y="613" width="0.2933%" height="15" fill="rgb(215,215,53)" fg:x="64" fg:w="1"/><text x="19.0183%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.29%)</title><rect x="18.7683%" y="597" width="0.2933%" height="15" fill="rgb(223,4,10)" fg:x="64" fg:w="1"/><text x="19.0183%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="18.7683%" y="741" width="0.5865%" height="15" fill="rgb(234,103,6)" fg:x="64" fg:w="2"/><text x="19.0183%" y="751.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}} (1 samples, 0.29%)</title><rect x="19.0616%" y="725" width="0.2933%" height="15" fill="rgb(227,97,0)" fg:x="65" fg:w="1"/><text x="19.3116%" y="735.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.29%)</title><rect x="19.0616%" y="709" width="0.2933%" height="15" fill="rgb(234,150,53)" fg:x="65" fg:w="1"/><text x="19.3116%" y="719.50"></text></g><g><title>iri_string::resolve::FixedBaseResolver&lt;S&gt;::new (67 samples, 19.65%)</title><rect x="0.2933%" y="1157" width="19.6481%" height="15" fill="rgb(228,201,54)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1167.50">iri_string::resolve::FixedBaseR..</text></g><g><title>&lt;iri_string::parser::RiReferenceComponents&lt;S&gt; as core::convert::From&lt;&amp;iri_string::types::generic::reference::RiReferenceStr&lt;S&gt;&gt;&gt;::from (67 samples, 19.65%)</title><rect x="0.2933%" y="1141" width="19.6481%" height="15" fill="rgb(222,22,37)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1151.50">&lt;iri_string::parser::RiReferenc..</text></g><g><title>nom::combinator::all_consuming::{{closure}} (67 samples, 19.65%)</title><rect x="0.2933%" y="1125" width="19.6481%" height="15" fill="rgb(237,53,32)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1135.50">nom::combinator::all_consuming:..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 19.65%)</title><rect x="0.2933%" y="1109" width="19.6481%" height="15" fill="rgb(233,25,53)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1119.50">&lt;F as nom::internal::Parser&lt;I,O..</text></g><g><title>core::ops::function::FnMut::call_mut (67 samples, 19.65%)</title><rect x="0.2933%" y="1093" width="19.6481%" height="15" fill="rgb(210,40,34)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1103.50">core::ops::function::FnMut::cal..</text></g><g><title>iri_string::parser::details::decompose_uri_reference (67 samples, 19.65%)</title><rect x="0.2933%" y="1077" width="19.6481%" height="15" fill="rgb(241,220,44)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1087.50">iri_string::parser::details::de..</text></g><g><title>nom::error::context::{{closure}} (67 samples, 19.65%)</title><rect x="0.2933%" y="1061" width="19.6481%" height="15" fill="rgb(235,28,35)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1071.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 19.65%)</title><rect x="0.2933%" y="1045" width="19.6481%" height="15" fill="rgb(210,56,17)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1055.50">&lt;F as nom::internal::Parser&lt;I,O..</text></g><g><title>nom::branch::alt::{{closure}} (67 samples, 19.65%)</title><rect x="0.2933%" y="1029" width="19.6481%" height="15" fill="rgb(224,130,29)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1039.50">nom::branch::alt::{{closure}}</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (67 samples, 19.65%)</title><rect x="0.2933%" y="1013" width="19.6481%" height="15" fill="rgb(235,212,8)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1023.50">&lt;(A,B) as nom::branch::Alt&lt;Inpu..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 19.65%)</title><rect x="0.2933%" y="997" width="19.6481%" height="15" fill="rgb(223,33,50)" fg:x="1" fg:w="67"/><text x="0.5433%" y="1007.50">&lt;F as nom::internal::Parser&lt;I,O..</text></g><g><title>core::ops::function::FnMut::call_mut (67 samples, 19.65%)</title><rect x="0.2933%" y="981" width="19.6481%" height="15" fill="rgb(219,149,13)" fg:x="1" fg:w="67"/><text x="0.5433%" y="991.50">core::ops::function::FnMut::cal..</text></g><g><title>iri_string::parser::details::decompose_uri (67 samples, 19.65%)</title><rect x="0.2933%" y="965" width="19.6481%" height="15" fill="rgb(250,156,29)" fg:x="1" fg:w="67"/><text x="0.5433%" y="975.50">iri_string::parser::details::de..</text></g><g><title>nom::error::context::{{closure}} (67 samples, 19.65%)</title><rect x="0.2933%" y="949" width="19.6481%" height="15" fill="rgb(216,193,19)" fg:x="1" fg:w="67"/><text x="0.5433%" y="959.50">nom::error::context::{{closure}}</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (67 samples, 19.65%)</title><rect x="0.2933%" y="933" width="19.6481%" height="15" fill="rgb(216,135,14)" fg:x="1" fg:w="67"/><text x="0.5433%" y="943.50">&lt;nom::internal::Map&lt;F,G,O1&gt; as ..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 19.65%)</title><rect x="0.2933%" y="917" width="19.6481%" height="15" fill="rgb(241,47,5)" fg:x="1" fg:w="67"/><text x="0.5433%" y="927.50">&lt;F as nom::internal::Parser&lt;I,O..</text></g><g><title>nom::sequence::tuple::{{closure}} (67 samples, 19.65%)</title><rect x="0.2933%" y="901" width="19.6481%" height="15" fill="rgb(233,42,35)" fg:x="1" fg:w="67"/><text x="0.5433%" y="911.50">nom::sequence::tuple::{{closure..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD,FnE) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E),Error&gt;&gt;::parse (67 samples, 19.65%)</title><rect x="0.2933%" y="885" width="19.6481%" height="15" fill="rgb(231,13,6)" fg:x="1" fg:w="67"/><text x="0.5433%" y="895.50">&lt;(FnA,FnB,FnC,FnD,FnE) as nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 19.65%)</title><rect x="0.2933%" y="869" width="19.6481%" height="15" fill="rgb(207,181,40)" fg:x="1" fg:w="67"/><text x="0.5433%" y="879.50">&lt;F as nom::internal::Parser&lt;I,O..</text></g><g><title>core::ops::function::FnMut::call_mut (67 samples, 19.65%)</title><rect x="0.2933%" y="853" width="19.6481%" height="15" fill="rgb(254,173,49)" fg:x="1" fg:w="67"/><text x="0.5433%" y="863.50">core::ops::function::FnMut::cal..</text></g><g><title>iri_string::parser::details::scheme (4 samples, 1.17%)</title><rect x="18.7683%" y="837" width="1.1730%" height="15" fill="rgb(221,1,38)" fg:x="64" fg:w="4"/><text x="19.0183%" y="847.50"></text></g><g><title>nom::error::context::{{closure}} (4 samples, 1.17%)</title><rect x="18.7683%" y="821" width="1.1730%" height="15" fill="rgb(206,124,46)" fg:x="64" fg:w="4"/><text x="19.0183%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.17%)</title><rect x="18.7683%" y="805" width="1.1730%" height="15" fill="rgb(249,21,11)" fg:x="64" fg:w="4"/><text x="19.0183%" y="815.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (4 samples, 1.17%)</title><rect x="18.7683%" y="789" width="1.1730%" height="15" fill="rgb(222,201,40)" fg:x="64" fg:w="4"/><text x="19.0183%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4 samples, 1.17%)</title><rect x="18.7683%" y="773" width="1.1730%" height="15" fill="rgb(235,61,29)" fg:x="64" fg:w="4"/><text x="19.0183%" y="783.50"></text></g><g><title>nom::sequence::pair::{{closure}} (4 samples, 1.17%)</title><rect x="18.7683%" y="757" width="1.1730%" height="15" fill="rgb(219,207,3)" fg:x="64" fg:w="4"/><text x="19.0183%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.59%)</title><rect x="19.3548%" y="741" width="0.5865%" height="15" fill="rgb(222,56,46)" fg:x="66" fg:w="2"/><text x="19.6048%" y="751.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (1 samples, 0.29%)</title><rect x="20.5279%" y="837" width="0.2933%" height="15" fill="rgb(239,76,54)" fg:x="70" fg:w="1"/><text x="20.7779%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="21.1144%" y="645" width="0.2933%" height="15" fill="rgb(231,124,27)" fg:x="72" fg:w="1"/><text x="21.3644%" y="655.50"></text></g><g><title>nom::error::context (1 samples, 0.29%)</title><rect x="21.4076%" y="213" width="0.2933%" height="15" fill="rgb(249,195,6)" fg:x="73" fg:w="1"/><text x="21.6576%" y="223.50"></text></g><g><title>iri_string::parser::details::ipv4address (2 samples, 0.59%)</title><rect x="21.4076%" y="405" width="0.5865%" height="15" fill="rgb(237,174,47)" fg:x="73" fg:w="2"/><text x="21.6576%" y="415.50"></text></g><g><title>nom::error::context::{{closure}} (2 samples, 0.59%)</title><rect x="21.4076%" y="389" width="0.5865%" height="15" fill="rgb(206,201,31)" fg:x="73" fg:w="2"/><text x="21.6576%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="21.4076%" y="373" width="0.5865%" height="15" fill="rgb(231,57,52)" fg:x="73" fg:w="2"/><text x="21.6576%" y="383.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (2 samples, 0.59%)</title><rect x="21.4076%" y="357" width="0.5865%" height="15" fill="rgb(248,177,22)" fg:x="73" fg:w="2"/><text x="21.6576%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="21.4076%" y="341" width="0.5865%" height="15" fill="rgb(215,211,37)" fg:x="73" fg:w="2"/><text x="21.6576%" y="351.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (2 samples, 0.59%)</title><rect x="21.4076%" y="325" width="0.5865%" height="15" fill="rgb(241,128,51)" fg:x="73" fg:w="2"/><text x="21.6576%" y="335.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="21.4076%" y="309" width="0.5865%" height="15" fill="rgb(227,165,31)" fg:x="73" fg:w="2"/><text x="21.6576%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="21.4076%" y="293" width="0.5865%" height="15" fill="rgb(228,167,24)" fg:x="73" fg:w="2"/><text x="21.6576%" y="303.50"></text></g><g><title>nom::sequence::terminated::{{closure}} (2 samples, 0.59%)</title><rect x="21.4076%" y="277" width="0.5865%" height="15" fill="rgb(228,143,12)" fg:x="73" fg:w="2"/><text x="21.6576%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="21.4076%" y="261" width="0.5865%" height="15" fill="rgb(249,149,8)" fg:x="73" fg:w="2"/><text x="21.6576%" y="271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.59%)</title><rect x="21.4076%" y="245" width="0.5865%" height="15" fill="rgb(243,35,44)" fg:x="73" fg:w="2"/><text x="21.6576%" y="255.50"></text></g><g><title>iri_string::parser::details::dec_octet (2 samples, 0.59%)</title><rect x="21.4076%" y="229" width="0.5865%" height="15" fill="rgb(246,89,9)" fg:x="73" fg:w="2"/><text x="21.6576%" y="239.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.29%)</title><rect x="21.7009%" y="213" width="0.2933%" height="15" fill="rgb(233,213,13)" fg:x="74" fg:w="1"/><text x="21.9509%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="21.7009%" y="197" width="0.2933%" height="15" fill="rgb(233,141,41)" fg:x="74" fg:w="1"/><text x="21.9509%" y="207.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (1 samples, 0.29%)</title><rect x="21.7009%" y="181" width="0.2933%" height="15" fill="rgb(239,167,4)" fg:x="74" fg:w="1"/><text x="21.9509%" y="191.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="21.7009%" y="165" width="0.2933%" height="15" fill="rgb(209,217,16)" fg:x="74" fg:w="1"/><text x="21.9509%" y="175.50"></text></g><g><title>nom::branch::alt::{{closure}} (1 samples, 0.29%)</title><rect x="21.7009%" y="149" width="0.2933%" height="15" fill="rgb(219,88,35)" fg:x="74" fg:w="1"/><text x="21.9509%" y="159.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.29%)</title><rect x="21.7009%" y="133" width="0.2933%" height="15" fill="rgb(220,193,23)" fg:x="74" fg:w="1"/><text x="21.9509%" y="143.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="21.7009%" y="117" width="0.2933%" height="15" fill="rgb(230,90,52)" fg:x="74" fg:w="1"/><text x="21.9509%" y="127.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (1 samples, 0.29%)</title><rect x="21.7009%" y="101" width="0.2933%" height="15" fill="rgb(252,106,19)" fg:x="74" fg:w="1"/><text x="21.9509%" y="111.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="21.7009%" y="85" width="0.2933%" height="15" fill="rgb(206,74,20)" fg:x="74" fg:w="1"/><text x="21.9509%" y="95.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (1 samples, 0.29%)</title><rect x="21.7009%" y="69" width="0.2933%" height="15" fill="rgb(230,138,44)" fg:x="74" fg:w="1"/><text x="21.9509%" y="79.50"></text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="21.7009%" y="53" width="0.2933%" height="15" fill="rgb(235,182,43)" fg:x="74" fg:w="1"/><text x="21.9509%" y="63.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (2 samples, 0.59%)</title><rect x="22.5806%" y="69" width="0.5865%" height="15" fill="rgb(242,16,51)" fg:x="77" fg:w="2"/><text x="22.8306%" y="79.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (4 samples, 1.17%)</title><rect x="22.2874%" y="85" width="1.1730%" height="15" fill="rgb(248,9,4)" fg:x="76" fg:w="4"/><text x="22.5374%" y="95.50"></text></g><g><title>iri_string::parser::char::is_ucschar (1 samples, 0.29%)</title><rect x="23.1672%" y="69" width="0.2933%" height="15" fill="rgb(210,31,22)" fg:x="79" fg:w="1"/><text x="23.4172%" y="79.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 2.35%)</title><rect x="21.4076%" y="533" width="2.3460%" height="15" fill="rgb(239,54,39)" fg:x="73" fg:w="8"/><text x="21.6576%" y="543.50">c..</text></g><g><title>iri_string::parser::details::host (8 samples, 2.35%)</title><rect x="21.4076%" y="517" width="2.3460%" height="15" fill="rgb(230,99,41)" fg:x="73" fg:w="8"/><text x="21.6576%" y="527.50">i..</text></g><g><title>nom::error::context::{{closure}} (8 samples, 2.35%)</title><rect x="21.4076%" y="501" width="2.3460%" height="15" fill="rgb(253,106,12)" fg:x="73" fg:w="8"/><text x="21.6576%" y="511.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8 samples, 2.35%)</title><rect x="21.4076%" y="485" width="2.3460%" height="15" fill="rgb(213,46,41)" fg:x="73" fg:w="8"/><text x="21.6576%" y="495.50">&lt;..</text></g><g><title>nom::branch::alt::{{closure}} (8 samples, 2.35%)</title><rect x="21.4076%" y="469" width="2.3460%" height="15" fill="rgb(215,133,35)" fg:x="73" fg:w="8"/><text x="21.6576%" y="479.50">n..</text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (8 samples, 2.35%)</title><rect x="21.4076%" y="453" width="2.3460%" height="15" fill="rgb(213,28,5)" fg:x="73" fg:w="8"/><text x="21.6576%" y="463.50">&lt;..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8 samples, 2.35%)</title><rect x="21.4076%" y="437" width="2.3460%" height="15" fill="rgb(215,77,49)" fg:x="73" fg:w="8"/><text x="21.6576%" y="447.50">&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 2.35%)</title><rect x="21.4076%" y="421" width="2.3460%" height="15" fill="rgb(248,100,22)" fg:x="73" fg:w="8"/><text x="21.6576%" y="431.50">c..</text></g><g><title>iri_string::parser::details::reg_name (6 samples, 1.76%)</title><rect x="21.9941%" y="405" width="1.7595%" height="15" fill="rgb(208,67,9)" fg:x="75" fg:w="6"/><text x="22.2441%" y="415.50"></text></g><g><title>nom::error::context::{{closure}} (6 samples, 1.76%)</title><rect x="21.9941%" y="389" width="1.7595%" height="15" fill="rgb(219,133,21)" fg:x="75" fg:w="6"/><text x="22.2441%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="21.9941%" y="373" width="1.7595%" height="15" fill="rgb(246,46,29)" fg:x="75" fg:w="6"/><text x="22.2441%" y="383.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (6 samples, 1.76%)</title><rect x="21.9941%" y="357" width="1.7595%" height="15" fill="rgb(246,185,52)" fg:x="75" fg:w="6"/><text x="22.2441%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="21.9941%" y="341" width="1.7595%" height="15" fill="rgb(252,136,11)" fg:x="75" fg:w="6"/><text x="22.2441%" y="351.50"></text></g><g><title>nom::multi::many0_count::{{closure}} (6 samples, 1.76%)</title><rect x="21.9941%" y="325" width="1.7595%" height="15" fill="rgb(219,138,53)" fg:x="75" fg:w="6"/><text x="22.2441%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="21.9941%" y="309" width="1.7595%" height="15" fill="rgb(211,51,23)" fg:x="75" fg:w="6"/><text x="22.2441%" y="319.50"></text></g><g><title>nom::branch::alt::{{closure}} (6 samples, 1.76%)</title><rect x="21.9941%" y="293" width="1.7595%" height="15" fill="rgb(247,221,28)" fg:x="75" fg:w="6"/><text x="22.2441%" y="303.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (6 samples, 1.76%)</title><rect x="21.9941%" y="277" width="1.7595%" height="15" fill="rgb(251,222,45)" fg:x="75" fg:w="6"/><text x="22.2441%" y="287.50"></text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (5 samples, 1.47%)</title><rect x="22.2874%" y="261" width="1.4663%" height="15" fill="rgb(217,162,53)" fg:x="76" fg:w="5"/><text x="22.5374%" y="271.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 1.47%)</title><rect x="22.2874%" y="245" width="1.4663%" height="15" fill="rgb(229,93,14)" fg:x="76" fg:w="5"/><text x="22.5374%" y="255.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (5 samples, 1.47%)</title><rect x="22.2874%" y="229" width="1.4663%" height="15" fill="rgb(209,67,49)" fg:x="76" fg:w="5"/><text x="22.5374%" y="239.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (5 samples, 1.47%)</title><rect x="22.2874%" y="213" width="1.4663%" height="15" fill="rgb(213,87,29)" fg:x="76" fg:w="5"/><text x="22.5374%" y="223.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 1.47%)</title><rect x="22.2874%" y="197" width="1.4663%" height="15" fill="rgb(205,151,52)" fg:x="76" fg:w="5"/><text x="22.5374%" y="207.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (5 samples, 1.47%)</title><rect x="22.2874%" y="181" width="1.4663%" height="15" fill="rgb(253,215,39)" fg:x="76" fg:w="5"/><text x="22.5374%" y="191.50"></text></g><g><title>core::str::pattern::Searcher::next_match (5 samples, 1.47%)</title><rect x="22.2874%" y="165" width="1.4663%" height="15" fill="rgb(221,220,41)" fg:x="76" fg:w="5"/><text x="22.5374%" y="175.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (5 samples, 1.47%)</title><rect x="22.2874%" y="149" width="1.4663%" height="15" fill="rgb(218,133,21)" fg:x="76" fg:w="5"/><text x="22.5374%" y="159.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (5 samples, 1.47%)</title><rect x="22.2874%" y="133" width="1.4663%" height="15" fill="rgb(221,193,43)" fg:x="76" fg:w="5"/><text x="22.5374%" y="143.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (5 samples, 1.47%)</title><rect x="22.2874%" y="117" width="1.4663%" height="15" fill="rgb(240,128,52)" fg:x="76" fg:w="5"/><text x="22.5374%" y="127.50"></text></g><g><title>iri_string::parser::details::reg_name::{{closure}} (5 samples, 1.47%)</title><rect x="22.2874%" y="101" width="1.4663%" height="15" fill="rgb(253,114,12)" fg:x="76" fg:w="5"/><text x="22.5374%" y="111.50"></text></g><g><title>iri_string::parser::char::is_sub_delim (1 samples, 0.29%)</title><rect x="23.4604%" y="85" width="0.2933%" height="15" fill="rgb(215,223,47)" fg:x="80" fg:w="1"/><text x="23.7104%" y="95.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.29%)</title><rect x="24.3402%" y="277" width="0.2933%" height="15" fill="rgb(248,225,23)" fg:x="83" fg:w="1"/><text x="24.5902%" y="287.50"></text></g><g><title>iri_string::parser::details::pct_encoded (1 samples, 0.29%)</title><rect x="24.3402%" y="261" width="0.2933%" height="15" fill="rgb(250,108,0)" fg:x="83" fg:w="1"/><text x="24.5902%" y="271.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.29%)</title><rect x="24.3402%" y="245" width="0.2933%" height="15" fill="rgb(228,208,7)" fg:x="83" fg:w="1"/><text x="24.5902%" y="255.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="24.3402%" y="229" width="0.2933%" height="15" fill="rgb(244,45,10)" fg:x="83" fg:w="1"/><text x="24.5902%" y="239.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (1 samples, 0.29%)</title><rect x="24.3402%" y="213" width="0.2933%" height="15" fill="rgb(207,125,25)" fg:x="83" fg:w="1"/><text x="24.5902%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="24.3402%" y="197" width="0.2933%" height="15" fill="rgb(210,195,18)" fg:x="83" fg:w="1"/><text x="24.5902%" y="207.50"></text></g><g><title>iri_string::parser::details::authority (17 samples, 4.99%)</title><rect x="21.1144%" y="661" width="4.9853%" height="15" fill="rgb(249,80,12)" fg:x="72" fg:w="17"/><text x="21.3644%" y="671.50">iri_st..</text></g><g><title>nom::error::context::{{closure}} (16 samples, 4.69%)</title><rect x="21.4076%" y="645" width="4.6921%" height="15" fill="rgb(221,65,9)" fg:x="73" fg:w="16"/><text x="21.6576%" y="655.50">nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (16 samples, 4.69%)</title><rect x="21.4076%" y="629" width="4.6921%" height="15" fill="rgb(235,49,36)" fg:x="73" fg:w="16"/><text x="21.6576%" y="639.50">&lt;F as..</text></g><g><title>nom::combinator::recognize::{{closure}} (16 samples, 4.69%)</title><rect x="21.4076%" y="613" width="4.6921%" height="15" fill="rgb(225,32,20)" fg:x="73" fg:w="16"/><text x="21.6576%" y="623.50">nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (16 samples, 4.69%)</title><rect x="21.4076%" y="597" width="4.6921%" height="15" fill="rgb(215,141,46)" fg:x="73" fg:w="16"/><text x="21.6576%" y="607.50">&lt;F as..</text></g><g><title>nom::sequence::tuple::{{closure}} (16 samples, 4.69%)</title><rect x="21.4076%" y="581" width="4.6921%" height="15" fill="rgb(250,160,47)" fg:x="73" fg:w="16"/><text x="21.6576%" y="591.50">nom::..</text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (16 samples, 4.69%)</title><rect x="21.4076%" y="565" width="4.6921%" height="15" fill="rgb(216,222,40)" fg:x="73" fg:w="16"/><text x="21.6576%" y="575.50">&lt;(FnA..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (16 samples, 4.69%)</title><rect x="21.4076%" y="549" width="4.6921%" height="15" fill="rgb(234,217,39)" fg:x="73" fg:w="16"/><text x="21.6576%" y="559.50">&lt;F as..</text></g><g><title>nom::combinator::opt::{{closure}} (8 samples, 2.35%)</title><rect x="23.7537%" y="533" width="2.3460%" height="15" fill="rgb(207,178,40)" fg:x="81" fg:w="8"/><text x="24.0037%" y="543.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8 samples, 2.35%)</title><rect x="23.7537%" y="517" width="2.3460%" height="15" fill="rgb(221,136,13)" fg:x="81" fg:w="8"/><text x="24.0037%" y="527.50">&lt;..</text></g><g><title>nom::sequence::terminated::{{closure}} (8 samples, 2.35%)</title><rect x="23.7537%" y="501" width="2.3460%" height="15" fill="rgb(249,199,10)" fg:x="81" fg:w="8"/><text x="24.0037%" y="511.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8 samples, 2.35%)</title><rect x="23.7537%" y="485" width="2.3460%" height="15" fill="rgb(249,222,13)" fg:x="81" fg:w="8"/><text x="24.0037%" y="495.50">&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 2.35%)</title><rect x="23.7537%" y="469" width="2.3460%" height="15" fill="rgb(244,185,38)" fg:x="81" fg:w="8"/><text x="24.0037%" y="479.50">c..</text></g><g><title>iri_string::parser::details::userinfo (8 samples, 2.35%)</title><rect x="23.7537%" y="453" width="2.3460%" height="15" fill="rgb(236,202,9)" fg:x="81" fg:w="8"/><text x="24.0037%" y="463.50">i..</text></g><g><title>nom::error::context::{{closure}} (8 samples, 2.35%)</title><rect x="23.7537%" y="437" width="2.3460%" height="15" fill="rgb(250,229,37)" fg:x="81" fg:w="8"/><text x="24.0037%" y="447.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8 samples, 2.35%)</title><rect x="23.7537%" y="421" width="2.3460%" height="15" fill="rgb(206,174,23)" fg:x="81" fg:w="8"/><text x="24.0037%" y="431.50">&lt;..</text></g><g><title>nom::combinator::recognize::{{closure}} (8 samples, 2.35%)</title><rect x="23.7537%" y="405" width="2.3460%" height="15" fill="rgb(211,33,43)" fg:x="81" fg:w="8"/><text x="24.0037%" y="415.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="24.0469%" y="389" width="2.0528%" height="15" fill="rgb(245,58,50)" fg:x="82" fg:w="7"/><text x="24.2969%" y="399.50">&lt;..</text></g><g><title>nom::multi::many0_count::{{closure}} (7 samples, 2.05%)</title><rect x="24.0469%" y="373" width="2.0528%" height="15" fill="rgb(244,68,36)" fg:x="82" fg:w="7"/><text x="24.2969%" y="383.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="24.0469%" y="357" width="2.0528%" height="15" fill="rgb(232,229,15)" fg:x="82" fg:w="7"/><text x="24.2969%" y="367.50">&lt;..</text></g><g><title>nom::branch::alt::{{closure}} (7 samples, 2.05%)</title><rect x="24.0469%" y="341" width="2.0528%" height="15" fill="rgb(254,30,23)" fg:x="82" fg:w="7"/><text x="24.2969%" y="351.50">n..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (7 samples, 2.05%)</title><rect x="24.0469%" y="325" width="2.0528%" height="15" fill="rgb(235,160,14)" fg:x="82" fg:w="7"/><text x="24.2969%" y="335.50">&lt;..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="24.3402%" y="309" width="1.7595%" height="15" fill="rgb(212,155,44)" fg:x="83" fg:w="6"/><text x="24.5902%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="24.3402%" y="293" width="1.7595%" height="15" fill="rgb(226,2,50)" fg:x="83" fg:w="6"/><text x="24.5902%" y="303.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}} (5 samples, 1.47%)</title><rect x="24.6334%" y="277" width="1.4663%" height="15" fill="rgb(234,177,6)" fg:x="84" fg:w="5"/><text x="24.8834%" y="287.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (5 samples, 1.47%)</title><rect x="24.6334%" y="261" width="1.4663%" height="15" fill="rgb(217,24,9)" fg:x="84" fg:w="5"/><text x="24.8834%" y="271.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (4 samples, 1.17%)</title><rect x="24.9267%" y="245" width="1.1730%" height="15" fill="rgb(220,13,46)" fg:x="85" fg:w="4"/><text x="25.1767%" y="255.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (4 samples, 1.17%)</title><rect x="24.9267%" y="229" width="1.1730%" height="15" fill="rgb(239,221,27)" fg:x="85" fg:w="4"/><text x="25.1767%" y="239.50"></text></g><g><title>core::str::pattern::Searcher::next_match (4 samples, 1.17%)</title><rect x="24.9267%" y="213" width="1.1730%" height="15" fill="rgb(222,198,25)" fg:x="85" fg:w="4"/><text x="25.1767%" y="223.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (4 samples, 1.17%)</title><rect x="24.9267%" y="197" width="1.1730%" height="15" fill="rgb(211,99,13)" fg:x="85" fg:w="4"/><text x="25.1767%" y="207.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (4 samples, 1.17%)</title><rect x="24.9267%" y="181" width="1.1730%" height="15" fill="rgb(232,111,31)" fg:x="85" fg:w="4"/><text x="25.1767%" y="191.50"></text></g><g><title>nom::bytes::complete::take_while1::{{closure}}::{{closure}} (4 samples, 1.17%)</title><rect x="24.9267%" y="165" width="1.1730%" height="15" fill="rgb(245,82,37)" fg:x="85" fg:w="4"/><text x="25.1767%" y="175.50"></text></g><g><title>iri_string::parser::details::userinfo::{{closure}} (4 samples, 1.17%)</title><rect x="24.9267%" y="149" width="1.1730%" height="15" fill="rgb(227,149,46)" fg:x="85" fg:w="4"/><text x="25.1767%" y="159.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (4 samples, 1.17%)</title><rect x="24.9267%" y="133" width="1.1730%" height="15" fill="rgb(218,36,50)" fg:x="85" fg:w="4"/><text x="25.1767%" y="143.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (4 samples, 1.17%)</title><rect x="24.9267%" y="117" width="1.1730%" height="15" fill="rgb(226,80,48)" fg:x="85" fg:w="4"/><text x="25.1767%" y="127.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.29%)</title><rect x="26.6862%" y="437" width="0.2933%" height="15" fill="rgb(238,224,15)" fg:x="91" fg:w="1"/><text x="26.9362%" y="447.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.59%)</title><rect x="31.0850%" y="341" width="0.5865%" height="15" fill="rgb(241,136,10)" fg:x="106" fg:w="2"/><text x="31.3350%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.29%)</title><rect x="31.3783%" y="325" width="0.2933%" height="15" fill="rgb(208,32,45)" fg:x="107" fg:w="1"/><text x="31.6283%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.29%)</title><rect x="31.3783%" y="309" width="0.2933%" height="15" fill="rgb(207,135,9)" fg:x="107" fg:w="1"/><text x="31.6283%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.29%)</title><rect x="31.3783%" y="293" width="0.2933%" height="15" fill="rgb(206,86,44)" fg:x="107" fg:w="1"/><text x="31.6283%" y="303.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.29%)</title><rect x="31.6716%" y="245" width="0.2933%" height="15" fill="rgb(245,177,15)" fg:x="108" fg:w="1"/><text x="31.9216%" y="255.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="31.9648%" y="245" width="0.2933%" height="15" fill="rgb(206,64,50)" fg:x="109" fg:w="1"/><text x="32.2148%" y="255.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.29%)</title><rect x="31.9648%" y="229" width="0.2933%" height="15" fill="rgb(234,36,40)" fg:x="109" fg:w="1"/><text x="32.2148%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="31.9648%" y="213" width="0.2933%" height="15" fill="rgb(213,64,8)" fg:x="109" fg:w="1"/><text x="32.2148%" y="223.50"></text></g><g><title>core::ops::function::FnMut::call_mut (23 samples, 6.74%)</title><rect x="26.3930%" y="517" width="6.7449%" height="15" fill="rgb(210,75,36)" fg:x="90" fg:w="23"/><text x="26.6430%" y="527.50">core::ops..</text></g><g><title>iri_string::parser::details::segment (23 samples, 6.74%)</title><rect x="26.3930%" y="501" width="6.7449%" height="15" fill="rgb(229,88,21)" fg:x="90" fg:w="23"/><text x="26.6430%" y="511.50">iri_strin..</text></g><g><title>nom::error::context::{{closure}} (23 samples, 6.74%)</title><rect x="26.3930%" y="485" width="6.7449%" height="15" fill="rgb(252,204,47)" fg:x="90" fg:w="23"/><text x="26.6430%" y="495.50">nom::erro..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22 samples, 6.45%)</title><rect x="26.6862%" y="469" width="6.4516%" height="15" fill="rgb(208,77,27)" fg:x="91" fg:w="22"/><text x="26.9362%" y="479.50">&lt;F as no..</text></g><g><title>nom::combinator::recognize::{{closure}} (22 samples, 6.45%)</title><rect x="26.6862%" y="453" width="6.4516%" height="15" fill="rgb(221,76,26)" fg:x="91" fg:w="22"/><text x="26.9362%" y="463.50">nom::com..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (21 samples, 6.16%)</title><rect x="26.9795%" y="437" width="6.1584%" height="15" fill="rgb(225,139,18)" fg:x="92" fg:w="21"/><text x="27.2295%" y="447.50">&lt;F as no..</text></g><g><title>nom::multi::many0_count::{{closure}} (21 samples, 6.16%)</title><rect x="26.9795%" y="421" width="6.1584%" height="15" fill="rgb(230,137,11)" fg:x="92" fg:w="21"/><text x="27.2295%" y="431.50">nom::mul..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 5.87%)</title><rect x="27.2727%" y="405" width="5.8651%" height="15" fill="rgb(212,28,1)" fg:x="93" fg:w="20"/><text x="27.5227%" y="415.50">&lt;F as n..</text></g><g><title>core::ops::function::FnMut::call_mut (16 samples, 4.69%)</title><rect x="28.4457%" y="389" width="4.6921%" height="15" fill="rgb(248,164,17)" fg:x="97" fg:w="16"/><text x="28.6957%" y="399.50">core:..</text></g><g><title>iri_string::parser::details::pchar (16 samples, 4.69%)</title><rect x="28.4457%" y="373" width="4.6921%" height="15" fill="rgb(222,171,42)" fg:x="97" fg:w="16"/><text x="28.6957%" y="383.50">iri_s..</text></g><g><title>nom::combinator::recognize::{{closure}} (16 samples, 4.69%)</title><rect x="28.4457%" y="357" width="4.6921%" height="15" fill="rgb(243,84,45)" fg:x="97" fg:w="16"/><text x="28.6957%" y="367.50">nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 1.47%)</title><rect x="31.6716%" y="341" width="1.4663%" height="15" fill="rgb(252,49,23)" fg:x="108" fg:w="5"/><text x="31.9216%" y="351.50"></text></g><g><title>nom::branch::alt::{{closure}} (5 samples, 1.47%)</title><rect x="31.6716%" y="325" width="1.4663%" height="15" fill="rgb(215,19,7)" fg:x="108" fg:w="5"/><text x="31.9216%" y="335.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (5 samples, 1.47%)</title><rect x="31.6716%" y="309" width="1.4663%" height="15" fill="rgb(238,81,41)" fg:x="108" fg:w="5"/><text x="31.9216%" y="319.50"></text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (5 samples, 1.47%)</title><rect x="31.6716%" y="293" width="1.4663%" height="15" fill="rgb(210,199,37)" fg:x="108" fg:w="5"/><text x="31.9216%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 1.47%)</title><rect x="31.6716%" y="277" width="1.4663%" height="15" fill="rgb(244,192,49)" fg:x="108" fg:w="5"/><text x="31.9216%" y="287.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}} (5 samples, 1.47%)</title><rect x="31.6716%" y="261" width="1.4663%" height="15" fill="rgb(226,211,11)" fg:x="108" fg:w="5"/><text x="31.9216%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.88%)</title><rect x="32.2581%" y="245" width="0.8798%" height="15" fill="rgb(236,162,54)" fg:x="110" fg:w="3"/><text x="32.5081%" y="255.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (3 samples, 0.88%)</title><rect x="32.2581%" y="229" width="0.8798%" height="15" fill="rgb(220,229,9)" fg:x="110" fg:w="3"/><text x="32.5081%" y="239.50"></text></g><g><title>iri_string::parser::details::pchar::{{closure}} (3 samples, 0.88%)</title><rect x="32.2581%" y="213" width="0.8798%" height="15" fill="rgb(250,87,22)" fg:x="110" fg:w="3"/><text x="32.5081%" y="223.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (3 samples, 0.88%)</title><rect x="32.2581%" y="197" width="0.8798%" height="15" fill="rgb(239,43,17)" fg:x="110" fg:w="3"/><text x="32.5081%" y="207.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (2 samples, 0.59%)</title><rect x="32.5513%" y="181" width="0.5865%" height="15" fill="rgb(231,177,25)" fg:x="111" fg:w="2"/><text x="32.8013%" y="191.50"></text></g><g><title>iri_string::parser::details::hier_part (44 samples, 12.90%)</title><rect x="20.5279%" y="901" width="12.9032%" height="15" fill="rgb(219,179,1)" fg:x="70" fg:w="44"/><text x="20.7779%" y="911.50">iri_string::parser:..</text></g><g><title>nom::error::context::{{closure}} (44 samples, 12.90%)</title><rect x="20.5279%" y="885" width="12.9032%" height="15" fill="rgb(238,219,53)" fg:x="70" fg:w="44"/><text x="20.7779%" y="895.50">nom::error::context..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (44 samples, 12.90%)</title><rect x="20.5279%" y="869" width="12.9032%" height="15" fill="rgb(232,167,36)" fg:x="70" fg:w="44"/><text x="20.7779%" y="879.50">&lt;F as nom::internal..</text></g><g><title>nom::combinator::recognize::{{closure}} (44 samples, 12.90%)</title><rect x="20.5279%" y="853" width="12.9032%" height="15" fill="rgb(244,19,51)" fg:x="70" fg:w="44"/><text x="20.7779%" y="863.50">nom::combinator::re..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="20.8211%" y="837" width="12.6100%" height="15" fill="rgb(224,6,22)" fg:x="71" fg:w="43"/><text x="21.0711%" y="847.50">&lt;F as nom::internal..</text></g><g><title>nom::branch::alt::{{closure}} (43 samples, 12.61%)</title><rect x="20.8211%" y="821" width="12.6100%" height="15" fill="rgb(224,145,5)" fg:x="71" fg:w="43"/><text x="21.0711%" y="831.50">nom::branch::alt::{..</text></g><g><title>&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (43 samples, 12.61%)</title><rect x="20.8211%" y="805" width="12.6100%" height="15" fill="rgb(234,130,49)" fg:x="71" fg:w="43"/><text x="21.0711%" y="815.50">&lt;(A,B,C,D) as nom::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="20.8211%" y="789" width="12.6100%" height="15" fill="rgb(254,6,2)" fg:x="71" fg:w="43"/><text x="21.0711%" y="799.50">&lt;F as nom::internal..</text></g><g><title>nom::combinator::recognize::{{closure}} (43 samples, 12.61%)</title><rect x="20.8211%" y="773" width="12.6100%" height="15" fill="rgb(208,96,46)" fg:x="71" fg:w="43"/><text x="21.0711%" y="783.50">nom::combinator::re..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="20.8211%" y="757" width="12.6100%" height="15" fill="rgb(239,3,39)" fg:x="71" fg:w="43"/><text x="21.0711%" y="767.50">&lt;F as nom::internal..</text></g><g><title>nom::sequence::preceded::{{closure}} (43 samples, 12.61%)</title><rect x="20.8211%" y="741" width="12.6100%" height="15" fill="rgb(233,210,1)" fg:x="71" fg:w="43"/><text x="21.0711%" y="751.50">nom::sequence::prec..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="20.8211%" y="725" width="12.6100%" height="15" fill="rgb(244,137,37)" fg:x="71" fg:w="43"/><text x="21.0711%" y="735.50">&lt;F as nom::internal..</text></g><g><title>nom::sequence::pair::{{closure}} (43 samples, 12.61%)</title><rect x="20.8211%" y="709" width="12.6100%" height="15" fill="rgb(240,136,2)" fg:x="71" fg:w="43"/><text x="21.0711%" y="719.50">nom::sequence::pair..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 12.61%)</title><rect x="20.8211%" y="693" width="12.6100%" height="15" fill="rgb(239,18,37)" fg:x="71" fg:w="43"/><text x="21.0711%" y="703.50">&lt;F as nom::internal..</text></g><g><title>core::ops::function::FnMut::call_mut (42 samples, 12.32%)</title><rect x="21.1144%" y="677" width="12.3167%" height="15" fill="rgb(218,185,22)" fg:x="72" fg:w="42"/><text x="21.3644%" y="687.50">core::ops::functio..</text></g><g><title>iri_string::parser::details::path_abempty (25 samples, 7.33%)</title><rect x="26.0997%" y="661" width="7.3314%" height="15" fill="rgb(225,218,4)" fg:x="89" fg:w="25"/><text x="26.3497%" y="671.50">iri_string..</text></g><g><title>nom::error::context::{{closure}} (25 samples, 7.33%)</title><rect x="26.0997%" y="645" width="7.3314%" height="15" fill="rgb(230,182,32)" fg:x="89" fg:w="25"/><text x="26.3497%" y="655.50">nom::error..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25 samples, 7.33%)</title><rect x="26.0997%" y="629" width="7.3314%" height="15" fill="rgb(242,56,43)" fg:x="89" fg:w="25"/><text x="26.3497%" y="639.50">&lt;F as nom:..</text></g><g><title>nom::combinator::recognize::{{closure}} (25 samples, 7.33%)</title><rect x="26.0997%" y="613" width="7.3314%" height="15" fill="rgb(233,99,24)" fg:x="89" fg:w="25"/><text x="26.3497%" y="623.50">nom::combi..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25 samples, 7.33%)</title><rect x="26.0997%" y="597" width="7.3314%" height="15" fill="rgb(234,209,42)" fg:x="89" fg:w="25"/><text x="26.3497%" y="607.50">&lt;F as nom:..</text></g><g><title>nom::multi::many0_count::{{closure}} (25 samples, 7.33%)</title><rect x="26.0997%" y="581" width="7.3314%" height="15" fill="rgb(227,7,12)" fg:x="89" fg:w="25"/><text x="26.3497%" y="591.50">nom::multi..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24 samples, 7.04%)</title><rect x="26.3930%" y="565" width="7.0381%" height="15" fill="rgb(245,203,43)" fg:x="90" fg:w="24"/><text x="26.6430%" y="575.50">&lt;F as nom..</text></g><g><title>nom::sequence::preceded::{{closure}} (24 samples, 7.04%)</title><rect x="26.3930%" y="549" width="7.0381%" height="15" fill="rgb(238,205,33)" fg:x="90" fg:w="24"/><text x="26.6430%" y="559.50">nom::sequ..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24 samples, 7.04%)</title><rect x="26.3930%" y="533" width="7.0381%" height="15" fill="rgb(231,56,7)" fg:x="90" fg:w="24"/><text x="26.6430%" y="543.50">&lt;F as nom..</text></g><g><title>nom::character::complete::char::{{closure}} (1 samples, 0.29%)</title><rect x="33.1378%" y="517" width="0.2933%" height="15" fill="rgb(244,186,29)" fg:x="113" fg:w="1"/><text x="33.3878%" y="527.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (1 samples, 0.29%)</title><rect x="33.1378%" y="501" width="0.2933%" height="15" fill="rgb(234,111,31)" fg:x="113" fg:w="1"/><text x="33.3878%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="33.4311%" y="805" width="0.2933%" height="15" fill="rgb(241,149,10)" fg:x="114" fg:w="1"/><text x="33.6811%" y="815.50"></text></g><g><title>nom::bytes::complete::take_while::{{closure}} (1 samples, 0.29%)</title><rect x="33.4311%" y="789" width="0.2933%" height="15" fill="rgb(249,206,44)" fg:x="114" fg:w="1"/><text x="33.6811%" y="799.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (1 samples, 0.29%)</title><rect x="33.4311%" y="773" width="0.2933%" height="15" fill="rgb(251,153,30)" fg:x="114" fg:w="1"/><text x="33.6811%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (1 samples, 0.29%)</title><rect x="33.4311%" y="757" width="0.2933%" height="15" fill="rgb(239,152,38)" fg:x="114" fg:w="1"/><text x="33.6811%" y="767.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.29%)</title><rect x="33.4311%" y="741" width="0.2933%" height="15" fill="rgb(249,139,47)" fg:x="114" fg:w="1"/><text x="33.6811%" y="751.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1 samples, 0.29%)</title><rect x="33.4311%" y="725" width="0.2933%" height="15" fill="rgb(244,64,35)" fg:x="114" fg:w="1"/><text x="33.6811%" y="735.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.29%)</title><rect x="33.4311%" y="709" width="0.2933%" height="15" fill="rgb(216,46,15)" fg:x="114" fg:w="1"/><text x="33.6811%" y="719.50"></text></g><g><title>&lt;iri_string::types::generic::normal::RiString&lt;S&gt; as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (48 samples, 14.08%)</title><rect x="19.9413%" y="1141" width="14.0762%" height="15" fill="rgb(250,74,19)" fg:x="68" fg:w="48"/><text x="20.1913%" y="1151.50">&lt;iri_string::types::g..</text></g><g><title>&lt;&amp;iri_string::types::generic::normal::RiStr&lt;S&gt; as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (47 samples, 13.78%)</title><rect x="20.2346%" y="1125" width="13.7830%" height="15" fill="rgb(249,42,33)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1135.50">&lt;&amp;iri_string::types::..</text></g><g><title>iri_string::validate::iri (47 samples, 13.78%)</title><rect x="20.2346%" y="1109" width="13.7830%" height="15" fill="rgb(242,149,17)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1119.50">iri_string::validate:..</text></g><g><title>nom::combinator::all_consuming::{{closure}} (47 samples, 13.78%)</title><rect x="20.2346%" y="1093" width="13.7830%" height="15" fill="rgb(244,29,21)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1103.50">nom::combinator::all_..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 13.78%)</title><rect x="20.2346%" y="1077" width="13.7830%" height="15" fill="rgb(220,130,37)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1087.50">&lt;F as nom::internal::..</text></g><g><title>core::ops::function::FnMut::call_mut (47 samples, 13.78%)</title><rect x="20.2346%" y="1061" width="13.7830%" height="15" fill="rgb(211,67,2)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1071.50">core::ops::function::..</text></g><g><title>iri_string::parser::details::uri (47 samples, 13.78%)</title><rect x="20.2346%" y="1045" width="13.7830%" height="15" fill="rgb(235,68,52)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1055.50">iri_string::parser::d..</text></g><g><title>nom::error::context::{{closure}} (47 samples, 13.78%)</title><rect x="20.2346%" y="1029" width="13.7830%" height="15" fill="rgb(246,142,3)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1039.50">nom::error::context::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 13.78%)</title><rect x="20.2346%" y="1013" width="13.7830%" height="15" fill="rgb(241,25,7)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1023.50">&lt;F as nom::internal::..</text></g><g><title>nom::combinator::recognize::{{closure}} (47 samples, 13.78%)</title><rect x="20.2346%" y="997" width="13.7830%" height="15" fill="rgb(242,119,39)" fg:x="69" fg:w="47"/><text x="20.4846%" y="1007.50">nom::combinator::reco..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (46 samples, 13.49%)</title><rect x="20.5279%" y="981" width="13.4897%" height="15" fill="rgb(241,98,45)" fg:x="70" fg:w="46"/><text x="20.7779%" y="991.50">&lt;F as nom::internal:..</text></g><g><title>nom::sequence::tuple::{{closure}} (46 samples, 13.49%)</title><rect x="20.5279%" y="965" width="13.4897%" height="15" fill="rgb(254,28,30)" fg:x="70" fg:w="46"/><text x="20.7779%" y="975.50">nom::sequence::tuple..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD,FnE) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E),Error&gt;&gt;::parse (46 samples, 13.49%)</title><rect x="20.5279%" y="949" width="13.4897%" height="15" fill="rgb(241,142,54)" fg:x="70" fg:w="46"/><text x="20.7779%" y="959.50">&lt;(FnA,FnB,FnC,FnD,Fn..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (46 samples, 13.49%)</title><rect x="20.5279%" y="933" width="13.4897%" height="15" fill="rgb(222,85,15)" fg:x="70" fg:w="46"/><text x="20.7779%" y="943.50">&lt;F as nom::internal:..</text></g><g><title>core::ops::function::FnMut::call_mut (46 samples, 13.49%)</title><rect x="20.5279%" y="917" width="13.4897%" height="15" fill="rgb(210,85,47)" fg:x="70" fg:w="46"/><text x="20.7779%" y="927.50">core::ops::function:..</text></g><g><title>iri_string::parser::details::scheme (2 samples, 0.59%)</title><rect x="33.4311%" y="901" width="0.5865%" height="15" fill="rgb(224,206,25)" fg:x="114" fg:w="2"/><text x="33.6811%" y="911.50"></text></g><g><title>nom::error::context::{{closure}} (2 samples, 0.59%)</title><rect x="33.4311%" y="885" width="0.5865%" height="15" fill="rgb(243,201,19)" fg:x="114" fg:w="2"/><text x="33.6811%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="33.4311%" y="869" width="0.5865%" height="15" fill="rgb(236,59,4)" fg:x="114" fg:w="2"/><text x="33.6811%" y="879.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (2 samples, 0.59%)</title><rect x="33.4311%" y="853" width="0.5865%" height="15" fill="rgb(254,179,45)" fg:x="114" fg:w="2"/><text x="33.6811%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.59%)</title><rect x="33.4311%" y="837" width="0.5865%" height="15" fill="rgb(226,14,10)" fg:x="114" fg:w="2"/><text x="33.6811%" y="847.50"></text></g><g><title>nom::sequence::pair::{{closure}} (2 samples, 0.59%)</title><rect x="33.4311%" y="821" width="0.5865%" height="15" fill="rgb(244,27,41)" fg:x="114" fg:w="2"/><text x="33.6811%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.29%)</title><rect x="33.7243%" y="805" width="0.2933%" height="15" fill="rgb(235,35,32)" fg:x="115" fg:w="1"/><text x="33.9743%" y="815.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (1 samples, 0.29%)</title><rect x="35.4839%" y="485" width="0.2933%" height="15" fill="rgb(218,68,31)" fg:x="121" fg:w="1"/><text x="35.7339%" y="495.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (3 samples, 0.88%)</title><rect x="36.6569%" y="357" width="0.8798%" height="15" fill="rgb(207,120,37)" fg:x="125" fg:w="3"/><text x="36.9069%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.29%)</title><rect x="37.2434%" y="341" width="0.2933%" height="15" fill="rgb(227,98,0)" fg:x="127" fg:w="1"/><text x="37.4934%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.29%)</title><rect x="37.2434%" y="325" width="0.2933%" height="15" fill="rgb(207,7,3)" fg:x="127" fg:w="1"/><text x="37.4934%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.29%)</title><rect x="37.2434%" y="309" width="0.2933%" height="15" fill="rgb(206,98,19)" fg:x="127" fg:w="1"/><text x="37.4934%" y="319.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 2.93%)</title><rect x="35.4839%" y="565" width="2.9326%" height="15" fill="rgb(217,5,26)" fg:x="121" fg:w="10"/><text x="35.7339%" y="575.50">co..</text></g><g><title>iri_string::parser::details::segment_nz_nc (10 samples, 2.93%)</title><rect x="35.4839%" y="549" width="2.9326%" height="15" fill="rgb(235,190,38)" fg:x="121" fg:w="10"/><text x="35.7339%" y="559.50">ir..</text></g><g><title>nom::error::context::{{closure}} (10 samples, 2.93%)</title><rect x="35.4839%" y="533" width="2.9326%" height="15" fill="rgb(247,86,24)" fg:x="121" fg:w="10"/><text x="35.7339%" y="543.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10 samples, 2.93%)</title><rect x="35.4839%" y="517" width="2.9326%" height="15" fill="rgb(205,101,16)" fg:x="121" fg:w="10"/><text x="35.7339%" y="527.50">&lt;F..</text></g><g><title>nom::combinator::recognize::{{closure}} (10 samples, 2.93%)</title><rect x="35.4839%" y="501" width="2.9326%" height="15" fill="rgb(246,168,33)" fg:x="121" fg:w="10"/><text x="35.7339%" y="511.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9 samples, 2.64%)</title><rect x="35.7771%" y="485" width="2.6393%" height="15" fill="rgb(231,114,1)" fg:x="122" fg:w="9"/><text x="36.0271%" y="495.50">&lt;F..</text></g><g><title>nom::multi::many1_count::{{closure}} (9 samples, 2.64%)</title><rect x="35.7771%" y="469" width="2.6393%" height="15" fill="rgb(207,184,53)" fg:x="122" fg:w="9"/><text x="36.0271%" y="479.50">no..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="36.3636%" y="453" width="2.0528%" height="15" fill="rgb(224,95,51)" fg:x="124" fg:w="7"/><text x="36.6136%" y="463.50">&lt;..</text></g><g><title>nom::branch::alt::{{closure}} (7 samples, 2.05%)</title><rect x="36.3636%" y="437" width="2.0528%" height="15" fill="rgb(212,188,45)" fg:x="124" fg:w="7"/><text x="36.6136%" y="447.50">n..</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (7 samples, 2.05%)</title><rect x="36.3636%" y="421" width="2.0528%" height="15" fill="rgb(223,154,38)" fg:x="124" fg:w="7"/><text x="36.6136%" y="431.50">&lt;..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="36.3636%" y="405" width="2.0528%" height="15" fill="rgb(251,22,52)" fg:x="124" fg:w="7"/><text x="36.6136%" y="415.50">&lt;..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="36.3636%" y="389" width="2.0528%" height="15" fill="rgb(229,209,22)" fg:x="124" fg:w="7"/><text x="36.6136%" y="399.50">&lt;..</text></g><g><title>nom::character::complete::satisfy::{{closure}} (6 samples, 1.76%)</title><rect x="36.6569%" y="373" width="1.7595%" height="15" fill="rgb(234,138,34)" fg:x="125" fg:w="6"/><text x="36.9069%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.88%)</title><rect x="37.5367%" y="357" width="0.8798%" height="15" fill="rgb(212,95,11)" fg:x="128" fg:w="3"/><text x="37.7867%" y="367.50"></text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (3 samples, 0.88%)</title><rect x="37.5367%" y="341" width="0.8798%" height="15" fill="rgb(240,179,47)" fg:x="128" fg:w="3"/><text x="37.7867%" y="351.50"></text></g><g><title>iri_string::parser::details::segment_nz_nc::{{closure}} (3 samples, 0.88%)</title><rect x="37.5367%" y="325" width="0.8798%" height="15" fill="rgb(240,163,11)" fg:x="128" fg:w="3"/><text x="37.7867%" y="335.50"></text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (3 samples, 0.88%)</title><rect x="37.5367%" y="309" width="0.8798%" height="15" fill="rgb(236,37,12)" fg:x="128" fg:w="3"/><text x="37.7867%" y="319.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (3 samples, 0.88%)</title><rect x="37.5367%" y="293" width="0.8798%" height="15" fill="rgb(232,164,16)" fg:x="128" fg:w="3"/><text x="37.7867%" y="303.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (1 samples, 0.29%)</title><rect x="38.1232%" y="277" width="0.2933%" height="15" fill="rgb(244,205,15)" fg:x="130" fg:w="1"/><text x="38.3732%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="39.2962%" y="533" width="0.2933%" height="15" fill="rgb(223,117,47)" fg:x="134" fg:w="1"/><text x="39.5462%" y="543.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.59%)</title><rect x="44.5748%" y="421" width="0.5865%" height="15" fill="rgb(244,107,35)" fg:x="152" fg:w="2"/><text x="44.8248%" y="431.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (3 samples, 0.88%)</title><rect x="45.1613%" y="421" width="0.8798%" height="15" fill="rgb(205,140,8)" fg:x="154" fg:w="3"/><text x="45.4113%" y="431.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (7 samples, 2.05%)</title><rect x="56.3050%" y="325" width="2.0528%" height="15" fill="rgb(228,84,46)" fg:x="192" fg:w="7"/><text x="56.5550%" y="335.50">&lt;..</text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (5 samples, 1.47%)</title><rect x="58.3578%" y="325" width="1.4663%" height="15" fill="rgb(254,188,9)" fg:x="199" fg:w="5"/><text x="58.6078%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 1.17%)</title><rect x="58.6510%" y="309" width="1.1730%" height="15" fill="rgb(206,112,54)" fg:x="200" fg:w="4"/><text x="58.9010%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (4 samples, 1.17%)</title><rect x="58.6510%" y="293" width="1.1730%" height="15" fill="rgb(216,84,49)" fg:x="200" fg:w="4"/><text x="58.9010%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (4 samples, 1.17%)</title><rect x="58.6510%" y="277" width="1.1730%" height="15" fill="rgb(214,194,35)" fg:x="200" fg:w="4"/><text x="58.9010%" y="287.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.29%)</title><rect x="61.5836%" y="277" width="0.2933%" height="15" fill="rgb(249,28,3)" fg:x="210" fg:w="1"/><text x="61.8336%" y="287.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.29%)</title><rect x="65.1026%" y="165" width="0.2933%" height="15" fill="rgb(222,56,52)" fg:x="222" fg:w="1"/><text x="65.3526%" y="175.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 2.05%)</title><rect x="65.1026%" y="245" width="2.0528%" height="15" fill="rgb(245,217,50)" fg:x="222" fg:w="7"/><text x="65.3526%" y="255.50">c..</text></g><g><title>iri_string::parser::details::pct_encoded (7 samples, 2.05%)</title><rect x="65.1026%" y="229" width="2.0528%" height="15" fill="rgb(213,201,24)" fg:x="222" fg:w="7"/><text x="65.3526%" y="239.50">i..</text></g><g><title>nom::error::context::{{closure}} (7 samples, 2.05%)</title><rect x="65.1026%" y="213" width="2.0528%" height="15" fill="rgb(248,116,28)" fg:x="222" fg:w="7"/><text x="65.3526%" y="223.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7 samples, 2.05%)</title><rect x="65.1026%" y="197" width="2.0528%" height="15" fill="rgb(219,72,43)" fg:x="222" fg:w="7"/><text x="65.3526%" y="207.50">&lt;..</text></g><g><title>nom::sequence::preceded::{{closure}} (7 samples, 2.05%)</title><rect x="65.1026%" y="181" width="2.0528%" height="15" fill="rgb(209,138,14)" fg:x="222" fg:w="7"/><text x="65.3526%" y="191.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6 samples, 1.76%)</title><rect x="65.3959%" y="165" width="1.7595%" height="15" fill="rgb(222,18,33)" fg:x="223" fg:w="6"/><text x="65.6459%" y="175.50"></text></g><g><title>nom::character::complete::char::{{closure}} (4 samples, 1.17%)</title><rect x="65.9824%" y="149" width="1.1730%" height="15" fill="rgb(213,199,7)" fg:x="225" fg:w="4"/><text x="66.2324%" y="159.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (8 samples, 2.35%)</title><rect x="67.1554%" y="229" width="2.3460%" height="15" fill="rgb(250,110,10)" fg:x="229" fg:w="8"/><text x="67.4054%" y="239.50">&lt;..</text></g><g><title>&lt;char as nom::traits::AsChar&gt;::len (3 samples, 0.88%)</title><rect x="69.5015%" y="229" width="0.8798%" height="15" fill="rgb(248,123,6)" fg:x="237" fg:w="3"/><text x="69.7515%" y="239.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (3 samples, 0.88%)</title><rect x="69.5015%" y="213" width="0.8798%" height="15" fill="rgb(206,91,31)" fg:x="237" fg:w="3"/><text x="69.7515%" y="223.50"></text></g><g><title>core::char::methods::len_utf8 (3 samples, 0.88%)</title><rect x="69.5015%" y="197" width="0.8798%" height="15" fill="rgb(211,154,13)" fg:x="237" fg:w="3"/><text x="69.7515%" y="207.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.88%)</title><rect x="70.3812%" y="229" width="0.8798%" height="15" fill="rgb(225,148,7)" fg:x="240" fg:w="3"/><text x="70.6312%" y="239.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.88%)</title><rect x="70.3812%" y="213" width="0.8798%" height="15" fill="rgb(220,160,43)" fg:x="240" fg:w="3"/><text x="70.6312%" y="223.50"></text></g><g><title>&lt;iri_string::spec::UriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (14 samples, 4.11%)</title><rect x="72.1408%" y="165" width="4.1056%" height="15" fill="rgb(213,52,39)" fg:x="246" fg:w="14"/><text x="72.3908%" y="175.50">&lt;iri..</text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric (8 samples, 2.35%)</title><rect x="73.9003%" y="149" width="2.3460%" height="15" fill="rgb(243,137,7)" fg:x="252" fg:w="8"/><text x="74.1503%" y="159.50">c..</text></g><g><title>&lt;iri_string::spec::IriSpec as iri_string::spec::internal::SpecInternal&gt;::is_char_unreserved (20 samples, 5.87%)</title><rect x="71.5543%" y="181" width="5.8651%" height="15" fill="rgb(230,79,13)" fg:x="244" fg:w="20"/><text x="71.8043%" y="191.50">&lt;iri_st..</text></g><g><title>iri_string::parser::char::is_ucschar (4 samples, 1.17%)</title><rect x="76.2463%" y="165" width="1.1730%" height="15" fill="rgb(247,105,23)" fg:x="260" fg:w="4"/><text x="76.4963%" y="175.50"></text></g><g><title>core::ops::function::FnMut::call_mut (130 samples, 38.12%)</title><rect x="39.5894%" y="501" width="38.1232%" height="15" fill="rgb(223,179,41)" fg:x="135" fg:w="130"/><text x="39.8394%" y="511.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::segment (130 samples, 38.12%)</title><rect x="39.5894%" y="485" width="38.1232%" height="15" fill="rgb(218,9,34)" fg:x="135" fg:w="130"/><text x="39.8394%" y="495.50">iri_string::parser::details::segment</text></g><g><title>nom::error::context::{{closure}} (129 samples, 37.83%)</title><rect x="39.8827%" y="469" width="37.8299%" height="15" fill="rgb(222,106,8)" fg:x="136" fg:w="129"/><text x="40.1327%" y="479.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (115 samples, 33.72%)</title><rect x="43.9883%" y="453" width="33.7243%" height="15" fill="rgb(211,220,0)" fg:x="150" fg:w="115"/><text x="44.2383%" y="463.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::combinator::recognize::{{closure}} (113 samples, 33.14%)</title><rect x="44.5748%" y="437" width="33.1378%" height="15" fill="rgb(229,52,16)" fg:x="152" fg:w="113"/><text x="44.8248%" y="447.50">nom::combinator::recognize::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (108 samples, 31.67%)</title><rect x="46.0411%" y="421" width="31.6716%" height="15" fill="rgb(212,155,18)" fg:x="157" fg:w="108"/><text x="46.2911%" y="431.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::multi::many0_count::{{closure}} (108 samples, 31.67%)</title><rect x="46.0411%" y="405" width="31.6716%" height="15" fill="rgb(242,21,14)" fg:x="157" fg:w="108"/><text x="46.2911%" y="415.50">nom::multi::many0_count::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (99 samples, 29.03%)</title><rect x="48.6804%" y="389" width="29.0323%" height="15" fill="rgb(222,19,48)" fg:x="166" fg:w="99"/><text x="48.9304%" y="399.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (92 samples, 26.98%)</title><rect x="50.7331%" y="373" width="26.9795%" height="15" fill="rgb(232,45,27)" fg:x="173" fg:w="92"/><text x="50.9831%" y="383.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::pchar (92 samples, 26.98%)</title><rect x="50.7331%" y="357" width="26.9795%" height="15" fill="rgb(249,103,42)" fg:x="173" fg:w="92"/><text x="50.9831%" y="367.50">iri_string::parser::details::pchar</text></g><g><title>nom::combinator::recognize::{{closure}} (92 samples, 26.98%)</title><rect x="50.7331%" y="341" width="26.9795%" height="15" fill="rgb(246,81,33)" fg:x="173" fg:w="92"/><text x="50.9831%" y="351.50">nom::combinator::recognize::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 17.89%)</title><rect x="59.8240%" y="325" width="17.8886%" height="15" fill="rgb(252,33,42)" fg:x="204" fg:w="61"/><text x="60.0740%" y="335.50">&lt;F as nom::internal::Parser&lt;..</text></g><g><title>nom::branch::alt::{{closure}} (61 samples, 17.89%)</title><rect x="59.8240%" y="309" width="17.8886%" height="15" fill="rgb(209,212,41)" fg:x="204" fg:w="61"/><text x="60.0740%" y="319.50">nom::branch::alt::{{closure}}</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (61 samples, 17.89%)</title><rect x="59.8240%" y="293" width="17.8886%" height="15" fill="rgb(207,154,6)" fg:x="204" fg:w="61"/><text x="60.0740%" y="303.50">&lt;(A,B) as nom::branch::Alt&lt;I..</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (54 samples, 15.84%)</title><rect x="61.8768%" y="277" width="15.8358%" height="15" fill="rgb(223,64,47)" fg:x="211" fg:w="54"/><text x="62.1268%" y="287.50">&lt;nom::internal::Map&lt;F,G,..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 13.78%)</title><rect x="63.9296%" y="261" width="13.7830%" height="15" fill="rgb(211,161,38)" fg:x="218" fg:w="47"/><text x="64.1796%" y="271.50">&lt;F as nom::internal::..</text></g><g><title>nom::character::complete::satisfy::{{closure}} (36 samples, 10.56%)</title><rect x="67.1554%" y="245" width="10.5572%" height="15" fill="rgb(219,138,40)" fg:x="229" fg:w="36"/><text x="67.4054%" y="255.50">nom::character:..</text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 6.45%)</title><rect x="71.2610%" y="229" width="6.4516%" height="15" fill="rgb(241,228,46)" fg:x="243" fg:w="22"/><text x="71.5110%" y="239.50">core::op..</text></g><g><title>nom::character::complete::satisfy::{{closure}}::{{closure}} (22 samples, 6.45%)</title><rect x="71.2610%" y="213" width="6.4516%" height="15" fill="rgb(223,209,38)" fg:x="243" fg:w="22"/><text x="71.5110%" y="223.50">nom::cha..</text></g><g><title>iri_string::parser::details::pchar::{{closure}} (22 samples, 6.45%)</title><rect x="71.2610%" y="197" width="6.4516%" height="15" fill="rgb(236,164,45)" fg:x="243" fg:w="22"/><text x="71.5110%" y="207.50">iri_stri..</text></g><g><title>iri_string::parser::char::is_sub_delim (1 samples, 0.29%)</title><rect x="77.4194%" y="181" width="0.2933%" height="15" fill="rgb(231,15,5)" fg:x="264" fg:w="1"/><text x="77.6694%" y="191.50"></text></g><g><title>iri_string::parser::details::decompose_relative_ref (153 samples, 44.87%)</title><rect x="34.0176%" y="933" width="44.8680%" height="15" fill="rgb(252,35,15)" fg:x="116" fg:w="153"/><text x="34.2676%" y="943.50">iri_string::parser::details::decompose_relative_ref</text></g><g><title>nom::error::context::{{closure}} (153 samples, 44.87%)</title><rect x="34.0176%" y="917" width="44.8680%" height="15" fill="rgb(248,181,18)" fg:x="116" fg:w="153"/><text x="34.2676%" y="927.50">nom::error::context::{{closure}}</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (153 samples, 44.87%)</title><rect x="34.0176%" y="901" width="44.8680%" height="15" fill="rgb(233,39,42)" fg:x="116" fg:w="153"/><text x="34.2676%" y="911.50">&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (152 samples, 44.57%)</title><rect x="34.3109%" y="885" width="44.5748%" height="15" fill="rgb(238,110,33)" fg:x="117" fg:w="152"/><text x="34.5609%" y="895.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::sequence::tuple::{{closure}} (152 samples, 44.57%)</title><rect x="34.3109%" y="869" width="44.5748%" height="15" fill="rgb(233,195,10)" fg:x="117" fg:w="152"/><text x="34.5609%" y="879.50">nom::sequence::tuple::{{closure}}</text></g><g><title>&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (152 samples, 44.57%)</title><rect x="34.3109%" y="853" width="44.5748%" height="15" fill="rgb(254,105,3)" fg:x="117" fg:w="152"/><text x="34.5609%" y="863.50">&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (150 samples, 43.99%)</title><rect x="34.8974%" y="837" width="43.9883%" height="15" fill="rgb(221,225,9)" fg:x="119" fg:w="150"/><text x="35.1474%" y="847.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (150 samples, 43.99%)</title><rect x="34.8974%" y="821" width="43.9883%" height="15" fill="rgb(224,227,45)" fg:x="119" fg:w="150"/><text x="35.1474%" y="831.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::decompose_relative_part (150 samples, 43.99%)</title><rect x="34.8974%" y="805" width="43.9883%" height="15" fill="rgb(229,198,43)" fg:x="119" fg:w="150"/><text x="35.1474%" y="815.50">iri_string::parser::details::decompose_relative_part</text></g><g><title>nom::error::context::{{closure}} (150 samples, 43.99%)</title><rect x="34.8974%" y="789" width="43.9883%" height="15" fill="rgb(206,209,35)" fg:x="119" fg:w="150"/><text x="35.1474%" y="799.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (149 samples, 43.70%)</title><rect x="35.1906%" y="773" width="43.6950%" height="15" fill="rgb(245,195,53)" fg:x="120" fg:w="149"/><text x="35.4406%" y="783.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::branch::alt::{{closure}} (149 samples, 43.70%)</title><rect x="35.1906%" y="757" width="43.6950%" height="15" fill="rgb(240,92,26)" fg:x="120" fg:w="149"/><text x="35.4406%" y="767.50">nom::branch::alt::{{closure}}</text></g><g><title>&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (149 samples, 43.70%)</title><rect x="35.1906%" y="741" width="43.6950%" height="15" fill="rgb(207,40,23)" fg:x="120" fg:w="149"/><text x="35.4406%" y="751.50">&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice</text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (149 samples, 43.70%)</title><rect x="35.1906%" y="725" width="43.6950%" height="15" fill="rgb(223,111,35)" fg:x="120" fg:w="149"/><text x="35.4406%" y="735.50">&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (149 samples, 43.70%)</title><rect x="35.1906%" y="709" width="43.6950%" height="15" fill="rgb(229,147,28)" fg:x="120" fg:w="149"/><text x="35.4406%" y="719.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (149 samples, 43.70%)</title><rect x="35.1906%" y="693" width="43.6950%" height="15" fill="rgb(211,29,28)" fg:x="120" fg:w="149"/><text x="35.4406%" y="703.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::path_noscheme (149 samples, 43.70%)</title><rect x="35.1906%" y="677" width="43.6950%" height="15" fill="rgb(228,72,33)" fg:x="120" fg:w="149"/><text x="35.4406%" y="687.50">iri_string::parser::details::path_noscheme</text></g><g><title>nom::error::context::{{closure}} (149 samples, 43.70%)</title><rect x="35.1906%" y="661" width="43.6950%" height="15" fill="rgb(205,214,31)" fg:x="120" fg:w="149"/><text x="35.4406%" y="671.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (149 samples, 43.70%)</title><rect x="35.1906%" y="645" width="43.6950%" height="15" fill="rgb(224,111,15)" fg:x="120" fg:w="149"/><text x="35.4406%" y="655.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::combinator::recognize::{{closure}} (149 samples, 43.70%)</title><rect x="35.1906%" y="629" width="43.6950%" height="15" fill="rgb(253,21,26)" fg:x="120" fg:w="149"/><text x="35.4406%" y="639.50">nom::combinator::recognize::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (148 samples, 43.40%)</title><rect x="35.4839%" y="613" width="43.4018%" height="15" fill="rgb(245,139,43)" fg:x="121" fg:w="148"/><text x="35.7339%" y="623.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::sequence::pair::{{closure}} (148 samples, 43.40%)</title><rect x="35.4839%" y="597" width="43.4018%" height="15" fill="rgb(252,170,7)" fg:x="121" fg:w="148"/><text x="35.7339%" y="607.50">nom::sequence::pair::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (148 samples, 43.40%)</title><rect x="35.4839%" y="581" width="43.4018%" height="15" fill="rgb(231,118,14)" fg:x="121" fg:w="148"/><text x="35.7339%" y="591.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::multi::many0_count::{{closure}} (138 samples, 40.47%)</title><rect x="38.4164%" y="565" width="40.4692%" height="15" fill="rgb(238,83,0)" fg:x="131" fg:w="138"/><text x="38.6664%" y="575.50">nom::multi::many0_count::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (136 samples, 39.88%)</title><rect x="39.0029%" y="549" width="39.8827%" height="15" fill="rgb(221,39,39)" fg:x="133" fg:w="136"/><text x="39.2529%" y="559.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::sequence::preceded::{{closure}} (134 samples, 39.30%)</title><rect x="39.5894%" y="533" width="39.2962%" height="15" fill="rgb(222,119,46)" fg:x="135" fg:w="134"/><text x="39.8394%" y="543.50">nom::sequence::preceded::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (134 samples, 39.30%)</title><rect x="39.5894%" y="517" width="39.2962%" height="15" fill="rgb(222,165,49)" fg:x="135" fg:w="134"/><text x="39.8394%" y="527.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::character::complete::char::{{closure}} (4 samples, 1.17%)</title><rect x="77.7126%" y="501" width="1.1730%" height="15" fill="rgb(219,113,52)" fg:x="265" fg:w="4"/><text x="77.9626%" y="511.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (4 samples, 1.17%)</title><rect x="77.7126%" y="485" width="1.1730%" height="15" fill="rgb(214,7,15)" fg:x="265" fg:w="4"/><text x="77.9626%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.59%)</title><rect x="78.2991%" y="469" width="0.5865%" height="15" fill="rgb(235,32,4)" fg:x="267" fg:w="2"/><text x="78.5491%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.59%)</title><rect x="78.2991%" y="453" width="0.5865%" height="15" fill="rgb(238,90,54)" fg:x="267" fg:w="2"/><text x="78.5491%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.59%)</title><rect x="78.2991%" y="437" width="0.5865%" height="15" fill="rgb(213,208,19)" fg:x="267" fg:w="2"/><text x="78.5491%" y="447.50"></text></g><g><title>nom::error::context (1 samples, 0.29%)</title><rect x="78.8856%" y="917" width="0.2933%" height="15" fill="rgb(233,156,4)" fg:x="269" fg:w="1"/><text x="79.1356%" y="927.50"></text></g><g><title>&lt;iri_string::parser::RiReferenceComponents&lt;S&gt; as core::convert::From&lt;&amp;iri_string::types::generic::reference::RiReferenceStr&lt;S&gt;&gt;&gt;::from (155 samples, 45.45%)</title><rect x="34.0176%" y="1109" width="45.4545%" height="15" fill="rgb(207,194,5)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1119.50">&lt;iri_string::parser::RiReferenceComponents&lt;S&gt; as core::convert::From&lt;&amp;iri_s..</text></g><g><title>nom::combinator::all_consuming::{{closure}} (155 samples, 45.45%)</title><rect x="34.0176%" y="1093" width="45.4545%" height="15" fill="rgb(206,111,30)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1103.50">nom::combinator::all_consuming::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (155 samples, 45.45%)</title><rect x="34.0176%" y="1077" width="45.4545%" height="15" fill="rgb(243,70,54)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1087.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (155 samples, 45.45%)</title><rect x="34.0176%" y="1061" width="45.4545%" height="15" fill="rgb(242,28,8)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1071.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::decompose_uri_reference (155 samples, 45.45%)</title><rect x="34.0176%" y="1045" width="45.4545%" height="15" fill="rgb(219,106,18)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1055.50">iri_string::parser::details::decompose_uri_reference</text></g><g><title>nom::error::context::{{closure}} (155 samples, 45.45%)</title><rect x="34.0176%" y="1029" width="45.4545%" height="15" fill="rgb(244,222,10)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1039.50">nom::error::context::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (155 samples, 45.45%)</title><rect x="34.0176%" y="1013" width="45.4545%" height="15" fill="rgb(236,179,52)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1023.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::branch::alt::{{closure}} (155 samples, 45.45%)</title><rect x="34.0176%" y="997" width="45.4545%" height="15" fill="rgb(213,23,39)" fg:x="116" fg:w="155"/><text x="34.2676%" y="1007.50">nom::branch::alt::{{closure}}</text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (155 samples, 45.45%)</title><rect x="34.0176%" y="981" width="45.4545%" height="15" fill="rgb(238,48,10)" fg:x="116" fg:w="155"/><text x="34.2676%" y="991.50">&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (155 samples, 45.45%)</title><rect x="34.0176%" y="965" width="45.4545%" height="15" fill="rgb(251,196,23)" fg:x="116" fg:w="155"/><text x="34.2676%" y="975.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>core::ops::function::FnMut::call_mut (155 samples, 45.45%)</title><rect x="34.0176%" y="949" width="45.4545%" height="15" fill="rgb(250,152,24)" fg:x="116" fg:w="155"/><text x="34.2676%" y="959.50">core::ops::function::FnMut::call_mut</text></g><g><title>iri_string::parser::details::decompose_uri (2 samples, 0.59%)</title><rect x="78.8856%" y="933" width="0.5865%" height="15" fill="rgb(209,150,17)" fg:x="269" fg:w="2"/><text x="79.1356%" y="943.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.29%)</title><rect x="79.1789%" y="917" width="0.2933%" height="15" fill="rgb(234,202,34)" fg:x="270" fg:w="1"/><text x="79.4289%" y="927.50"></text></g><g><title>&lt;nom::internal::Map&lt;F,G,O1&gt; as nom::internal::Parser&lt;I,O2,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="79.1789%" y="901" width="0.2933%" height="15" fill="rgb(253,148,53)" fg:x="270" fg:w="1"/><text x="79.4289%" y="911.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="79.1789%" y="885" width="0.2933%" height="15" fill="rgb(218,129,16)" fg:x="270" fg:w="1"/><text x="79.4289%" y="895.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (1 samples, 0.29%)</title><rect x="79.1789%" y="869" width="0.2933%" height="15" fill="rgb(216,85,19)" fg:x="270" fg:w="1"/><text x="79.4289%" y="879.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD,FnE) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E),Error&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="79.1789%" y="853" width="0.2933%" height="15" fill="rgb(235,228,7)" fg:x="270" fg:w="1"/><text x="79.4289%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="79.1789%" y="837" width="0.2933%" height="15" fill="rgb(245,175,0)" fg:x="270" fg:w="1"/><text x="79.4289%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.29%)</title><rect x="79.1789%" y="821" width="0.2933%" height="15" fill="rgb(208,168,36)" fg:x="270" fg:w="1"/><text x="79.4289%" y="831.50"></text></g><g><title>iri_string::parser::details::scheme (1 samples, 0.29%)</title><rect x="79.1789%" y="805" width="0.2933%" height="15" fill="rgb(246,171,24)" fg:x="270" fg:w="1"/><text x="79.4289%" y="815.50"></text></g><g><title>nom::error::context::{{closure}} (1 samples, 0.29%)</title><rect x="79.1789%" y="789" width="0.2933%" height="15" fill="rgb(215,142,24)" fg:x="270" fg:w="1"/><text x="79.4289%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.29%)</title><rect x="79.1789%" y="773" width="0.2933%" height="15" fill="rgb(250,187,7)" fg:x="270" fg:w="1"/><text x="79.4289%" y="783.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (1 samples, 0.29%)</title><rect x="79.1789%" y="757" width="0.2933%" height="15" fill="rgb(228,66,33)" fg:x="270" fg:w="1"/><text x="79.4289%" y="767.50"></text></g><g><title>iri_string::resolve::FixedBaseResolver&lt;S&gt;::create_task (158 samples, 46.33%)</title><rect x="34.0176%" y="1125" width="46.3343%" height="15" fill="rgb(234,215,21)" fg:x="116" fg:w="158"/><text x="34.2676%" y="1135.50">iri_string::resolve::FixedBaseResolver&lt;S&gt;::create_task</text></g><g><title>iri_string::normalize::remove_dot_segments::RemoveDotSegPath::from_paths_to_be_resolved (3 samples, 0.88%)</title><rect x="79.4721%" y="1109" width="0.8798%" height="15" fill="rgb(222,191,20)" fg:x="271" fg:w="3"/><text x="79.7221%" y="1119.50"></text></g><g><title>core::str::&lt;impl str&gt;::rfind (1 samples, 0.29%)</title><rect x="80.0587%" y="1093" width="0.2933%" height="15" fill="rgb(245,79,54)" fg:x="273" fg:w="1"/><text x="80.3087%" y="1103.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (1 samples, 0.29%)</title><rect x="80.0587%" y="1077" width="0.2933%" height="15" fill="rgb(240,10,37)" fg:x="273" fg:w="1"/><text x="80.3087%" y="1087.50"></text></g><g><title>core::slice::memchr::memrchr (1 samples, 0.29%)</title><rect x="80.0587%" y="1061" width="0.2933%" height="15" fill="rgb(214,192,32)" fg:x="273" fg:w="1"/><text x="80.3087%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.29%)</title><rect x="80.0587%" y="1045" width="0.2933%" height="15" fill="rgb(209,36,54)" fg:x="273" fg:w="1"/><text x="80.3087%" y="1055.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.29%)</title><rect x="80.0587%" y="1029" width="0.2933%" height="15" fill="rgb(220,10,11)" fg:x="273" fg:w="1"/><text x="80.3087%" y="1039.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.29%)</title><rect x="80.0587%" y="1013" width="0.2933%" height="15" fill="rgb(221,106,17)" fg:x="273" fg:w="1"/><text x="80.3087%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.29%)</title><rect x="80.3519%" y="1109" width="0.2933%" height="15" fill="rgb(251,142,44)" fg:x="274" fg:w="1"/><text x="80.6019%" y="1119.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.29%)</title><rect x="80.6452%" y="1109" width="0.2933%" height="15" fill="rgb(238,13,15)" fg:x="275" fg:w="1"/><text x="80.8952%" y="1119.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.29%)</title><rect x="80.6452%" y="1093" width="0.2933%" height="15" fill="rgb(208,107,27)" fg:x="275" fg:w="1"/><text x="80.8952%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.29%)</title><rect x="81.2317%" y="1013" width="0.2933%" height="15" fill="rgb(205,136,37)" fg:x="277" fg:w="1"/><text x="81.4817%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.29%)</title><rect x="81.2317%" y="997" width="0.2933%" height="15" fill="rgb(250,205,27)" fg:x="277" fg:w="1"/><text x="81.4817%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.29%)</title><rect x="81.2317%" y="981" width="0.2933%" height="15" fill="rgb(210,80,43)" fg:x="277" fg:w="1"/><text x="81.4817%" y="991.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.29%)</title><rect x="81.2317%" y="965" width="0.2933%" height="15" fill="rgb(247,160,36)" fg:x="277" fg:w="1"/><text x="81.4817%" y="975.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.29%)</title><rect x="81.2317%" y="949" width="0.2933%" height="15" fill="rgb(234,13,49)" fg:x="277" fg:w="1"/><text x="81.4817%" y="959.50"></text></g><g><title>&lt;&amp;mut alloc::string::String as iri_string::buffer::Buffer&gt;::push_optional_with_prefix (3 samples, 0.88%)</title><rect x="80.9384%" y="1093" width="0.8798%" height="15" fill="rgb(234,122,0)" fg:x="276" fg:w="3"/><text x="81.1884%" y="1103.50"></text></g><g><title>alloc::string::String::try_reserve (2 samples, 0.59%)</title><rect x="81.2317%" y="1077" width="0.5865%" height="15" fill="rgb(207,146,38)" fg:x="277" fg:w="2"/><text x="81.4817%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (2 samples, 0.59%)</title><rect x="81.2317%" y="1061" width="0.5865%" height="15" fill="rgb(207,177,25)" fg:x="277" fg:w="2"/><text x="81.4817%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.59%)</title><rect x="81.2317%" y="1045" width="0.5865%" height="15" fill="rgb(211,178,42)" fg:x="277" fg:w="2"/><text x="81.4817%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.59%)</title><rect x="81.2317%" y="1029" width="0.5865%" height="15" fill="rgb(230,69,54)" fg:x="277" fg:w="2"/><text x="81.4817%" y="1039.50"></text></g><g><title>core::cmp::max (1 samples, 0.29%)</title><rect x="81.5249%" y="1013" width="0.2933%" height="15" fill="rgb(214,135,41)" fg:x="278" fg:w="1"/><text x="81.7749%" y="1023.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.29%)</title><rect x="81.5249%" y="997" width="0.2933%" height="15" fill="rgb(237,67,25)" fg:x="278" fg:w="1"/><text x="81.7749%" y="1007.50"></text></g><g><title>alloc::string::String::try_reserve (1 samples, 0.29%)</title><rect x="81.5249%" y="981" width="0.2933%" height="15" fill="rgb(222,189,50)" fg:x="278" fg:w="1"/><text x="81.7749%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.29%)</title><rect x="82.1114%" y="997" width="0.2933%" height="15" fill="rgb(245,148,34)" fg:x="280" fg:w="1"/><text x="82.3614%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 1.17%)</title><rect x="82.1114%" y="1077" width="1.1730%" height="15" fill="rgb(222,29,6)" fg:x="280" fg:w="4"/><text x="82.3614%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 1.17%)</title><rect x="82.1114%" y="1061" width="1.1730%" height="15" fill="rgb(221,189,43)" fg:x="280" fg:w="4"/><text x="82.3614%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 1.17%)</title><rect x="82.1114%" y="1045" width="1.1730%" height="15" fill="rgb(207,36,27)" fg:x="280" fg:w="4"/><text x="82.3614%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 1.17%)</title><rect x="82.1114%" y="1029" width="1.1730%" height="15" fill="rgb(217,90,24)" fg:x="280" fg:w="4"/><text x="82.3614%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 1.17%)</title><rect x="82.1114%" y="1013" width="1.1730%" height="15" fill="rgb(224,66,35)" fg:x="280" fg:w="4"/><text x="82.3614%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned (3 samples, 0.88%)</title><rect x="82.4047%" y="997" width="0.8798%" height="15" fill="rgb(221,13,50)" fg:x="281" fg:w="3"/><text x="82.6547%" y="1007.50"></text></g><g><title>&lt;&amp;mut alloc::string::String as iri_string::buffer::Buffer&gt;::push_str (7 samples, 2.05%)</title><rect x="81.8182%" y="1093" width="2.0528%" height="15" fill="rgb(236,68,49)" fg:x="279" fg:w="7"/><text x="82.0682%" y="1103.50">&lt;..</text></g><g><title>alloc::string::String::try_reserve (2 samples, 0.59%)</title><rect x="83.2845%" y="1077" width="0.5865%" height="15" fill="rgb(229,146,28)" fg:x="284" fg:w="2"/><text x="83.5345%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (1 samples, 0.29%)</title><rect x="83.5777%" y="1061" width="0.2933%" height="15" fill="rgb(225,31,38)" fg:x="285" fg:w="1"/><text x="83.8277%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.29%)</title><rect x="83.5777%" y="1045" width="0.2933%" height="15" fill="rgb(250,208,3)" fg:x="285" fg:w="1"/><text x="83.8277%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.29%)</title><rect x="83.5777%" y="1029" width="0.2933%" height="15" fill="rgb(246,54,23)" fg:x="285" fg:w="1"/><text x="83.8277%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.29%)</title><rect x="83.5777%" y="1013" width="0.2933%" height="15" fill="rgb(243,76,11)" fg:x="285" fg:w="1"/><text x="83.8277%" y="1023.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.29%)</title><rect x="83.5777%" y="997" width="0.2933%" height="15" fill="rgb(245,21,50)" fg:x="285" fg:w="1"/><text x="83.8277%" y="1007.50"></text></g><g><title>iri_string::normalize::remove_dot_segments::RemoveDotSegPath::merge_and_remove_dot_segments (1 samples, 0.29%)</title><rect x="83.8710%" y="1077" width="0.2933%" height="15" fill="rgb(228,9,43)" fg:x="286" fg:w="1"/><text x="84.1210%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.88%)</title><rect x="84.7507%" y="1061" width="0.8798%" height="15" fill="rgb(208,100,47)" fg:x="289" fg:w="3"/><text x="85.0007%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.88%)</title><rect x="84.7507%" y="1045" width="0.8798%" height="15" fill="rgb(232,26,8)" fg:x="289" fg:w="3"/><text x="85.0007%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.88%)</title><rect x="84.7507%" y="1029" width="0.8798%" height="15" fill="rgb(216,166,38)" fg:x="289" fg:w="3"/><text x="85.0007%" y="1039.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.88%)</title><rect x="84.7507%" y="1013" width="0.8798%" height="15" fill="rgb(251,202,51)" fg:x="289" fg:w="3"/><text x="85.0007%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.88%)</title><rect x="84.7507%" y="997" width="0.8798%" height="15" fill="rgb(254,216,34)" fg:x="289" fg:w="3"/><text x="85.0007%" y="1007.50"></text></g><g><title>iri_string::normalize::PathSegment::has_leading_slash (1 samples, 0.29%)</title><rect x="85.6305%" y="1061" width="0.2933%" height="15" fill="rgb(251,32,27)" fg:x="292" fg:w="1"/><text x="85.8805%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.29%)</title><rect x="88.2698%" y="949" width="0.2933%" height="15" fill="rgb(208,127,28)" fg:x="301" fg:w="1"/><text x="88.5198%" y="959.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 1.17%)</title><rect x="87.6833%" y="1029" width="1.1730%" height="15" fill="rgb(224,137,22)" fg:x="299" fg:w="4"/><text x="87.9333%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 1.17%)</title><rect x="87.6833%" y="1013" width="1.1730%" height="15" fill="rgb(254,70,32)" fg:x="299" fg:w="4"/><text x="87.9333%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 1.17%)</title><rect x="87.6833%" y="997" width="1.1730%" height="15" fill="rgb(229,75,37)" fg:x="299" fg:w="4"/><text x="87.9333%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 1.17%)</title><rect x="87.6833%" y="981" width="1.1730%" height="15" fill="rgb(252,64,23)" fg:x="299" fg:w="4"/><text x="87.9333%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.88%)</title><rect x="87.9765%" y="965" width="0.8798%" height="15" fill="rgb(232,162,48)" fg:x="300" fg:w="3"/><text x="88.2265%" y="975.50"></text></g><g><title>__memmove_avx_unaligned (1 samples, 0.29%)</title><rect x="88.5630%" y="949" width="0.2933%" height="15" fill="rgb(246,160,12)" fg:x="302" fg:w="1"/><text x="88.8130%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.29%)</title><rect x="89.4428%" y="965" width="0.2933%" height="15" fill="rgb(247,166,0)" fg:x="305" fg:w="1"/><text x="89.6928%" y="975.50"></text></g><g><title>iri_string::normalize::PathSegment::write_to (14 samples, 4.11%)</title><rect x="85.9238%" y="1061" width="4.1056%" height="15" fill="rgb(249,219,21)" fg:x="293" fg:w="14"/><text x="86.1738%" y="1071.50">iri_..</text></g><g><title>&lt;&amp;mut alloc::string::String as iri_string::buffer::Buffer&gt;::push_str (13 samples, 3.81%)</title><rect x="86.2170%" y="1045" width="3.8123%" height="15" fill="rgb(205,209,3)" fg:x="294" fg:w="13"/><text x="86.4670%" y="1055.50">&lt;&amp;mu..</text></g><g><title>alloc::string::String::try_reserve (4 samples, 1.17%)</title><rect x="88.8563%" y="1029" width="1.1730%" height="15" fill="rgb(243,44,1)" fg:x="303" fg:w="4"/><text x="89.1063%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (2 samples, 0.59%)</title><rect x="89.4428%" y="1013" width="0.5865%" height="15" fill="rgb(206,159,16)" fg:x="305" fg:w="2"/><text x="89.6928%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.59%)</title><rect x="89.4428%" y="997" width="0.5865%" height="15" fill="rgb(244,77,30)" fg:x="305" fg:w="2"/><text x="89.6928%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.59%)</title><rect x="89.4428%" y="981" width="0.5865%" height="15" fill="rgb(218,69,12)" fg:x="305" fg:w="2"/><text x="89.6928%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.29%)</title><rect x="89.7361%" y="965" width="0.2933%" height="15" fill="rgb(212,87,7)" fg:x="306" fg:w="1"/><text x="89.9861%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.29%)</title><rect x="89.7361%" y="949" width="0.2933%" height="15" fill="rgb(245,114,25)" fg:x="306" fg:w="1"/><text x="89.9861%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.29%)</title><rect x="89.7361%" y="933" width="0.2933%" height="15" fill="rgb(210,61,42)" fg:x="306" fg:w="1"/><text x="89.9861%" y="943.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.29%)</title><rect x="89.7361%" y="917" width="0.2933%" height="15" fill="rgb(211,52,33)" fg:x="306" fg:w="1"/><text x="89.9861%" y="927.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.29%)</title><rect x="89.7361%" y="901" width="0.2933%" height="15" fill="rgb(234,58,33)" fg:x="306" fg:w="1"/><text x="89.9861%" y="911.50"></text></g><g><title>_int_realloc (1 samples, 0.29%)</title><rect x="89.7361%" y="885" width="0.2933%" height="15" fill="rgb(220,115,36)" fg:x="306" fg:w="1"/><text x="89.9861%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.59%)</title><rect x="92.9619%" y="997" width="0.5865%" height="15" fill="rgb(243,153,54)" fg:x="317" fg:w="2"/><text x="93.2119%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.59%)</title><rect x="94.4282%" y="981" width="0.5865%" height="15" fill="rgb(251,47,18)" fg:x="322" fg:w="2"/><text x="94.6782%" y="991.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (1 samples, 0.29%)</title><rect x="94.7214%" y="965" width="0.2933%" height="15" fill="rgb(242,102,42)" fg:x="323" fg:w="1"/><text x="94.9714%" y="975.50"></text></g><g><title>core::cmp::min (1 samples, 0.29%)</title><rect x="95.0147%" y="981" width="0.2933%" height="15" fill="rgb(234,31,38)" fg:x="324" fg:w="1"/><text x="95.2647%" y="991.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.29%)</title><rect x="95.0147%" y="965" width="0.2933%" height="15" fill="rgb(221,117,51)" fg:x="324" fg:w="1"/><text x="95.2647%" y="975.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.29%)</title><rect x="95.0147%" y="949" width="0.2933%" height="15" fill="rgb(212,20,18)" fg:x="324" fg:w="1"/><text x="95.2647%" y="959.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (9 samples, 2.64%)</title><rect x="92.9619%" y="1045" width="2.6393%" height="15" fill="rgb(245,133,36)" fg:x="317" fg:w="9"/><text x="93.2119%" y="1055.50">co..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (9 samples, 2.64%)</title><rect x="92.9619%" y="1029" width="2.6393%" height="15" fill="rgb(212,6,19)" fg:x="317" fg:w="9"/><text x="93.2119%" y="1039.50">&lt;c..</text></g><g><title>core::slice::memchr::memchr (9 samples, 2.64%)</title><rect x="92.9619%" y="1013" width="2.6393%" height="15" fill="rgb(218,1,36)" fg:x="317" fg:w="9"/><text x="93.2119%" y="1023.50">co..</text></g><g><title>core::slice::memchr::memchr_general_case (7 samples, 2.05%)</title><rect x="93.5484%" y="997" width="2.0528%" height="15" fill="rgb(246,84,54)" fg:x="319" fg:w="7"/><text x="93.7984%" y="1007.50">c..</text></g><g><title>core::slice::memchr::contains_zero_byte (1 samples, 0.29%)</title><rect x="95.3079%" y="981" width="0.2933%" height="15" fill="rgb(242,110,6)" fg:x="325" fg:w="1"/><text x="95.5579%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::split_at (3 samples, 0.88%)</title><rect x="95.6012%" y="1045" width="0.8798%" height="15" fill="rgb(214,47,5)" fg:x="326" fg:w="3"/><text x="95.8512%" y="1055.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.29%)</title><rect x="96.1877%" y="1029" width="0.2933%" height="15" fill="rgb(218,159,25)" fg:x="328" fg:w="1"/><text x="96.4377%" y="1039.50"></text></g><g><title>iri_string::normalize::remove_dot_segments::RemoveDotSegPath::pop_first_segment (24 samples, 7.04%)</title><rect x="90.0293%" y="1061" width="7.0381%" height="15" fill="rgb(215,211,28)" fg:x="307" fg:w="24"/><text x="90.2793%" y="1071.50">iri_strin..</text></g><g><title>iri_string::normalize::remove_dot_segments::RemoveDotSegPath::trim_leading_slash (2 samples, 0.59%)</title><rect x="96.4809%" y="1045" width="0.5865%" height="15" fill="rgb(238,59,32)" fg:x="329" fg:w="2"/><text x="96.7309%" y="1055.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_prefix (2 samples, 0.59%)</title><rect x="96.4809%" y="1029" width="0.5865%" height="15" fill="rgb(226,82,3)" fg:x="329" fg:w="2"/><text x="96.7309%" y="1039.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::strip_prefix_of (2 samples, 0.59%)</title><rect x="96.4809%" y="1013" width="0.5865%" height="15" fill="rgb(240,164,32)" fg:x="329" fg:w="2"/><text x="96.7309%" y="1023.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_prefix_of (2 samples, 0.59%)</title><rect x="96.4809%" y="997" width="0.5865%" height="15" fill="rgb(232,46,7)" fg:x="329" fg:w="2"/><text x="96.7309%" y="1007.50"></text></g><g><title>iri_string::normalize::remove_dot_segments::RemoveDotSegPath::starts_with_slash (3 samples, 0.88%)</title><rect x="97.0674%" y="1061" width="0.8798%" height="15" fill="rgb(229,129,53)" fg:x="331" fg:w="3"/><text x="97.3174%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (2 samples, 0.59%)</title><rect x="97.3607%" y="1045" width="0.5865%" height="15" fill="rgb(234,188,29)" fg:x="332" fg:w="2"/><text x="97.6107%" y="1055.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_prefix_of (2 samples, 0.59%)</title><rect x="97.3607%" y="1029" width="0.5865%" height="15" fill="rgb(246,141,4)" fg:x="332" fg:w="2"/><text x="97.6107%" y="1039.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (2 samples, 0.59%)</title><rect x="97.3607%" y="1013" width="0.5865%" height="15" fill="rgb(229,23,39)" fg:x="332" fg:w="2"/><text x="97.6107%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (2 samples, 0.59%)</title><rect x="97.3607%" y="997" width="0.5865%" height="15" fill="rgb(206,12,3)" fg:x="332" fg:w="2"/><text x="97.6107%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.29%)</title><rect x="97.6540%" y="981" width="0.2933%" height="15" fill="rgb(252,226,20)" fg:x="333" fg:w="1"/><text x="97.9040%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.29%)</title><rect x="97.6540%" y="965" width="0.2933%" height="15" fill="rgb(216,123,35)" fg:x="333" fg:w="1"/><text x="97.9040%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.29%)</title><rect x="97.6540%" y="949" width="0.2933%" height="15" fill="rgb(212,68,40)" fg:x="333" fg:w="1"/><text x="97.9040%" y="959.50"></text></g><g><title>__libc_start_main_impl (335 samples, 98.24%)</title><rect x="0.2933%" y="1429" width="98.2405%" height="15" fill="rgb(254,125,32)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1439.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (335 samples, 98.24%)</title><rect x="0.2933%" y="1413" width="98.2405%" height="15" fill="rgb(253,97,22)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1423.50">__libc_start_call_main</text></g><g><title>main (335 samples, 98.24%)</title><rect x="0.2933%" y="1397" width="98.2405%" height="15" fill="rgb(241,101,14)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1407.50">main</text></g><g><title>std::rt::lang_start_internal (335 samples, 98.24%)</title><rect x="0.2933%" y="1381" width="98.2405%" height="15" fill="rgb(238,103,29)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1391.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (335 samples, 98.24%)</title><rect x="0.2933%" y="1365" width="98.2405%" height="15" fill="rgb(233,195,47)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1375.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (335 samples, 98.24%)</title><rect x="0.2933%" y="1349" width="98.2405%" height="15" fill="rgb(246,218,30)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1359.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (335 samples, 98.24%)</title><rect x="0.2933%" y="1333" width="98.2405%" height="15" fill="rgb(219,145,47)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1343.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (335 samples, 98.24%)</title><rect x="0.2933%" y="1317" width="98.2405%" height="15" fill="rgb(243,12,26)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1327.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (335 samples, 98.24%)</title><rect x="0.2933%" y="1301" width="98.2405%" height="15" fill="rgb(214,87,16)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1311.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (335 samples, 98.24%)</title><rect x="0.2933%" y="1285" width="98.2405%" height="15" fill="rgb(208,99,42)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1295.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (335 samples, 98.24%)</title><rect x="0.2933%" y="1269" width="98.2405%" height="15" fill="rgb(253,99,2)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1279.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (335 samples, 98.24%)</title><rect x="0.2933%" y="1253" width="98.2405%" height="15" fill="rgb(220,168,23)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1263.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (335 samples, 98.24%)</title><rect x="0.2933%" y="1237" width="98.2405%" height="15" fill="rgb(242,38,24)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1247.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (335 samples, 98.24%)</title><rect x="0.2933%" y="1221" width="98.2405%" height="15" fill="rgb(225,182,9)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1231.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (335 samples, 98.24%)</title><rect x="0.2933%" y="1205" width="98.2405%" height="15" fill="rgb(243,178,37)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1215.50">core::ops::function::FnOnce::call_once</text></g><g><title>new::main (335 samples, 98.24%)</title><rect x="0.2933%" y="1189" width="98.2405%" height="15" fill="rgb(232,139,19)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1199.50">new::main</text></g><g><title>iri_string::resolve::resolve (335 samples, 98.24%)</title><rect x="0.2933%" y="1173" width="98.2405%" height="15" fill="rgb(225,201,24)" fg:x="1" fg:w="335"/><text x="0.5433%" y="1183.50">iri_string::resolve::resolve</text></g><g><title>iri_string::resolve::FixedBaseResolver&lt;S&gt;::resolve (268 samples, 78.59%)</title><rect x="19.9413%" y="1157" width="78.5924%" height="15" fill="rgb(221,47,46)" fg:x="68" fg:w="268"/><text x="20.1913%" y="1167.50">iri_string::resolve::FixedBaseResolver&lt;S&gt;::resolve</text></g><g><title>iri_string::resolve::FixedBaseResolver&lt;S&gt;::resolve_to_buffer (220 samples, 64.52%)</title><rect x="34.0176%" y="1141" width="64.5161%" height="15" fill="rgb(249,23,13)" fg:x="116" fg:w="220"/><text x="34.2676%" y="1151.50">iri_string::resolve::FixedBaseResolver&lt;S&gt;::resolve_to_buffer</text></g><g><title>iri_string::resolve::ResolutionTask&lt;S&gt;::write_to_buf (62 samples, 18.18%)</title><rect x="80.3519%" y="1125" width="18.1818%" height="15" fill="rgb(219,9,5)" fg:x="274" fg:w="62"/><text x="80.6019%" y="1135.50">iri_string::resolve::Resolut..</text></g><g><title>iri_string::resolve::ResolutionTaskCommon::write_to_buf (60 samples, 17.60%)</title><rect x="80.9384%" y="1109" width="17.5953%" height="15" fill="rgb(254,171,16)" fg:x="276" fg:w="60"/><text x="81.1884%" y="1119.50">iri_string::resolve::Resolu..</text></g><g><title>iri_string::normalize::remove_dot_segments::RemoveDotSegPath::merge_and_remove_dot_segments (50 samples, 14.66%)</title><rect x="83.8710%" y="1093" width="14.6628%" height="15" fill="rgb(230,171,20)" fg:x="286" fg:w="50"/><text x="84.1210%" y="1103.50">iri_string::normalize:..</text></g><g><title>iri_string::normalize::remove_dot_segments::RemoveDotSegPath::merge_and_remove_dot_segments_impl (49 samples, 14.37%)</title><rect x="84.1642%" y="1077" width="14.3695%" height="15" fill="rgb(210,71,41)" fg:x="287" fg:w="49"/><text x="84.4142%" y="1087.50">iri_string::normalize:..</text></g><g><title>iri_string::normalize::remove_dot_segments::pop_last_seg_and_preceding_slash (2 samples, 0.59%)</title><rect x="97.9472%" y="1061" width="0.5865%" height="15" fill="rgb(206,173,20)" fg:x="334" fg:w="2"/><text x="98.1972%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (1 samples, 0.29%)</title><rect x="98.2405%" y="1045" width="0.2933%" height="15" fill="rgb(233,88,34)" fg:x="335" fg:w="1"/><text x="98.4905%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.5337%" y="1413" width="0.2933%" height="15" fill="rgb(223,209,46)" fg:x="336" fg:w="1"/><text x="98.7837%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.5337%" y="1397" width="0.2933%" height="15" fill="rgb(250,43,18)" fg:x="336" fg:w="1"/><text x="98.7837%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.5337%" y="1381" width="0.2933%" height="15" fill="rgb(208,13,10)" fg:x="336" fg:w="1"/><text x="98.7837%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.5337%" y="1365" width="0.2933%" height="15" fill="rgb(212,200,36)" fg:x="336" fg:w="1"/><text x="98.7837%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.5337%" y="1349" width="0.2933%" height="15" fill="rgb(225,90,30)" fg:x="336" fg:w="1"/><text x="98.7837%" y="1359.50"></text></g><g><title>__rtld_malloc_init_stubs (1 samples, 0.29%)</title><rect x="98.8270%" y="1413" width="0.2933%" height="15" fill="rgb(236,182,39)" fg:x="337" fg:w="1"/><text x="99.0770%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.8270%" y="1397" width="0.2933%" height="15" fill="rgb(212,144,35)" fg:x="337" fg:w="1"/><text x="99.0770%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.8270%" y="1381" width="0.2933%" height="15" fill="rgb(228,63,44)" fg:x="337" fg:w="1"/><text x="99.0770%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.8270%" y="1365" width="0.2933%" height="15" fill="rgb(228,109,6)" fg:x="337" fg:w="1"/><text x="99.0770%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.8270%" y="1349" width="0.2933%" height="15" fill="rgb(238,117,24)" fg:x="337" fg:w="1"/><text x="99.0770%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.8270%" y="1333" width="0.2933%" height="15" fill="rgb(242,26,26)" fg:x="337" fg:w="1"/><text x="99.0770%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="98.8270%" y="1317" width="0.2933%" height="15" fill="rgb(221,92,48)" fg:x="337" fg:w="1"/><text x="99.0770%" y="1327.50"></text></g><g><title>_dl_start_final (1 samples, 0.29%)</title><rect x="99.1202%" y="1413" width="0.2933%" height="15" fill="rgb(209,209,32)" fg:x="338" fg:w="1"/><text x="99.3702%" y="1423.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.29%)</title><rect x="99.1202%" y="1397" width="0.2933%" height="15" fill="rgb(221,70,22)" fg:x="338" fg:w="1"/><text x="99.3702%" y="1407.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.29%)</title><rect x="99.1202%" y="1381" width="0.2933%" height="15" fill="rgb(248,145,5)" fg:x="338" fg:w="1"/><text x="99.3702%" y="1391.50"></text></g><g><title>get_next_env (1 samples, 0.29%)</title><rect x="99.1202%" y="1365" width="0.2933%" height="15" fill="rgb(226,116,26)" fg:x="338" fg:w="1"/><text x="99.3702%" y="1375.50"></text></g><g><title>elf_get_dynamic_info (1 samples, 0.29%)</title><rect x="99.4135%" y="1413" width="0.2933%" height="15" fill="rgb(244,5,17)" fg:x="339" fg:w="1"/><text x="99.6635%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="99.4135%" y="1397" width="0.2933%" height="15" fill="rgb(252,159,33)" fg:x="339" fg:w="1"/><text x="99.6635%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="99.4135%" y="1381" width="0.2933%" height="15" fill="rgb(206,71,0)" fg:x="339" fg:w="1"/><text x="99.6635%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="99.4135%" y="1365" width="0.2933%" height="15" fill="rgb(233,118,54)" fg:x="339" fg:w="1"/><text x="99.6635%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="99.4135%" y="1349" width="0.2933%" height="15" fill="rgb(234,83,48)" fg:x="339" fg:w="1"/><text x="99.6635%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="99.4135%" y="1333" width="0.2933%" height="15" fill="rgb(228,3,54)" fg:x="339" fg:w="1"/><text x="99.6635%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="99.4135%" y="1317" width="0.2933%" height="15" fill="rgb(226,155,13)" fg:x="339" fg:w="1"/><text x="99.6635%" y="1327.50"></text></g><g><title>all (341 samples, 100%)</title><rect x="0.0000%" y="1477" width="100.0000%" height="15" fill="rgb(241,28,37)" fg:x="0" fg:w="341"/><text x="0.2500%" y="1487.50"></text></g><g><title>new (341 samples, 100.00%)</title><rect x="0.0000%" y="1461" width="100.0000%" height="15" fill="rgb(233,93,10)" fg:x="0" fg:w="341"/><text x="0.2500%" y="1471.50">new</text></g><g><title>_start (341 samples, 100.00%)</title><rect x="0.0000%" y="1445" width="100.0000%" height="15" fill="rgb(225,113,19)" fg:x="0" fg:w="341"/><text x="0.2500%" y="1455.50">_start</text></g><g><title>_dl_start (5 samples, 1.47%)</title><rect x="98.5337%" y="1429" width="1.4663%" height="15" fill="rgb(241,2,18)" fg:x="336" fg:w="5"/><text x="98.7837%" y="1439.50"></text></g><g><title>elf_machine_load_address (1 samples, 0.29%)</title><rect x="99.7067%" y="1413" width="0.2933%" height="15" fill="rgb(228,207,21)" fg:x="340" fg:w="1"/><text x="99.9567%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.29%)</title><rect x="99.7067%" y="1397" width="0.2933%" height="15" fill="rgb(213,211,35)" fg:x="340" fg:w="1"/><text x="99.9567%" y="1407.50"></text></g></svg></svg>